<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [STM32U5x9J-DK_FreeRTOS_Custom\STM32U5x9J-DK_FreeRTOS_Custom.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image STM32U5x9J-DK_FreeRTOS_Custom\STM32U5x9J-DK_FreeRTOS_Custom.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Wed Jun 14 03:06:55 2023
<BR><P>
<H3>Maximum Stack Usage =        932 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
touchgfx::TextArea::draw(touchgfx::Rect const&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...) &rArr; touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[d5]">touchgfx::HAL::getDMAType()</a>
 <LI><a href="#[bb]">touchgfx::HAL::getBlitCaps()</a>
 <LI><a href="#[c9]">touchgfx::HAL::backPorchExited()</a>
 <LI><a href="#[12e]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a>
 <LI><a href="#[de]">touchgfx::HAL::performDisplayOrientationChange()</a>
 <LI><a href="#[d3]">touchgfx::HAL::taskDelay(unsigned short)</a>
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a>
 <LI><a href="#[231]">touchgfx::LCD::supportDynamicBitmapDrawing(touchgfx::Bitmap::BitmapFormat)</a>
 <LI><a href="#[436]">touchgfx::Rect::operator&=(touchgfx::Rect const&)</a>
 <LI><a href="#[1f5]">touchgfx::HALGPU2D::beginFrame()</a>
 <LI><a href="#[3ac]">touchgfx::HALGPU2D::initialize(int)</a>
 <LI><a href="#[1f1]">touchgfx::HALGPU2D::initialize()</a>
 <LI><a href="#[44c]">touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)</a>
 <LI><a href="#[44e]">touchgfx::HALGPU2D::bindExecBuffer()</a>
 <LI><a href="#[b7]">touchgfx::HALGPU2D::lockFrameBuffer()</a>
 <LI><a href="#[450]">touchgfx::HALGPU2D::submitExecBuffer()</a>
 <LI><a href="#[b8]">touchgfx::HALGPU2D::unlockFrameBuffer()</a>
 <LI><a href="#[1f6]">touchgfx::HALGPU2D::endFrame()</a>
 <LI><a href="#[3b0]">touchgfx::HALGPU2D::HALGPU2D__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</a>
 <LI><a href="#[1f0]">touchgfx::HALGPU2D::~HALGPU2D__deallocating()</a>
 <LI><a href="#[453]">touchgfx::LCDGPU2D::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a>
 <LI><a href="#[22d]">touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)</a>
 <LI><a href="#[226]">touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)</a>
 <LI><a href="#[234]">touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</a>
 <LI><a href="#[46a]">touchgfx::LCDGPU2D::setFrameBufferFormat(touchgfx::Bitmap::BitmapFormat)</a>
 <LI><a href="#[239]">touchgfx::LCDGPU2D::bindFrameBufferTexture()</a>
 <LI><a href="#[233]">touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</a>
 <LI><a href="#[454]">touchgfx::LCDGPU2D::blitCopyL8_RGB888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a>
 <LI><a href="#[456]">touchgfx::LCDGPU2D::blitCopyL8_RGB888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a>
 <LI><a href="#[457]">touchgfx::LCDGPU2D::blitCopyL8_RGB888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a>
 <LI><a href="#[455]">touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a>
 <LI><a href="#[458]">touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a>
 <LI><a href="#[459]">touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</a>
 <LI><a href="#[235]">touchgfx::LCDGPU2D::getTextureMapperDrawScanLine(touchgfx::TextureSurface const&, unsigned short, unsigned char)</a>
 <LI><a href="#[22b]">touchgfx::LCDGPU2D::copyAreaFromTFTToClientBuffer(touchgfx::Rect const&)</a>
 <LI><a href="#[22a]">touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)</a>
 <LI><a href="#[229]">touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)</a>
 <LI><a href="#[238]">touchgfx::LCDGPU2D::init()</a>
 <LI><a href="#[1f9]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[1f8]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</a>
 <LI><a href="#[1fb]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[1fa]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</a>
 <LI><a href="#[1fd]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[1fc]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</a>
 <LI><a href="#[1ff]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[1fe]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</a>
 <LI><a href="#[201]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[200]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</a>
 <LI><a href="#[203]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[202]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</a>
 <LI><a href="#[205]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[204]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</a>
 <LI><a href="#[207]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[206]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</a>
 <LI><a href="#[209]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[208]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</a>
 <LI><a href="#[46c]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)</a>
 <LI><a href="#[46d]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</a>
 <LI><a href="#[20b]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[20a]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</a>
 <LI><a href="#[46e]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned char*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)</a>
 <LI><a href="#[46f]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</a>
 <LI><a href="#[20d]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[20c]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</a>
 <LI><a href="#[470]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned int*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)</a>
 <LI><a href="#[471]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</a>
 <LI><a href="#[20f]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[20e]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</a>
 <LI><a href="#[211]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[210]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</a>
 <LI><a href="#[213]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[212]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</a>
 <LI><a href="#[472]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)</a>
 <LI><a href="#[473]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)</a>
 <LI><a href="#[215]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[214]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</a>
 <LI><a href="#[474]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned char*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)</a>
 <LI><a href="#[475]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)</a>
 <LI><a href="#[217]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[216]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</a>
 <LI><a href="#[476]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned int*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)</a>
 <LI><a href="#[477]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)</a>
 <LI><a href="#[219]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[218]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</a>
 <LI><a href="#[478]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)</a>
 <LI><a href="#[479]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</a>
 <LI><a href="#[21b]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[21a]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</a>
 <LI><a href="#[47a]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned char*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)</a>
 <LI><a href="#[47b]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</a>
 <LI><a href="#[21d]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[21c]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</a>
 <LI><a href="#[47c]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned int*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)</a>
 <LI><a href="#[47d]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</a>
 <LI><a href="#[21f]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[21e]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</a>
 <LI><a href="#[47e]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char)</a>
 <LI><a href="#[47f]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)</a>
 <LI><a href="#[221]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[220]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</a>
 <LI><a href="#[480]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned char*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char)</a>
 <LI><a href="#[481]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)</a>
 <LI><a href="#[223]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a>
 <LI><a href="#[222]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</a>
 <LI><a href="#[228]">touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</a>
 <LI><a href="#[227]">touchgfx::LCDGPU2D::blitCopy(unsigned short const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</a>
 <LI><a href="#[22c]">touchgfx::LCDGPU2D::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)</a>
 <LI><a href="#[237]">touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</a>
 <LI><a href="#[497]">touchgfx::LCDGPU2D::LCDGPU2D()</a>
 <LI><a href="#[58a]">touchgfx::LCDGPU2D::LCDGPU2D__sub_object()</a>
 <LI><a href="#[225]">touchgfx::LCDGPU2D::~LCDGPU2D__deallocating()</a>
 <LI><a href="#[437]">touchgfx::Rect::intersect(touchgfx::Rect const&) const</a>
 <LI><a href="#[22f]">touchgfx::LCDGPU2D::framebufferFormat() const</a>
 <LI><a href="#[230]">touchgfx::LCDGPU2D::framebufferStride() const</a>
 <LI><a href="#[22e]">touchgfx::LCDGPU2D::bitDepth() const</a>
 <LI><a href="#[498]">context_reset</a>
 <LI><a href="#[4a1]">lut_buffer_create</a>
 <LI><a href="#[45a]">nema_bind_dst_tex</a>
 <LI><a href="#[463]">nema_bind_src_tex</a>
 <LI><a href="#[4a6]">nema_bind_tex</a>
 <LI><a href="#[49d]">nema_blender_init</a>
 <LI><a href="#[464]">nema_blit</a>
 <LI><a href="#[469]">nema_blit_quad_fit</a>
 <LI><a href="#[483]">nema_blit_rotate</a>
 <LI><a href="#[4b2]">nema_blit_rotate_partial</a>
 <LI><a href="#[46b]">nema_blit_tri_fit</a>
 <LI><a href="#[49e]">nema_cl_add_cmd</a>
 <LI><a href="#[4bd]">nema_cl_bind</a>
 <LI><a href="#[44f]">nema_cl_bind_circular</a>
 <LI><a href="#[44b]">nema_cl_create_sized</a>
 <LI><a href="#[4a8]">nema_cl_get_space</a>
 <LI><a href="#[451]">nema_cl_submit</a>
 <LI><a href="#[4c0]">nema_cl_submit_no_irq</a>
 <LI><a href="#[4be]">nema_cl_unbind</a>
 <LI><a href="#[44d]">nema_cl_wait</a>
 <LI><a href="#[468]">nema_enable_aa</a>
 <LI><a href="#[49f]">nema_enable_depth</a>
 <LI><a href="#[4d8]">nema_enable_gradient</a>
 <LI><a href="#[467]">nema_enable_tiling</a>
 <LI><a href="#[4b0]">nema_f2fx</a>
 <LI><a href="#[45f]">nema_fill_rect</a>
 <LI><a href="#[4dc]">nema_format_size</a>
 <LI><a href="#[4ca]">nema_init</a>
 <LI><a href="#[4b3]">nema_interpolate_tx_ty</a>
 <LI><a href="#[4a9]">nema_load_frag_shader</a>
 <LI><a href="#[4cd]">nema_mat3x3_adj</a>
 <LI><a href="#[4d0]">nema_mat3x3_div_scalar</a>
 <LI><a href="#[4cf]">nema_mat3x3_invert</a>
 <LI><a href="#[4e8]">nema_mat3x3_load_identity</a>
 <LI><a href="#[4ce]">nema_mat3x3_mul</a>
 <LI><a href="#[4ae]">nema_mat3x3_quad_to_rect</a>
 <LI><a href="#[4d1]">nema_mat3x3_square_to_quad</a>
 <LI><a href="#[4d2]">nema_matmul_bypass</a>
 <LI><a href="#[4b1]">nema_raster_quad_fx</a>
 <LI><a href="#[4ad]">nema_raster_rect</a>
 <LI><a href="#[4b4]">nema_raster_triangle_fx</a>
 <LI><a href="#[4d3]">nema_rb_force_flush</a>
 <LI><a href="#[4d4]">nema_rb_init</a>
 <LI><a href="#[4b9]">nema_rb_inline_cmd</a>
 <LI><a href="#[4d5]">nema_rb_reset</a>
 <LI><a href="#[4c1]">nema_rb_submit_cl_id</a>
 <LI><a href="#[4c4]">nema_rb_submit_cmdlist</a>
 <LI><a href="#[4c5]">nema_rb_submit_cmdlist2</a>
 <LI><a href="#[4aa]">nema_readHwConfig</a>
 <LI><a href="#[4a0]">nema_readHwConfigH</a>
 <LI><a href="#[45d]">nema_rgba</a>
 <LI><a href="#[45c]">nema_set_blend</a>
 <LI><a href="#[45b]">nema_set_clip</a>
 <LI><a href="#[45e]">nema_set_const_color</a>
 <LI><a href="#[4da]">nema_set_const_reg</a>
 <LI><a href="#[4c6]">nema_set_depth_ctrl</a>
 <LI><a href="#[4bb]">nema_set_error</a>
 <LI><a href="#[4d9]">nema_set_frag_ptr</a>
 <LI><a href="#[49c]">nema_set_interrupt_ctrl</a>
 <LI><a href="#[4af]">nema_set_matrix</a>
 <LI><a href="#[4ac]">nema_set_matrix_translate</a>
 <LI><a href="#[4c9]">nema_set_raster_color</a>
 <LI><a href="#[4ab]">nema_set_rop_blend_mode</a>
 <LI><a href="#[4db]">nema_set_rop_const_color</a>
 <LI><a href="#[466]">nema_set_tex_color</a>
 <LI><a href="#[4a7]">nema_stride_size</a>
 <LI><a href="#[4e5]">nema_vg_get_context</a>
 <LI><a href="#[4e6]">nema_vg_get_stencil</a>
 <LI><a href="#[4de]">nema_vg_grad_create</a>
 <LI><a href="#[528]">nema_vg_init</a>
 <LI><a href="#[4df]">nema_vg_init_stencil_pool</a>
 <LI><a href="#[4e1]">nema_vg_init_stencil_prealloc</a>
 <LI><a href="#[4e7]">nema_vg_paint_clear</a>
 <LI><a href="#[4ea]">nema_vg_paint_create</a>
 <LI><a href="#[4eb]">nema_vg_path_create</a>
 <LI><a href="#[4e9]">nema_vg_set_error</a>
 <LI><a href="#[4e4]">set_tsvg_text_max_size</a>
 <LI><a href="#[4e0]">stencil_buffer_create</a>
 <LI><a href="#[4e2]">stencil_buffer_set</a>
 <LI><a href="#[4b7]">tsi_free</a>
 <LI><a href="#[4dd]">tsi_malloc_init_pool</a>
 <LI><a href="#[4b6]">tsi_malloc_pool</a>
 <LI><a href="#[4e3]">tsvg_init</a>
 <LI><a href="#[49a]">init_nema_regs</a>
 <LI><a href="#[4bc]">nema_extend_bound_cl</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[7]">SecureFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">SecureFault_Handler</a><BR>
 <LI><a href="#[30]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[415]">touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[415]">touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)</a><BR>
 <LI><a href="#[43e]">touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[43e]">touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)</a><BR>
 <LI><a href="#[492]">__clang_call_terminate</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[493]">std::terminate()</a><BR>
 <LI><a href="#[491]">__cxa_begin_catch</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[493]">std::terminate()</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[30]">ADC1_2_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[78]">ADC4_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[77]">ADF1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[5]">BusFault_Handler</a> from stm32u5xx_it.o(.text.BusFault_Handler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[53]">COMP_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[82]">CORDIC_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[55]">CRS_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[31]">DAC1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[76]">DCACHE1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[91]">DCACHE2_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[7e]">DCMI_PSSI_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[7d]">DMA2D_IRQHandler</a> from stm32u5xx_it.o(.text.DMA2D_IRQHandler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[90]">DSI_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from stm32u5xx_it.o(.text.DebugMon_Handler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[17]">EXTI0_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[21]">EXTI10_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[22]">EXTI11_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[23]">EXTI12_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[24]">EXTI13_IRQHandler</a> from stm32u5xx_it.o(.text.EXTI13_IRQHandler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[25]">EXTI14_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[26]">EXTI15_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[18]">EXTI1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[19]">EXTI2_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[1a]">EXTI3_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[1b]">EXTI4_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[1c]">EXTI5_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[1d]">EXTI6_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[1e]">EXTI7_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[1f]">EXTI8_IRQHandler</a> from stm32u5xx_it.o(.text.EXTI8_IRQHandler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[20]">EXTI9_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[32]">FDCAN1_IT0_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[33]">FDCAN1_IT1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[12]">FLASH_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[13]">FLASH_S_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[83]">FMAC_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[56]">FMC_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[69]">FPU_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[8d]">GFXMMU_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[28]">GPDMA1_Channel0_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[5d]">GPDMA1_Channel10_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[5e]">GPDMA1_Channel11_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[5f]">GPDMA1_Channel12_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[60]">GPDMA1_Channel13_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[61]">GPDMA1_Channel14_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[62]">GPDMA1_Channel15_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[29]">GPDMA1_Channel1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[2a]">GPDMA1_Channel2_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[2b]">GPDMA1_Channel3_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[2c]">GPDMA1_Channel4_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[2d]">GPDMA1_Channel5_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[2e]">GPDMA1_Channel6_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[2f]">GPDMA1_Channel7_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[5b]">GPDMA1_Channel8_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[5c]">GPDMA1_Channel9_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[8c]">GPU2D_ER_IRQHandler</a> from stm32u5xx_it.o(.text.GPU2D_ER_IRQHandler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[8b]">GPU2D_IRQHandler</a> from stm32u5xx_it.o(.text.GPU2D_IRQHandler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[14]">GTZC_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[98]">HAL_DCACHE_CleanAndInvalidateByAddrCallback</a> from stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_CleanAndInvalidateByAddrCallback) referenced 2 times from stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Init)
 <LI><a href="#[95]">HAL_DCACHE_CleanByAddrCallback</a> from stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_CleanByAddrCallback) referenced 2 times from stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Init)
 <LI><a href="#[94]">HAL_DCACHE_ErrorCallback</a> from stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_ErrorCallback) referenced 2 times from stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Init)
 <LI><a href="#[96]">HAL_DCACHE_InvalidateByAddrCallback</a> from stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_InvalidateByAddrCallback) referenced 2 times from stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Init)
 <LI><a href="#[97]">HAL_DCACHE_InvalidateCompleteCallback</a> from stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_InvalidateCompleteCallback) referenced 2 times from stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Init)
 <LI><a href="#[99]">HAL_DCACHE_MspInit</a> from dcache.o(.text.HAL_DCACHE_MspInit) referenced 2 times from stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Init)
 <LI><a href="#[6a]">HASH_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[8a]">HSPI1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from stm32u5xx_it.o(.text.HardFault_Handler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[43]">I2C1_ER_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[42]">I2C1_EV_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[45]">I2C2_ER_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[44]">I2C2_EV_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[64]">I2C3_ER_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[63]">I2C3_EV_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[6d]">I2C4_ER_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[6e]">I2C4_EV_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[86]">I2C5_ER_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[87]">I2C5_EV_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[88]">I2C6_ER_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[89]">I2C6_EV_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[74]">ICACHE_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[27]">IWDG_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[ab]">IdleTaskHook</a> from touchgfxhal.o(.text.IdleTaskHook) referenced 2 times from app_freertos.o(.text.vApplicationIdleHook)
 <LI><a href="#[79]">LPDMA1_Channel0_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[7a]">LPDMA1_Channel1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[7b]">LPDMA1_Channel2_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[7c]">LPDMA1_Channel3_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[4e]">LPTIM1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[4f]">LPTIM2_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[6b]">LPTIM3_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[75]">LPTIM4_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[4d]">LPUART1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[84]">LSECSSD_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[8f]">LTDC_ER_IRQHandler</a> from stm32u5xx_it.o(.text.LTDC_ER_IRQHandler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[8e]">LTDC_IRQHandler</a> from stm32u5xx_it.o(.text.LTDC_IRQHandler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[6f]">MDF1_FLT0_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[70]">MDF1_FLT1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[71]">MDF1_FLT2_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[72]">MDF1_FLT3_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[80]">MDF1_FLT4_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[81]">MDF1_FLT5_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[4]">MemManage_Handler</a> from stm32u5xx_it.o(.text.MemManage_Handler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from stm32u5xx_it.o(.text.NMI_Handler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[57]">OCTOSPI1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[7f]">OCTOSPI2_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[54]">OTG_HS_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[d]">PVD_PVM_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[58]">PWR_S3WU_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from portasm.o(.text.PendSV_Handler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[11]">RAMCFG_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[15]">RCC_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[16]">RCC_S_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[68]">RNG_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[e]">RTC_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[f]">RTC_S_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[65]">SAI1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[66]">SAI2_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[59]">SDMMC1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[5a]">SDMMC2_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[46]">SPI1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[47]">SPI2_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[6c]">SPI3_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from portasm.o(.text.SVC_Handler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[7]">SecureFault_Handler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[9a]">StartDefaultTask</a> from app_freertos.o(.text.StartDefaultTask) referenced 2 times from app_freertos.o(.text.MX_FREERTOS_Init)
 <LI><a href="#[b]">SysTick_Handler</a> from cmsis_os2.o(.text.SysTick_Handler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[92]">SystemInit</a> from system_stm32u5xx.o(.text.SystemInit) referenced from startup_stm32u599xx.o(.text)
 <LI><a href="#[10]">TAMP_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[50]">TIM15_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[51]">TIM16_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[52]">TIM17_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[34]">TIM1_BRK_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[37]">TIM1_CC_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[36]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[35]">TIM1_UP_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[38]">TIM2_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[39]">TIM3_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[3a]">TIM4_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[3b]">TIM5_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[3c]">TIM6_IRQHandler</a> from stm32u5xx_it.o(.text.TIM6_IRQHandler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[3d]">TIM7_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[3e]">TIM8_BRK_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[41]">TIM8_CC_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[40]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[3f]">TIM8_UP_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[67]">TSC_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[9b]">TouchGFX_Task</a> from app_touchgfx.o(.text.TouchGFX_Task) referenced 2 times from app_freertos.o(.text.MX_FREERTOS_Init)
 <LI><a href="#[4b]">UART4_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[4c]">UART5_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[73]">UCPD1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[48]">USART1_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[49]">USART2_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[4a]">USART3_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[85]">USART6_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[6]">UsageFault_Handler</a> from stm32u5xx_it.o(.text.UsageFault_Handler) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[c]">WWDG_IRQHandler</a> from startup_stm32u599xx.o(.text) referenced from startup_stm32u599xx.o(RESET)
 <LI><a href="#[26f]">_GLOBAL__sub_I_TouchGFXConfiguration.cpp</a> from touchgfxconfiguration.o(.text._GLOBAL__sub_I_TouchGFXConfiguration.cpp) referenced from touchgfxconfiguration.o(.init_array)
 <LI><a href="#[26e]">_GLOBAL__sub_I_TouchGFXHAL.cpp</a> from touchgfxhal.o(.text._GLOBAL__sub_I_TouchGFXHAL.cpp) referenced from touchgfxhal.o(.init_array)
 <LI><a href="#[270]">_GLOBAL__sub_I_typedtextdatabase.cpp</a> from typedtextdatabase.o(.text._GLOBAL__sub_I_typedtextdatabase.cpp) referenced from typedtextdatabase.o(.init_array)
 <LI><a href="#[a3]">DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*)</a> from stm32dma.o(.text._ZL22DMA2D_XferCpltCallbackP21__DMA2D_HandleTypeDef) referenced 2 times from stm32dma.o(.text._ZN8STM32DMA10initializeEv)
 <LI><a href="#[d9]">TouchGFXHAL::beginFrame()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL10beginFrameEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b1]">TouchGFXHAL::initialize()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL10initializeEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[cb]">TouchGFXHAL::enableInterrupts()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL16enableInterruptsEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b4]">TouchGFXHAL::flushFrameBuffer(touchgfx::Rect const&)</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b3]">TouchGFXHAL::flushFrameBuffer()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[cc]">TouchGFXHAL::disableInterrupts()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL17disableInterruptsEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[db]">TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL17setTFTFrameBufferEPt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[ca]">TouchGFXHAL::configureInterrupts()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL19configureInterruptsEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[cd]">TouchGFXHAL::enableLCDControllerInterrupt()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL28enableLCDControllerInterruptEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[cf]">TouchGFXHAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[da]">TouchGFXHAL::endFrame()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL8endFrameEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[ba]">TouchGFXHAL::blockCopy(void*, void const*, unsigned int)</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL9blockCopyEPvPKvj) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[ae]">TouchGFXHAL::~TouchGFXHAL__deallocating()</a> from touchgfxhal.o(.text._ZN11TouchGFXHALD0Ev) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[a9]">TouchGFXHAL::~TouchGFXHAL__sub_object()</a> from touchgfxhal.o(.text._ZN11TouchGFXHALD2Ev) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[a9]">TouchGFXHAL::~TouchGFXHAL__sub_object()</a> from touchgfxhal.o(.text._ZN11TouchGFXHALD2Ev) referenced 2 times from touchgfxconfiguration.o(.text.__cxx_global_var_init.4)
 <LI><a href="#[e1]">FrontendHeap::~FrontendHeap__deallocating()</a> from touchgfxconfiguration.o(.text._ZN12FrontendHeapD0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
 <LI><a href="#[9f]">FrontendHeap::~FrontendHeap__sub_object()</a> from touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
 <LI><a href="#[9f]">FrontendHeap::~FrontendHeap__sub_object()</a> from touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev) referenced 2 times from touchgfxconfiguration.o(.text._ZN12FrontendHeap11getInstanceEv)
 <LI><a href="#[e6]">ModelListener::modelUpdateFPS(unsigned short)</a> from fontscreenpresenter.o(.text._ZN13ModelListener14modelUpdateFPSEt) referenced from fontscreenpresenter.o(.rodata._ZTV13ModelListener)
 <LI><a href="#[e6]">ModelListener::modelUpdateFPS(unsigned short)</a> from fontscreenpresenter.o(.text._ZN13ModelListener14modelUpdateFPSEt) referenced from fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
 <LI><a href="#[e6]">ModelListener::modelUpdateFPS(unsigned short)</a> from fontscreenpresenter.o(.text._ZN13ModelListener14modelUpdateFPSEt) referenced from mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
 <LI><a href="#[e5]">ModelListener::modelUpdateMCU(unsigned short)</a> from fontscreenpresenter.o(.text._ZN13ModelListener14modelUpdateMCUEt) referenced from fontscreenpresenter.o(.rodata._ZTV13ModelListener)
 <LI><a href="#[e5]">ModelListener::modelUpdateMCU(unsigned short)</a> from fontscreenpresenter.o(.text._ZN13ModelListener14modelUpdateMCUEt) referenced from fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
 <LI><a href="#[e5]">ModelListener::modelUpdateMCU(unsigned short)</a> from fontscreenpresenter.o(.text._ZN13ModelListener14modelUpdateMCUEt) referenced from mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
 <LI><a href="#[e4]">ModelListener::~ModelListener__deallocating()</a> from fontscreenpresenter.o(.text._ZN13ModelListenerD0Ev) referenced from fontscreenpresenter.o(.rodata._ZTV13ModelListener)
 <LI><a href="#[e3]">ModelListener::~ModelListener__sub_object()</a> from fontscreenpresenter.o(.text._ZN13ModelListenerD2Ev) referenced from fontscreenpresenter.o(.rodata._ZTV13ModelListener)
 <LI><a href="#[ea]">FontScreenView::setupScreen()</a> from fontscreenview.o(.text._ZN14FontScreenView11setupScreenEv) referenced from fontscreenview.o(.rodata._ZTV14FontScreenView)
 <LI><a href="#[ec]">FontScreenView::tearDownScreen()</a> from fontscreenview.o(.text._ZN14FontScreenView14tearDownScreenEv) referenced from fontscreenview.o(.rodata._ZTV14FontScreenView)
 <LI><a href="#[f0]">FontScreenView::handleTickEvent()</a> from fontscreenview.o(.text._ZN14FontScreenView15handleTickEventEv) referenced from fontscreenview.o(.rodata._ZTV14FontScreenView)
 <LI><a href="#[f2]">FontScreenView::FusionFontTextUpdate()</a> from fontscreenview.o(.text._ZN14FontScreenView20FusionFontTextUpdateEv) referenced from fontscreenview.o(.rodata._ZTV14FontScreenView)
 <LI><a href="#[e8]">FontScreenView::~FontScreenView__deallocating()</a> from fontscreenview.o(.text._ZN14FontScreenViewD0Ev) referenced from fontscreenview.o(.rodata._ZTV14FontScreenView)
 <LI><a href="#[e7]">FontScreenView::~FontScreenView__sub_object()</a> from fontscreenview.o(.text._ZN14FontScreenViewD2Ev) referenced from fontscreenview.o(.rodata._ZTV14FontScreenView)
 <LI><a href="#[f5]">MainScreenView::setupScreen()</a> from mainscreenview.o(.text._ZN14MainScreenView11setupScreenEv) referenced from mainscreenview.o(.rodata._ZTV14MainScreenView)
 <LI><a href="#[f6]">MainScreenView::tearDownScreen()</a> from mainscreenview.o(.text._ZN14MainScreenView14tearDownScreenEv) referenced from mainscreenview.o(.rodata._ZTV14MainScreenView)
 <LI><a href="#[f7]">MainScreenView::handleTickEvent()</a> from mainscreenview.o(.text._ZN14MainScreenView15handleTickEventEv) referenced from mainscreenview.o(.rodata._ZTV14MainScreenView)
 <LI><a href="#[f4]">MainScreenView::~MainScreenView__deallocating()</a> from mainscreenview.o(.text._ZN14MainScreenViewD0Ev) referenced from mainscreenview.o(.rodata._ZTV14MainScreenView)
 <LI><a href="#[f3]">MainScreenView::~MainScreenView__sub_object()</a> from mainscreenview.o(.text._ZN14MainScreenViewD2Ev) referenced from mainscreenview.o(.rodata._ZTV14MainScreenView)
 <LI><a href="#[e2]">FrontendHeapBase::gotoStartScreen(FrontendApplication&)</a> from touchgfxconfiguration.o(.text._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication) referenced from touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
 <LI><a href="#[e2]">FrontendHeapBase::gotoStartScreen(FrontendApplication&)</a> from touchgfxconfiguration.o(.text._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication) referenced from touchgfxconfiguration.o(.rodata._ZTV16FrontendHeapBase)
 <LI><a href="#[fa]">FrontendHeapBase::~FrontendHeapBase__deallocating()</a> from touchgfxconfiguration.o(.text._ZN16FrontendHeapBaseD0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTV16FrontendHeapBase)
 <LI><a href="#[f9]">FrontendHeapBase::~FrontendHeapBase__sub_object()</a> from touchgfxconfiguration.o(.text._ZN16FrontendHeapBaseD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTV16FrontendHeapBase)
 <LI><a href="#[fd]">FontScreenViewBase::setupScreen()</a> from fontscreenviewbase.o(.text._ZN18FontScreenViewBase11setupScreenEv) referenced from fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
 <LI><a href="#[f1]">FontScreenViewBase::handleKeyEvent(unsigned char)</a> from fontscreenviewbase.o(.text._ZN18FontScreenViewBase14handleKeyEventEh) referenced from fontscreenview.o(.rodata._ZTV14FontScreenView)
 <LI><a href="#[f1]">FontScreenViewBase::handleKeyEvent(unsigned char)</a> from fontscreenviewbase.o(.text._ZN18FontScreenViewBase14handleKeyEventEh) referenced from fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
 <LI><a href="#[fc]">FontScreenViewBase::~FontScreenViewBase__deallocating()</a> from fontscreenviewbase.o(.text._ZN18FontScreenViewBaseD0Ev) referenced from fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
 <LI><a href="#[fb]">FontScreenViewBase::~FontScreenViewBase()</a> from fontscreenviewbase.o(.text._ZN18FontScreenViewBaseD2Ev) referenced from fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
 <LI><a href="#[102]">MainScreenViewBase::setupScreen()</a> from mainscreenviewbase.o(.text._ZN18MainScreenViewBase11setupScreenEv) referenced from mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
 <LI><a href="#[f8]">MainScreenViewBase::handleKeyEvent(unsigned char)</a> from mainscreenviewbase.o(.text._ZN18MainScreenViewBase14handleKeyEventEh) referenced from mainscreenview.o(.rodata._ZTV14MainScreenView)
 <LI><a href="#[f8]">MainScreenViewBase::handleKeyEvent(unsigned char)</a> from mainscreenviewbase.o(.text._ZN18MainScreenViewBase14handleKeyEventEh) referenced from mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
 <LI><a href="#[101]">MainScreenViewBase::~MainScreenViewBase__deallocating()</a> from mainscreenviewbase.o(.text._ZN18MainScreenViewBaseD0Ev) referenced from mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
 <LI><a href="#[100]">MainScreenViewBase::~MainScreenViewBase()</a> from mainscreenviewbase.o(.text._ZN18MainScreenViewBaseD2Ev) referenced from mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
 <LI><a href="#[104]">FontScreenPresenter::deactivate()</a> from fontscreenpresenter.o(.text._ZN19FontScreenPresenter10deactivateEv) referenced from fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
 <LI><a href="#[103]">FontScreenPresenter::activate()</a> from fontscreenpresenter.o(.text._ZN19FontScreenPresenter8activateEv) referenced from fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
 <LI><a href="#[106]">FontScreenPresenter::~FontScreenPresenter__deallocating()</a> from fontscreenpresenter.o(.text._ZN19FontScreenPresenterD0Ev) referenced from fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
 <LI><a href="#[105]">FontScreenPresenter::~FontScreenPresenter__sub_object()</a> from fontscreenpresenter.o(.text._ZN19FontScreenPresenterD2Ev) referenced from fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
 <LI><a href="#[10d]">FrontendApplication::handleTickEvent()</a> from frontendapplication.o(.text._ZN19FrontendApplication15handleTickEventEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[110]">FrontendApplication::~FrontendApplication__deallocating()</a> from frontendapplication.o(.text._ZN19FrontendApplicationD0Ev) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[10f]">FrontendApplication::~FrontendApplication__sub_object()</a> from touchgfxconfiguration.o(.text._ZN19FrontendApplicationD2Ev) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[11b]">MainScreenPresenter::deactivate()</a> from mainscreenpresenter.o(.text._ZN19MainScreenPresenter10deactivateEv) referenced from mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
 <LI><a href="#[11a]">MainScreenPresenter::activate()</a> from mainscreenpresenter.o(.text._ZN19MainScreenPresenter8activateEv) referenced from mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
 <LI><a href="#[11d]">MainScreenPresenter::~MainScreenPresenter__deallocating()</a> from mainscreenpresenter.o(.text._ZN19MainScreenPresenterD0Ev) referenced from mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
 <LI><a href="#[11c]">MainScreenPresenter::~MainScreenPresenter__sub_object()</a> from mainscreenpresenter.o(.text._ZN19MainScreenPresenterD2Ev) referenced from mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
 <LI><a href="#[122]">STM32TouchController::sampleTouch(int&, int&)</a> from stm32touchcontroller.o(.text._ZN20STM32TouchController11sampleTouchERiS0_) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[121]">STM32TouchController::init()</a> from stm32touchcontroller.o(.text._ZN20STM32TouchController4initEv) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[120]">STM32TouchController::~STM32TouchController__deallocating()</a> from stm32touchcontroller.o(.text._ZN20STM32TouchControllerD0Ev) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[a5]">STM32TouchController::~STM32TouchController__sub_object()</a> from stm32touchcontroller.o(.text._ZN20STM32TouchControllerD2Ev) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[a5]">STM32TouchController::~STM32TouchController__sub_object()</a> from stm32touchcontroller.o(.text._ZN20STM32TouchControllerD2Ev) referenced 2 times from touchgfxconfiguration.o(.text.__cxx_global_var_init)
 <LI><a href="#[12f]">TouchGFXGeneratedHAL::beginFrame()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL10beginFrameEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[125]">TouchGFXGeneratedHAL::initialize()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL10initializeEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[12b]">TouchGFXGeneratedHAL::enableInterrupts()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL16enableInterruptsEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[127]">TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[126]">TouchGFXGeneratedHAL::flushFrameBuffer()</a> from touchgfxhal.o(.text._ZN20TouchGFXGeneratedHAL16flushFrameBufferEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[12c]">TouchGFXGeneratedHAL::disableInterrupts()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL17disableInterruptsEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[131]">TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[12a]">TouchGFXGeneratedHAL::configureInterrupts()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL19configureInterruptsEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[12d]">TouchGFXGeneratedHAL::enableLCDControllerInterrupt()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[130]">TouchGFXGeneratedHAL::endFrame()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL8endFrameEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[129]">TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int)</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvj) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[124]">TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHALD0Ev) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[123]">TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object()</a> from touchgfxhal.o(.text._ZN20TouchGFXGeneratedHALD2Ev) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[132]">ApplicationFontProvider::getFont(unsigned short)</a> from applicationfontprovider.o(.text._ZN23ApplicationFontProvider7getFontEt) referenced from applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
 <LI><a href="#[133]">ApplicationFontProvider::~ApplicationFontProvider__deallocating()</a> from applicationfontprovider.o(.text._ZN23ApplicationFontProviderD0Ev) referenced from applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
 <LI><a href="#[a8]">ApplicationFontProvider::~ApplicationFontProvider__sub_object()</a> from touchgfxconfiguration.o(.text._ZN23ApplicationFontProviderD2Ev) referenced from applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
 <LI><a href="#[a8]">ApplicationFontProvider::~ApplicationFontProvider__sub_object()</a> from touchgfxconfiguration.o(.text._ZN23ApplicationFontProviderD2Ev) referenced 2 times from touchgfxconfiguration.o(.text.__cxx_global_var_init.3)
 <LI><a href="#[111]">FrontendApplicationBase::changeToStartScreen()</a> from frontendapplication.o(.text._ZN23FrontendApplicationBase19changeToStartScreenEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[111]">FrontendApplicationBase::changeToStartScreen()</a> from frontendapplication.o(.text._ZN23FrontendApplicationBase19changeToStartScreenEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[a0]">FrontendApplicationBase::gotoMainScreenScreenNoTransitionImpl()</a> from frontendapplicationbase.o(.text._ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv) referenced 2 times from frontendapplicationbase.o(.text._ZN23FrontendApplicationBase32gotoMainScreenScreenNoTransitionEv)
 <LI><a href="#[a1]">FrontendApplicationBase::gotoFontScreenScreenSlideTransitionEastImpl()</a> from frontendapplicationbase.o(.text._ZN23FrontendApplicationBase43gotoFontScreenScreenSlideTransitionEastImplEv) referenced 2 times from frontendapplicationbase.o(.text._ZN23FrontendApplicationBase39gotoFontScreenScreenSlideTransitionEastEv)
 <LI><a href="#[a2]">FrontendApplicationBase::gotoMainScreenScreenSlideTransitionEastImpl()</a> from frontendapplicationbase.o(.text._ZN23FrontendApplicationBase43gotoMainScreenScreenSlideTransitionEastImplEv) referenced 2 times from frontendapplicationbase.o(.text._ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionEastEv)
 <LI><a href="#[136]">FrontendApplicationBase::~FrontendApplicationBase__deallocating()</a> from frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[135]">FrontendApplicationBase::~FrontendApplicationBase__sub_object()</a> from touchgfxconfiguration.o(.text._ZN23FrontendApplicationBaseD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[13d]">STM32DMA::getDMAType()</a> from stm32dma.o(.text._ZN8STM32DMA10getDMATypeEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[13a]">STM32DMA::initialize()</a> from stm32dma.o(.text._ZN8STM32DMA10initializeEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[137]">STM32DMA::getBlitCaps()</a> from stm32dma.o(.text._ZN8STM32DMA11getBlitCapsEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[142]">STM32DMA::setupDataCopy(touchgfx::BlitOp const&)</a> from stm32dma.o(.text._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[143]">STM32DMA::setupDataFill(touchgfx::BlitOp const&)</a> from stm32dma.o(.text._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[13c]">STM32DMA::signalDMAInterrupt()</a> from stm32dma.o(.text._ZN8STM32DMA18signalDMAInterruptEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[13e]">STM32DMA::~STM32DMA__deallocating()</a> from stm32dma.o(.text._ZN8STM32DMAD0Ev) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[a6]">STM32DMA::~STM32DMA()</a> from stm32dma.o(.text._ZN8STM32DMAD2Ev) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[a6]">STM32DMA::~STM32DMA()</a> from stm32dma.o(.text._ZN8STM32DMAD2Ev) referenced 2 times from touchgfxconfiguration.o(.text.__cxx_global_var_init.1)
 <LI><a href="#[149]">touchgfx::ClickEvent::~ClickEvent__deallocating()</a> from screen.o(.text._ZN8touchgfx10ClickEventD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
 <LI><a href="#[14c]">touchgfx::KeySampler::init()</a> from keysampler.o(.text._ZN8touchgfx10KeySampler4initEv) referenced from keysampler.o(.rodata._ZTVN8touchgfx10KeySamplerE)
 <LI><a href="#[14d]">touchgfx::KeySampler::sample(unsigned char&)</a> from keysampler.o(.text._ZN8touchgfx10KeySampler6sampleERh) referenced from keysampler.o(.rodata._ZTVN8touchgfx10KeySamplerE)
 <LI><a href="#[14b]">touchgfx::KeySampler::~KeySampler__deallocating()</a> from keysampler.o(.text._ZN8touchgfx10KeySamplerD0Ev) referenced from keysampler.o(.rodata._ZTVN8touchgfx10KeySamplerE)
 <LI><a href="#[a4]">touchgfx::KeySampler::~KeySampler__sub_object()</a> from keysampler.o(.text._ZN8touchgfx10KeySamplerD2Ev) referenced from keysampler.o(.rodata._ZTVN8touchgfx10KeySamplerE)
 <LI><a href="#[a4]">touchgfx::KeySampler::~KeySampler__sub_object()</a> from keysampler.o(.text._ZN8touchgfx10KeySamplerD2Ev) referenced 2 times from touchgfxhal.o(.text.__cxx_global_var_init)
 <LI><a href="#[154]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[154]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[154]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[151]">touchgfx::Transition::handleTickEvent()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[155]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[155]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[155]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[153]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[153]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[152]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[152]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[150]">touchgfx::Transition::~Transition__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10TransitionD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[14f]">touchgfx::Transition::~Transition__sub_object()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10TransitionD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[112]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[112]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[112]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[112]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[115]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[115]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[115]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[115]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[114]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[114]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[114]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[114]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[10c]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[10c]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[10c]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10c]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[113]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[113]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[113]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[113]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[117]">touchgfx::Application::drawCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[117]">touchgfx::Application::drawCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[117]">touchgfx::Application::drawCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[117]">touchgfx::Application::drawCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[10a]">touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[10a]">touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[10a]">touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10a]">touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[134]">touchgfx::Application::handleTickEvent()</a> from application.o(.text._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[134]">touchgfx::Application::handleTickEvent()</a> from application.o(.text._ZN8touchgfx11Application15handleTickEventEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[134]">touchgfx::Application::handleTickEvent()</a> from application.o(.text._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[116]">touchgfx::Application::clearCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[116]">touchgfx::Application::clearCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[116]">touchgfx::Application::clearCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[116]">touchgfx::Application::clearCachedAreas()</a> from application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[109]">touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[109]">touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[109]">touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[109]">touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[10b]">touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[10b]">touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[10b]">touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10b]">touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[159]">touchgfx::Application::changeToStartScreen()</a> from application.o(.text._ZN8touchgfx11Application19changeToStartScreenEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[159]">touchgfx::Application::changeToStartScreen()</a> from application.o(.text._ZN8touchgfx11Application19changeToStartScreenEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[156]">touchgfx::Application::handlePendingScreenTransition()</a> from application.o(.text._ZN8touchgfx11Application29handlePendingScreenTransitionEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[119]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[119]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[119]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[119]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[118]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[118]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[118]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[118]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[158]">touchgfx::Application::~Application__deallocating()</a> from application.o(.text._ZN8touchgfx11ApplicationD0Ev) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[15a]">touchgfx::GestureEvent::~GestureEvent__deallocating()</a> from screen.o(.text._ZN8touchgfx12GestureEventD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
 <LI><a href="#[15e]">touchgfx::NoTransition::handleTickEvent()</a> from frontendapplicationbase.o(.text._ZN8touchgfx12NoTransition15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[15d]">touchgfx::NoTransition::~NoTransition__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[15c]">touchgfx::NoTransition::~NoTransition__sub_object()</a> from frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[17b]">touchgfx::AnimatedImage::setBitmapEnd(touchgfx::Bitmap const&)</a> from animatedimage.o(.text._ZN8touchgfx13AnimatedImage12setBitmapEndERKNS_6BitmapE) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[179]">touchgfx::AnimatedImage::stopAnimation()</a> from animatedimage.o(.text._ZN8touchgfx13AnimatedImage13stopAnimationEv) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[17a]">touchgfx::AnimatedImage::pauseAnimation()</a> from animatedimage.o(.text._ZN8touchgfx13AnimatedImage14pauseAnimationEv) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[178]">touchgfx::AnimatedImage::startAnimation(bool, bool, bool)</a> from animatedimage.o(.text._ZN8touchgfx13AnimatedImage14startAnimationEbbb) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[173]">touchgfx::AnimatedImage::handleTickEvent()</a> from animatedimage.o(.text._ZN8touchgfx13AnimatedImage15handleTickEventEv) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[177]">touchgfx::AnimatedImage::setBitmap(touchgfx::Bitmap const&)</a> from animatedimage.o(.text._ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[160]">touchgfx::AnimatedImage::~AnimatedImage__deallocating()</a> from animatedimage.o(.text._ZN8touchgfx13AnimatedImageD0Ev) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[138]">touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[138]">touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[17e]">touchgfx::DMA_Interface::getDMAType()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface10getDMATypeEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[17d]">touchgfx::DMA_Interface::initialize()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface10initializeEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[144]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[144]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[145]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[145]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[141]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[141]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[140]">touchgfx::DMA_Interface::executeCompleted()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface16executeCompletedEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[140]">touchgfx::DMA_Interface::executeCompleted()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface16executeCompletedEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[147]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[147]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[146]">touchgfx::DMA_Interface::enableCopyWithTransparentPixels(unsigned char)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface31enableCopyWithTransparentPixelsEh) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[146]">touchgfx::DMA_Interface::enableCopyWithTransparentPixels(unsigned char)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface31enableCopyWithTransparentPixelsEh) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[139]">touchgfx::DMA_Interface::flush()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface5flushEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[139]">touchgfx::DMA_Interface::flush()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface5flushEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[13b]">touchgfx::DMA_Interface::start()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface5startEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[13b]">touchgfx::DMA_Interface::start()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface5startEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[13f]">touchgfx::DMA_Interface::execute()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface7executeEv) referenced from stm32dma.o(.rodata._ZTV8STM32DMA)
 <LI><a href="#[13f]">touchgfx::DMA_Interface::execute()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface7executeEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[180]">touchgfx::DMA_Interface::~DMA_Interface__deallocating()</a> from dma.o(.text._ZN8touchgfx13DMA_InterfaceD0Ev) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[17f]">touchgfx::DMA_Interface::~DMA_Interface__sub_object()</a> from dma.o(.text._ZN8touchgfx13DMA_InterfaceD2Ev) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[181]">touchgfx::GeneratedFont::~GeneratedFont__deallocating()</a> from generatedfont.o(.text._ZN8touchgfx13GeneratedFontD0Ev) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[9d]">touchgfx::GeneratedFont::~GeneratedFont__sub_object()</a> from cachedfont.o(.text._ZN8touchgfx13GeneratedFontD2Ev) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[9d]">touchgfx::GeneratedFont::~GeneratedFont__sub_object()</a> from cachedfont.o(.text._ZN8touchgfx13GeneratedFontD2Ev) referenced 2 times from table_verdana_20_4bpp.o(.text._Z23getFont_verdana_20_4bppv)
 <LI><a href="#[9d]">touchgfx::GeneratedFont::~GeneratedFont__sub_object()</a> from cachedfont.o(.text._ZN8touchgfx13GeneratedFontD2Ev) referenced 2 times from table_verdanab_20_4bpp.o(.text._Z24getFont_verdanab_20_4bppv)
 <LI><a href="#[10e]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[10e]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[10e]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[197]">touchgfx::MVPApplication::~MVPApplication__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx14MVPApplicationD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[196]">touchgfx::MVPApplication::~MVPApplication__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx14MVPApplicationD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[19e]">touchgfx::SnapshotWidget::makeSnapshot(unsigned short)</a> from snapshotwidget.o(.text._ZN8touchgfx14SnapshotWidget12makeSnapshotEt) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[19d]">touchgfx::SnapshotWidget::makeSnapshot()</a> from snapshotwidget.o(.text._ZN8touchgfx14SnapshotWidget12makeSnapshotEv) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[198]">touchgfx::SnapshotWidget::~SnapshotWidget__deallocating()</a> from snapshotwidget.o(.text._ZN8touchgfx14SnapshotWidgetD0Ev) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[1a0]">touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx15GenericCallbackIvvvED0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIvvvEE)
 <LI><a href="#[19f]">touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx15GenericCallbackIvvvED2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIvvvEE)
 <LI><a href="#[1a3]">touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()</a> from frontendapplicationbase.o(.text._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[1a5]">touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::init()</a> from frontendapplicationbase.o(.text._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[1a4]">touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::tearDown()</a> from frontendapplicationbase.o(.text._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[1a2]">touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[1a1]">touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition__sub_object()</a> from frontendapplicationbase.o(.text._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[1a7]">touchgfx::TouchController::~TouchController__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx15TouchControllerD0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx15TouchControllerE)
 <LI><a href="#[1a6]">touchgfx::TouchController::~TouchController__sub_object()</a> from stm32touchcontroller.o(.text._ZN8touchgfx15TouchControllerD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx15TouchControllerE)
 <LI><a href="#[157]">touchgfx::UIEventListener::~UIEventListener__sub_object()</a> from application.o(.text._ZN8touchgfx15UIEventListenerD2Ev) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[14e]">touchgfx::ButtonController::reset()</a> from keysampler.o(.text._ZN8touchgfx16ButtonController5resetEv) referenced from keysampler.o(.rodata._ZTVN8touchgfx10KeySamplerE)
 <LI><a href="#[14e]">touchgfx::ButtonController::reset()</a> from keysampler.o(.text._ZN8touchgfx16ButtonController5resetEv) referenced from touchgfxhal.o(.rodata._ZTVN8touchgfx16ButtonControllerE)
 <LI><a href="#[1a9]">touchgfx::ButtonController::~ButtonController__deallocating()</a> from touchgfxhal.o(.text._ZN8touchgfx16ButtonControllerD0Ev) referenced from touchgfxhal.o(.rodata._ZTVN8touchgfx16ButtonControllerE)
 <LI><a href="#[1a8]">touchgfx::ButtonController::~ButtonController__sub_object()</a> from keysampler.o(.text._ZN8touchgfx16ButtonControllerD2Ev) referenced from touchgfxhal.o(.rodata._ZTVN8touchgfx16ButtonControllerE)
 <LI><a href="#[1ad]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[1ad]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1ad]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1ad]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[1b0]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[1b0]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1b0]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1b0]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[1af]">touchgfx::AbstractPartition::indexOf(void const*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[1af]">touchgfx::AbstractPartition::indexOf(void const*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1af]">touchgfx::AbstractPartition::indexOf(void const*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1af]">touchgfx::AbstractPartition::indexOf(void const*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[1ac]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[1ac]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1ac]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1ac]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[1ab]">touchgfx::AbstractPartition::~AbstractPartition__deallocating()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD0Ev) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[1aa]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[1b3]">touchgfx::LockFreeDMA_Queue::pushCopyOf(touchgfx::BlitOp const&)</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1b6]">touchgfx::LockFreeDMA_Queue::pop()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue3popEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1b7]">touchgfx::LockFreeDMA_Queue::first()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue5firstEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1b2]">touchgfx::LockFreeDMA_Queue::isFull()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue6isFullEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1b1]">touchgfx::LockFreeDMA_Queue::isEmpty()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1b5]">touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueD0Ev) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1ba]">touchgfx::MCUInstrumentation::setMCUActive(bool)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx18MCUInstrumentation12setMCUActiveEb) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx18MCUInstrumentationE)
 <LI><a href="#[1bb]">touchgfx::MCUInstrumentation::getCCConsumed()</a> from cortexmmcuinstrumentation.o(.text._ZN8touchgfx18MCUInstrumentation13getCCConsumedEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx18MCUInstrumentationE)
 <LI><a href="#[1bb]">touchgfx::MCUInstrumentation::getCCConsumed()</a> from cortexmmcuinstrumentation.o(.text._ZN8touchgfx18MCUInstrumentation13getCCConsumedEv) referenced from cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[1bc]">touchgfx::MCUInstrumentation::setCCConsumed(unsigned int)</a> from cortexmmcuinstrumentation.o(.text._ZN8touchgfx18MCUInstrumentation13setCCConsumedEj) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx18MCUInstrumentationE)
 <LI><a href="#[1bc]">touchgfx::MCUInstrumentation::setCCConsumed(unsigned int)</a> from cortexmmcuinstrumentation.o(.text._ZN8touchgfx18MCUInstrumentation13setCCConsumedEj) referenced from cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[1b9]">touchgfx::MCUInstrumentation::~MCUInstrumentation__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx18MCUInstrumentationD0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx18MCUInstrumentationE)
 <LI><a href="#[1b8]">touchgfx::MCUInstrumentation::~MCUInstrumentation__sub_object()</a> from cortexmmcuinstrumentation.o(.text._ZN8touchgfx18MCUInstrumentationD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx18MCUInstrumentationE)
 <LI><a href="#[1be]">touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__deallocating()</a> from fontscreenviewbase.o(.text._ZN8touchgfx23TextAreaWithOneWildcardD0Ev) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1bd]">touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()</a> from fontscreenviewbase.o(.text._ZN8touchgfx23TextAreaWithOneWildcardD2Ev) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1cf]">touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__deallocating()</a> from textareawithwildcard.o(.text._ZN8touchgfx24TextAreaWithWildcardBaseD0Ev) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d5]">touchgfx::CortexMMCUInstrumentation::getCPUCycles()</a> from cortexmmcuinstrumentation.o(.text._ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv) referenced from cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[1d4]">touchgfx::CortexMMCUInstrumentation::getElapsedUS(unsigned int, unsigned int, unsigned int)</a> from cortexmmcuinstrumentation.o(.text._ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj) referenced from cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[1d6]">touchgfx::CortexMMCUInstrumentation::setMCUActive(bool)</a> from cortexmmcuinstrumentation.o(.text._ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb) referenced from cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[1d1]">touchgfx::CortexMMCUInstrumentation::init()</a> from cortexmmcuinstrumentation.o(.text._ZN8touchgfx25CortexMMCUInstrumentation4initEv) referenced from cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[1d3]">touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation__deallocating()</a> from cortexmmcuinstrumentation.o(.text._ZN8touchgfx25CortexMMCUInstrumentationD0Ev) referenced from cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[1d2]">touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation__sub_object()</a> from cortexmmcuinstrumentation.o(.text._ZN8touchgfx25CortexMMCUInstrumentationD2Ev) referenced from cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
 <LI><a href="#[1d7]">touchgfx::Box::~Box__deallocating()</a> from box.o(.text._ZN8touchgfx3BoxD0Ev) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[e0]">touchgfx::HAL::FlushCache()</a> from hal.o(.text._ZN8touchgfx3HAL10FlushCacheEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[e0]">touchgfx::HAL::FlushCache()</a> from hal.o(.text._ZN8touchgfx3HAL10FlushCacheEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[e0]">touchgfx::HAL::FlushCache()</a> from hal.o(.text._ZN8touchgfx3HAL10FlushCacheEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[d5]">touchgfx::HAL::getDMAType()</a> from halgpu2d.o(.text._ZN8touchgfx3HAL10getDMATypeEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[d5]">touchgfx::HAL::getDMAType()</a> from halgpu2d.o(.text._ZN8touchgfx3HAL10getDMATypeEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[d5]">touchgfx::HAL::getDMAType()</a> from halgpu2d.o(.text._ZN8touchgfx3HAL10getDMATypeEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[bb]">touchgfx::HAL::getBlitCaps()</a> from halgpu2d.o(.text._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[bb]">touchgfx::HAL::getBlitCaps()</a> from halgpu2d.o(.text._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[bb]">touchgfx::HAL::getBlitCaps()</a> from halgpu2d.o(.text._ZN8touchgfx3HAL11getBlitCapsEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[bf]">touchgfx::HAL::blitCopyWord(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitCopyWordEPKttttttt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[bf]">touchgfx::HAL::blitCopyWord(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitCopyWordEPKttttttt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[bf]">touchgfx::HAL::blitCopyWord(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitCopyWordEPKttttttt) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[c0]">touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitFillWordEtttttt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c0]">touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitFillWordEtttttt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[c0]">touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL12blitFillWordEtttttt) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[c2]">touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c2]">touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[c2]">touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[df]">touchgfx::HAL::InvalidateCache()</a> from hal.o(.text._ZN8touchgfx3HAL15InvalidateCacheEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[df]">touchgfx::HAL::InvalidateCache()</a> from hal.o(.text._ZN8touchgfx3HAL15InvalidateCacheEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[df]">touchgfx::HAL::InvalidateCache()</a> from hal.o(.text._ZN8touchgfx3HAL15InvalidateCacheEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[c9]">touchgfx::HAL::backPorchExited()</a> from halgpu2d.o(.text._ZN8touchgfx3HAL15backPorchExitedEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c9]">touchgfx::HAL::backPorchExited()</a> from halgpu2d.o(.text._ZN8touchgfx3HAL15backPorchExitedEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[c9]">touchgfx::HAL::backPorchExited()</a> from halgpu2d.o(.text._ZN8touchgfx3HAL15backPorchExitedEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[c1]">touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c1]">touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[c1]">touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[1f3]">touchgfx::HAL::flushFrameBuffer(touchgfx::Rect const&)</a> from hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[1f2]">touchgfx::HAL::flushFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[b5]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b5]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[b5]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[d4]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[d4]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[d4]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[b0]">touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL18setFrameBufferSizeEtt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b0]">touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL18setFrameBufferSizeEtt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[b0]">touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL18setFrameBufferSizeEtt) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[d0]">touchgfx::HAL::setAnimationStorage(void*)</a> from hal.o(.text._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[d0]">touchgfx::HAL::setAnimationStorage(void*)</a> from hal.o(.text._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[d0]">touchgfx::HAL::setAnimationStorage(void*)</a> from hal.o(.text._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[c7]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c7]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[c7]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[c8]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c8]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[c8]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[c6]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c6]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[c6]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[af]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from hal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[af]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from hal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[af]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from hal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[c4]">touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c4]">touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[c4]">touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[d1]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[d1]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[d1]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[d6]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[d6]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[d6]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[d7]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[d7]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[d7]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[12e]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from halgpu2d.o(.text._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[12e]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from halgpu2d.o(.text._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[de]">touchgfx::HAL::performDisplayOrientationChange()</a> from halgpu2d.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[de]">touchgfx::HAL::performDisplayOrientationChange()</a> from halgpu2d.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[de]">touchgfx::HAL::performDisplayOrientationChange()</a> from halgpu2d.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[d8]">touchgfx::HAL::tick()</a> from hal.o(.text._ZN8touchgfx3HAL4tickEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[d8]">touchgfx::HAL::tick()</a> from hal.o(.text._ZN8touchgfx3HAL4tickEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[d8]">touchgfx::HAL::tick()</a> from hal.o(.text._ZN8touchgfx3HAL4tickEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[dc]">touchgfx::HAL::touch(int, int)</a> from hal.o(.text._ZN8touchgfx3HAL5touchEii) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[dc]">touchgfx::HAL::touch(int, int)</a> from hal.o(.text._ZN8touchgfx3HAL5touchEii) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[dc]">touchgfx::HAL::touch(int, int)</a> from hal.o(.text._ZN8touchgfx3HAL5touchEii) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[dd]">touchgfx::HAL::noTouch()</a> from hal.o(.text._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[dd]">touchgfx::HAL::noTouch()</a> from hal.o(.text._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[dd]">touchgfx::HAL::noTouch()</a> from hal.o(.text._ZN8touchgfx3HAL7noTouchEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[bc]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[bc]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[bc]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[be]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[be]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[be]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[bd]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[bd]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[bd]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[c5]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c5]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[c5]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[c3]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c3]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[c3]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[b6]">touchgfx::HAL::flushDMA()</a> from hal.o(.text._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b6]">touchgfx::HAL::flushDMA()</a> from hal.o(.text._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[b6]">touchgfx::HAL::flushDMA()</a> from hal.o(.text._ZN8touchgfx3HAL8flushDMAEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[1f4]">touchgfx::HAL::blockCopy(void*, void const*, unsigned int)</a> from hal.o(.text._ZN8touchgfx3HAL9blockCopyEPvPKvj) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[ce]">touchgfx::HAL::sampleKey(unsigned char&)</a> from hal.o(.text._ZN8touchgfx3HAL9sampleKeyERh) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[ce]">touchgfx::HAL::sampleKey(unsigned char&)</a> from hal.o(.text._ZN8touchgfx3HAL9sampleKeyERh) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[ce]">touchgfx::HAL::sampleKey(unsigned char&)</a> from hal.o(.text._ZN8touchgfx3HAL9sampleKeyERh) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[d3]">touchgfx::HAL::taskDelay(unsigned short)</a> from halgpu2d.o(.text._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[d3]">touchgfx::HAL::taskDelay(unsigned short)</a> from halgpu2d.o(.text._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[d3]">touchgfx::HAL::taskDelay(unsigned short)</a> from halgpu2d.o(.text._ZN8touchgfx3HAL9taskDelayEt) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[b2]">touchgfx::HAL::taskEntry()</a> from hal.o(.text._ZN8touchgfx3HAL9taskEntryEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b2]">touchgfx::HAL::taskEntry()</a> from hal.o(.text._ZN8touchgfx3HAL9taskEntryEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[b2]">touchgfx::HAL::taskEntry()</a> from hal.o(.text._ZN8touchgfx3HAL9taskEntryEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[1ef]">touchgfx::HAL::~HAL__sub_object()</a> from hal.o(.text._ZN8touchgfx3HALD2Ev) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[232]">touchgfx::LCD::setDefaultColor(touchgfx::colortype)</a> from lcd.o(.text._ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[236]">touchgfx::LCD::drawTextureMapScanLine(touchgfx::DrawingSurface const&, touchgfx::Gradients const&, touchgfx::Edge const*, touchgfx::Edge const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[1f7]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[231]">touchgfx::LCD::supportDynamicBitmapDrawing(touchgfx::Bitmap::BitmapFormat)</a> from lcdgpu2d.o(.text._ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[224]">touchgfx::LCD::~LCD__sub_object()</a> from lcd.o(.text._ZN8touchgfx3LCDD2Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[23e]">touchgfx::Font::~Font__sub_object()</a> from constfont.o(.text._ZN8touchgfx4FontD2Ev) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1dc]">touchgfx::View&lang;FontScreenPresenter&rang;::~View__deallocating()</a> from fontscreenviewbase.o(.text._ZN8touchgfx4ViewI19FontScreenPresenterED0Ev) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
 <LI><a href="#[1db]">touchgfx::View&lang;FontScreenPresenter&rang;::~View__sub_object()</a> from fontscreenviewbase.o(.text._ZN8touchgfx4ViewI19FontScreenPresenterED2Ev) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
 <LI><a href="#[1e0]">touchgfx::View&lang;MainScreenPresenter&rang;::~View__deallocating()</a> from mainscreenviewbase.o(.text._ZN8touchgfx4ViewI19MainScreenPresenterED0Ev) referenced from mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
 <LI><a href="#[1df]">touchgfx::View&lang;MainScreenPresenter&rang;::~View__sub_object()</a> from mainscreenviewbase.o(.text._ZN8touchgfx4ViewI19MainScreenPresenterED2Ev) referenced from mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
 <LI><a href="#[148]">touchgfx::Event::~Event__sub_object()</a> from screen.o(.text._ZN8touchgfx5EventD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
 <LI><a href="#[148]">touchgfx::Event::~Event__sub_object()</a> from screen.o(.text._ZN8touchgfx5EventD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
 <LI><a href="#[148]">touchgfx::Event::~Event__sub_object()</a> from screen.o(.text._ZN8touchgfx5EventD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx9DragEventE)
 <LI><a href="#[1e2]">touchgfx::Image::setBitmap(touchgfx::Bitmap const&)</a> from image.o(.text._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[1e1]">touchgfx::Image::~Image__deallocating()</a> from image.o(.text._ZN8touchgfx5ImageD0Ev) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[1dd]">touchgfx::Screen::setupScreen()</a> from screen.o(.text._ZN8touchgfx6Screen11setupScreenEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
 <LI><a href="#[1dd]">touchgfx::Screen::setupScreen()</a> from screen.o(.text._ZN8touchgfx6Screen11setupScreenEv) referenced from mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
 <LI><a href="#[1dd]">touchgfx::Screen::setupScreen()</a> from screen.o(.text._ZN8touchgfx6Screen11setupScreenEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[1de]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
 <LI><a href="#[1de]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
 <LI><a href="#[1de]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[fe]">touchgfx::Screen::tearDownScreen()</a> from screen.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
 <LI><a href="#[fe]">touchgfx::Screen::tearDownScreen()</a> from screen.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
 <LI><a href="#[fe]">touchgfx::Screen::tearDownScreen()</a> from screen.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
 <LI><a href="#[fe]">touchgfx::Screen::tearDownScreen()</a> from screen.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
 <LI><a href="#[fe]">touchgfx::Screen::tearDownScreen()</a> from screen.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[eb]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from fontscreenview.o(.rodata._ZTV14FontScreenView)
 <LI><a href="#[eb]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from mainscreenview.o(.rodata._ZTV14MainScreenView)
 <LI><a href="#[eb]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
 <LI><a href="#[eb]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
 <LI><a href="#[eb]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
 <LI><a href="#[eb]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
 <LI><a href="#[eb]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[ee]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from fontscreenview.o(.rodata._ZTV14FontScreenView)
 <LI><a href="#[ee]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from mainscreenview.o(.rodata._ZTV14MainScreenView)
 <LI><a href="#[ee]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
 <LI><a href="#[ee]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
 <LI><a href="#[ee]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
 <LI><a href="#[ee]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
 <LI><a href="#[ee]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[ff]">touchgfx::Screen::handleTickEvent()</a> from screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
 <LI><a href="#[ff]">touchgfx::Screen::handleTickEvent()</a> from screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
 <LI><a href="#[ff]">touchgfx::Screen::handleTickEvent()</a> from screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
 <LI><a href="#[ff]">touchgfx::Screen::handleTickEvent()</a> from screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
 <LI><a href="#[ff]">touchgfx::Screen::handleTickEvent()</a> from screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[ed]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from fontscreenview.o(.rodata._ZTV14FontScreenView)
 <LI><a href="#[ed]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from mainscreenview.o(.rodata._ZTV14MainScreenView)
 <LI><a href="#[ed]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
 <LI><a href="#[ed]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
 <LI><a href="#[ed]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
 <LI><a href="#[ed]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
 <LI><a href="#[ed]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[ef]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from fontscreenview.o(.rodata._ZTV14FontScreenView)
 <LI><a href="#[ef]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from mainscreenview.o(.rodata._ZTV14MainScreenView)
 <LI><a href="#[ef]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
 <LI><a href="#[ef]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
 <LI><a href="#[ef]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
 <LI><a href="#[ef]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
 <LI><a href="#[ef]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[e9]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from fontscreenview.o(.rodata._ZTV14FontScreenView)
 <LI><a href="#[e9]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from mainscreenview.o(.rodata._ZTV14MainScreenView)
 <LI><a href="#[e9]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
 <LI><a href="#[e9]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
 <LI><a href="#[e9]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
 <LI><a href="#[e9]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
 <LI><a href="#[e9]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[1e4]">touchgfx::Screen::~Screen__deallocating()</a> from screen.o(.text._ZN8touchgfx6ScreenD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[1e3]">touchgfx::Screen::~Screen__sub_object()</a> from screen.o(.text._ZN8touchgfx6ScreenD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[168]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[168]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[168]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[168]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[168]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[168]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[168]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[168]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1e6]">touchgfx::Widget::~Widget__deallocating()</a> from fontscreenviewbase.o(.text._ZN8touchgfx6WidgetD0Ev) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1e5]">touchgfx::Widget::~Widget__sub_object()</a> from fontscreenviewbase.o(.text._ZN8touchgfx6WidgetD2Ev) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1e9]">touchgfx::MVPHeap::~MVPHeap__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx7MVPHeapD0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx7MVPHeapE)
 <LI><a href="#[1e8]">touchgfx::MVPHeap::~MVPHeap__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx7MVPHeapD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx7MVPHeapE)
 <LI><a href="#[1ec]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</a> from frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[1eb]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[1ea]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[174]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[174]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[174]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[174]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[174]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[174]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[174]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[174]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[174]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[174]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[166]">touchgfx::Drawable::getFirstChild()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[166]">touchgfx::Drawable::getFirstChild()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[166]">touchgfx::Drawable::getFirstChild()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[166]">touchgfx::Drawable::getFirstChild()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[166]">touchgfx::Drawable::getFirstChild()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[166]">touchgfx::Drawable::getFirstChild()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[166]">touchgfx::Drawable::getFirstChild()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[166]">touchgfx::Drawable::getFirstChild()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[166]">touchgfx::Drawable::getFirstChild()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[176]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[176]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[176]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[176]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[176]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[176]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[176]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[176]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[176]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[172]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[172]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[172]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[172]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[172]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[172]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[172]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[172]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[172]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[172]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleTickEvent()</a> from box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleTickEvent()</a> from box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleTickEvent()</a> from box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleTickEvent()</a> from box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleTickEvent()</a> from box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleTickEvent()</a> from box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleTickEvent()</a> from box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleTickEvent()</a> from box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleTickEvent()</a> from box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[170]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[170]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[170]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[170]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[170]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[170]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[170]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[170]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[170]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[170]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[171]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[171]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[171]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[171]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[171]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[171]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[171]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[171]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[171]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[171]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[16f]">touchgfx::Drawable::childGeometryChanged()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[16f]">touchgfx::Drawable::childGeometryChanged()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[16f]">touchgfx::Drawable::childGeometryChanged()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[16f]">touchgfx::Drawable::childGeometryChanged()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[16f]">touchgfx::Drawable::childGeometryChanged()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[16f]">touchgfx::Drawable::childGeometryChanged()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[16f]">touchgfx::Drawable::childGeometryChanged()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[16f]">touchgfx::Drawable::childGeometryChanged()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[16f]">touchgfx::Drawable::childGeometryChanged()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[16f]">touchgfx::Drawable::childGeometryChanged()</a> from animatedimage.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[167]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[167]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[167]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[167]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[167]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[167]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[167]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[167]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[167]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[167]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[16b]">touchgfx::Drawable::setX(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[16b]">touchgfx::Drawable::setX(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[16b]">touchgfx::Drawable::setX(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[16b]">touchgfx::Drawable::setX(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[16b]">touchgfx::Drawable::setX(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[16b]">touchgfx::Drawable::setX(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[16b]">touchgfx::Drawable::setX(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[16b]">touchgfx::Drawable::setX(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[16b]">touchgfx::Drawable::setX(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[16b]">touchgfx::Drawable::setX(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[16c]">touchgfx::Drawable::setY(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[16c]">touchgfx::Drawable::setY(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[16c]">touchgfx::Drawable::setY(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[16c]">touchgfx::Drawable::setY(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[16c]">touchgfx::Drawable::setY(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[16c]">touchgfx::Drawable::setY(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[16c]">touchgfx::Drawable::setY(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[16c]">touchgfx::Drawable::setY(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[16c]">touchgfx::Drawable::setY(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[16c]">touchgfx::Drawable::setY(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[175]">touchgfx::Drawable::moveTo(short, short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[175]">touchgfx::Drawable::moveTo(short, short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[175]">touchgfx::Drawable::moveTo(short, short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[175]">touchgfx::Drawable::moveTo(short, short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[175]">touchgfx::Drawable::moveTo(short, short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[175]">touchgfx::Drawable::moveTo(short, short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[175]">touchgfx::Drawable::moveTo(short, short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[175]">touchgfx::Drawable::moveTo(short, short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[175]">touchgfx::Drawable::moveTo(short, short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[175]">touchgfx::Drawable::moveTo(short, short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[16d]">touchgfx::Drawable::setWidth(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[16d]">touchgfx::Drawable::setWidth(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[16d]">touchgfx::Drawable::setWidth(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[16d]">touchgfx::Drawable::setWidth(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[16d]">touchgfx::Drawable::setWidth(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[16d]">touchgfx::Drawable::setWidth(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[16d]">touchgfx::Drawable::setWidth(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[16e]">touchgfx::Drawable::setHeight(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[16e]">touchgfx::Drawable::setHeight(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[16e]">touchgfx::Drawable::setHeight(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[16e]">touchgfx::Drawable::setHeight(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[16e]">touchgfx::Drawable::setHeight(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[16e]">touchgfx::Drawable::setHeight(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[16e]">touchgfx::Drawable::setHeight(short)</a> from animatedimage.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1ee]">touchgfx::Drawable::~Drawable__deallocating()</a> from drawable.o(.text._ZN8touchgfx8DrawableD0Ev) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[15f]">touchgfx::Drawable::~Drawable__sub_object()</a> from animatedimage.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[15f]">touchgfx::Drawable::~Drawable__sub_object()</a> from animatedimage.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[15f]">touchgfx::Drawable::~Drawable__sub_object()</a> from animatedimage.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[15f]">touchgfx::Drawable::~Drawable__sub_object()</a> from animatedimage.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[15f]">touchgfx::Drawable::~Drawable__sub_object()</a> from animatedimage.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[15f]">touchgfx::Drawable::~Drawable__sub_object()</a> from animatedimage.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1f5]">touchgfx::HALGPU2D::beginFrame()</a> from halgpu2d.o(.text._ZN8touchgfx8HALGPU2D10beginFrameEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[1f1]">touchgfx::HALGPU2D::initialize()</a> from halgpu2d.o(.text._ZN8touchgfx8HALGPU2D10initializeEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[b7]">touchgfx::HALGPU2D::lockFrameBuffer()</a> from halgpu2d.o(.text._ZN8touchgfx8HALGPU2D15lockFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b7]">touchgfx::HALGPU2D::lockFrameBuffer()</a> from halgpu2d.o(.text._ZN8touchgfx8HALGPU2D15lockFrameBufferEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[b7]">touchgfx::HALGPU2D::lockFrameBuffer()</a> from halgpu2d.o(.text._ZN8touchgfx8HALGPU2D15lockFrameBufferEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[b8]">touchgfx::HALGPU2D::unlockFrameBuffer()</a> from halgpu2d.o(.text._ZN8touchgfx8HALGPU2D17unlockFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[b8]">touchgfx::HALGPU2D::unlockFrameBuffer()</a> from halgpu2d.o(.text._ZN8touchgfx8HALGPU2D17unlockFrameBufferEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[b8]">touchgfx::HALGPU2D::unlockFrameBuffer()</a> from halgpu2d.o(.text._ZN8touchgfx8HALGPU2D17unlockFrameBufferEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[1f6]">touchgfx::HALGPU2D::endFrame()</a> from halgpu2d.o(.text._ZN8touchgfx8HALGPU2D8endFrameEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[1f0]">touchgfx::HALGPU2D::~HALGPU2D__deallocating()</a> from halgpu2d.o(.text._ZN8touchgfx8HALGPU2DD0Ev) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[22d]">touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[226]">touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[234]">touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[239]">touchgfx::LCDGPU2D::bindFrameBufferTexture()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[233]">touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[235]">touchgfx::LCDGPU2D::getTextureMapperDrawScanLine(touchgfx::TextureSurface const&, unsigned short, unsigned char)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[22b]">touchgfx::LCDGPU2D::copyAreaFromTFTToClientBuffer(touchgfx::Rect const&)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[22a]">touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[229]">touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[238]">touchgfx::LCDGPU2D::init()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D4initEv) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[1f9]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[1f8]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[1fb]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[1fa]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[1fd]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[1fc]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[1ff]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[1fe]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[201]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[200]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[203]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[202]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[205]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[204]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[207]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[206]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[209]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[208]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[20b]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[20a]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[20d]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[20c]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[20f]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[20e]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[211]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[210]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[213]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[212]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[215]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[214]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[217]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[216]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[219]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[218]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[21b]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[21a]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[21d]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[21c]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[21f]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[21e]">touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[221]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[220]">touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[223]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[222]">touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[228]">touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[227]">touchgfx::LCDGPU2D::blitCopy(unsigned short const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[22c]">touchgfx::LCDGPU2D::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[237]">touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[225]">touchgfx::LCDGPU2D::~LCDGPU2D__deallocating()</a> from lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2DD0Ev) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[a7]">touchgfx::LCDGPU2D::~LCDGPU2D__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx8LCDGPU2DD2Ev) referenced 2 times from touchgfxconfiguration.o(.text.__cxx_global_var_init.2)
 <LI><a href="#[1c5]">touchgfx::TextArea::setBaselineY(short)</a> from textarea.o(.text._ZN8touchgfx8TextArea12setBaselineYEs) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1c5]">touchgfx::TextArea::setBaselineY(short)</a> from textarea.o(.text._ZN8touchgfx8TextArea12setBaselineYEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1c5]">touchgfx::TextArea::setBaselineY(short)</a> from textarea.o(.text._ZN8touchgfx8TextArea12setBaselineYEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1c6]">touchgfx::TextArea::setXBaselineY(short, short)</a> from textarea.o(.text._ZN8touchgfx8TextArea13setXBaselineYEss) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1c6]">touchgfx::TextArea::setXBaselineY(short, short)</a> from textarea.o(.text._ZN8touchgfx8TextArea13setXBaselineYEss) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1c6]">touchgfx::TextArea::setXBaselineY(short, short)</a> from textarea.o(.text._ZN8touchgfx8TextArea13setXBaselineYEss) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1c4]">touchgfx::TextArea::setAlpha(unsigned char)</a> from textarea.o(.text._ZN8touchgfx8TextArea8setAlphaEh) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1c4]">touchgfx::TextArea::setAlpha(unsigned char)</a> from textarea.o(.text._ZN8touchgfx8TextArea8setAlphaEh) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1c4]">touchgfx::TextArea::setAlpha(unsigned char)</a> from textarea.o(.text._ZN8touchgfx8TextArea8setAlphaEh) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1c2]">touchgfx::TextArea::setWidth(short)</a> from textarea.o(.text._ZN8touchgfx8TextArea8setWidthEs) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1c2]">touchgfx::TextArea::setWidth(short)</a> from textarea.o(.text._ZN8touchgfx8TextArea8setWidthEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1c2]">touchgfx::TextArea::setWidth(short)</a> from textarea.o(.text._ZN8touchgfx8TextArea8setWidthEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1c3]">touchgfx::TextArea::setHeight(short)</a> from textarea.o(.text._ZN8touchgfx8TextArea9setHeightEs) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1c3]">touchgfx::TextArea::setHeight(short)</a> from textarea.o(.text._ZN8touchgfx8TextArea9setHeightEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1c3]">touchgfx::TextArea::setHeight(short)</a> from textarea.o(.text._ZN8touchgfx8TextArea9setHeightEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[23a]">touchgfx::TextArea::~TextArea__deallocating()</a> from textarea.o(.text._ZN8touchgfx8TextAreaD0Ev) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1ce]">touchgfx::TextArea::~TextArea__sub_object()</a> from textarea.o(.text._ZN8touchgfx8TextAreaD2Ev) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1ce]">touchgfx::TextArea::~TextArea__sub_object()</a> from textarea.o(.text._ZN8touchgfx8TextAreaD2Ev) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[23f]">touchgfx::ConstFont::~ConstFont__deallocating()</a> from constfont.o(.text._ZN8touchgfx9ConstFontD0Ev) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[24f]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[246]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[245]">touchgfx::Container::getFirstChild()</a> from container.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[247]">touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[24e]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[251]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[248]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[24d]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[249]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[24b]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[24c]">touchgfx::Container::contains(touchgfx::Drawable const&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[24a]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[242]">touchgfx::Container::~Container__deallocating()</a> from container.o(.text._ZN8touchgfx9ContainerD0Ev) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1b4]">touchgfx::DMA_Queue::~DMA_Queue__sub_object()</a> from dma.o(.text._ZN8touchgfx9DMA_QueueD2Ev) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[252]">touchgfx::DragEvent::~DragEvent__deallocating()</a> from screen.o(.text._ZN8touchgfx9DragEventD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx9DragEventE)
 <LI><a href="#[254]">touchgfx::FusedFont::~FusedFont__deallocating()</a> from generatedfont.o(.text._ZN8touchgfx9FusedFontD0Ev) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[9e]">touchgfx::FusedFont::~FusedFont__sub_object()</a> from generatedfont.o(.text._ZN8touchgfx9FusedFontD2Ev) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[9e]">touchgfx::FusedFont::~FusedFont__sub_object()</a> from generatedfont.o(.text._ZN8touchgfx9FusedFontD2Ev) referenced 2 times from table_samsungonekorean_700_v2_0_hinted_20200508_30_4bpp.o(.text._Z57getFont_SamsungOneKorean_700_v2_0_hinted_20200508_30_4bppv)
 <LI><a href="#[259]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[25a]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[257]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[256]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EED2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[25f]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[260]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[25d]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[25c]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EED2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[265]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[266]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[263]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[262]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[269]">touchgfx::Presenter::deactivate()</a> from fontscreenpresenter.o(.text._ZN8touchgfx9Presenter10deactivateEv) referenced from fontscreenpresenter.o(.rodata._ZTVN8touchgfx9PresenterE)
 <LI><a href="#[268]">touchgfx::Presenter::activate()</a> from fontscreenpresenter.o(.text._ZN8touchgfx9Presenter8activateEv) referenced from fontscreenpresenter.o(.rodata._ZTVN8touchgfx9PresenterE)
 <LI><a href="#[26b]">touchgfx::Presenter::~Presenter__deallocating()</a> from fontscreenpresenter.o(.text._ZN8touchgfx9PresenterD0Ev) referenced from fontscreenpresenter.o(.rodata._ZTVN8touchgfx9PresenterE)
 <LI><a href="#[26a]">touchgfx::Presenter::~Presenter__sub_object()</a> from fontscreenpresenter.o(.text._ZN8touchgfx9PresenterD2Ev) referenced from fontscreenpresenter.o(.rodata._ZTVN8touchgfx9PresenterE)
 <LI><a href="#[26d]">touchgfx::TypedText::~TypedText__deallocating()</a> from fontcache.o(.text._ZN8touchgfx9TypedTextD0Ev) referenced from fontcache.o(.rodata._ZTVN8touchgfx9TypedTextE)
 <LI><a href="#[26c]">touchgfx::TypedText::~TypedText__sub_object()</a> from fontcache.o(.text._ZN8touchgfx9TypedTextD2Ev) referenced from fontcache.o(.rodata._ZTVN8touchgfx9TypedTextE)
 <LI><a href="#[b9]">TouchGFXHAL::getTFTFrameBuffer() const</a> from touchgfxhal.o(.text._ZNK11TouchGFXHAL17getTFTFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[128]">TouchGFXGeneratedHAL::getTFTFrameBuffer() const</a> from touchgfxgeneratedhal.o(.text._ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[14a]">touchgfx::ClickEvent::getEventType() const</a> from screen.o(.text._ZNK8touchgfx10ClickEvent12getEventTypeEv) referenced from screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
 <LI><a href="#[15b]">touchgfx::GestureEvent::getEventType() const</a> from screen.o(.text._ZNK8touchgfx12GestureEvent12getEventTypeEv) referenced from screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
 <LI><a href="#[191]">touchgfx::GeneratedFont::getKerning(unsigned short, touchgfx::GlyphNode const*) const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[191]">touchgfx::GeneratedFont::getKerning(unsigned short, touchgfx::GlyphNode const*) const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[193]">touchgfx::GeneratedFont::getGSUBTable() const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getGSUBTableEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[193]">touchgfx::GeneratedFont::getGSUBTable() const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getGSUBTableEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[195]">touchgfx::GeneratedFont::getPixelData(touchgfx::GlyphNode const*) const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[195]">touchgfx::GeneratedFont::getPixelData(touchgfx::GlyphNode const*) const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[194]">touchgfx::GeneratedFont::getContextualFormsTable() const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[194]">touchgfx::GeneratedFont::getContextualFormsTable() const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[19a]">touchgfx::SnapshotWidget::getSolidRect() const</a> from snapshotwidget.o(.text._ZNK8touchgfx14SnapshotWidget12getSolidRectEv) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[19b]">touchgfx::SnapshotWidget::invalidateContent() const</a> from snapshotwidget.o(.text._ZNK8touchgfx14SnapshotWidget17invalidateContentEv) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[199]">touchgfx::SnapshotWidget::draw(touchgfx::Rect const&) const</a> from snapshotwidget.o(.text._ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[1ae]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[1ae]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1ae]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1ae]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[1cb]">touchgfx::TextAreaWithOneWildcard::getWildcard1() const</a> from fontscreenviewbase.o(.text._ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1c1]">touchgfx::TextAreaWithWildcardBase::invalidateContent() const</a> from textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1c1]">touchgfx::TextAreaWithWildcardBase::invalidateContent() const</a> from textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1cd]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1cd]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1bf]">touchgfx::TextAreaWithWildcardBase::draw(touchgfx::Rect const&) const</a> from textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1bf]">touchgfx::TextAreaWithWildcardBase::draw(touchgfx::Rect const&) const</a> from textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d9]">touchgfx::Box::getSolidRect() const</a> from box.o(.text._ZNK8touchgfx3Box12getSolidRectEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[1da]">touchgfx::Box::invalidateContent() const</a> from box.o(.text._ZNK8touchgfx3Box17invalidateContentEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d8]">touchgfx::Box::draw(touchgfx::Rect const&) const</a> from box.o(.text._ZNK8touchgfx3Box4drawERKNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[d2]">touchgfx::HAL::getFlashDataReader() const</a> from hal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[d2]">touchgfx::HAL::getFlashDataReader() const</a> from hal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[d2]">touchgfx::HAL::getFlashDataReader() const</a> from hal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv) referenced from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[18c]">touchgfx::Font::getBaseline() const</a> from constfont.o(.text._ZNK8touchgfx4Font11getBaselineEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[18c]">touchgfx::Font::getBaseline() const</a> from constfont.o(.text._ZNK8touchgfx4Font11getBaselineEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[18c]">touchgfx::Font::getBaseline() const</a> from constfont.o(.text._ZNK8touchgfx4Font11getBaselineEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[188]">touchgfx::Font::getCharWidth(unsigned short) const</a> from font.o(.text._ZNK8touchgfx4Font12getCharWidthEt) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[188]">touchgfx::Font::getCharWidth(unsigned short) const</a> from font.o(.text._ZNK8touchgfx4Font12getCharWidthEt) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[188]">touchgfx::Font::getCharWidth(unsigned short) const</a> from font.o(.text._ZNK8touchgfx4Font12getCharWidthEt) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[240]">touchgfx::Font::getGSUBTable() const</a> from constfont.o(.text._ZNK8touchgfx4Font12getGSUBTableEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[18b]">touchgfx::Font::getFontHeight() const</a> from font.o(.text._ZNK8touchgfx4Font13getFontHeightEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[18b]">touchgfx::Font::getFontHeight() const</a> from font.o(.text._ZNK8touchgfx4Font13getFontHeightEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[18b]">touchgfx::Font::getFontHeight() const</a> from font.o(.text._ZNK8touchgfx4Font13getFontHeightEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[186]">touchgfx::Font::getStringWidth(unsigned short const*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[186]">touchgfx::Font::getStringWidth(unsigned short const*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[186]">touchgfx::Font::getStringWidth(unsigned short const*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[187]">touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[187]">touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[187]">touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const</a> from texts.o(.text._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[18f]">touchgfx::Font::getBitsPerPixel() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[18f]">touchgfx::Font::getBitsPerPixel() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[18f]">touchgfx::Font::getBitsPerPixel() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[190]">touchgfx::Font::getByteAlignRow() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[190]">touchgfx::Font::getByteAlignRow() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[190]">touchgfx::Font::getByteAlignRow() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[185]">touchgfx::Font::getEllipsisChar() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[185]">touchgfx::Font::getEllipsisChar() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[185]">touchgfx::Font::getEllipsisChar() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[184]">touchgfx::Font::getFallbackChar() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getFallbackCharEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[184]">touchgfx::Font::getFallbackChar() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getFallbackCharEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[184]">touchgfx::Font::getFallbackChar() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getFallbackCharEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[189]">touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[189]">touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[189]">touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[18a]">touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[18a]">touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[18a]">touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[192]">touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[192]">touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[192]">touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[18d]">touchgfx::Font::getMinimumTextHeight() const</a> from font.o(.text._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[18d]">touchgfx::Font::getMinimumTextHeight() const</a> from font.o(.text._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[18d]">touchgfx::Font::getMinimumTextHeight() const</a> from font.o(.text._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[241]">touchgfx::Font::getContextualFormsTable() const</a> from constfont.o(.text._ZNK8touchgfx4Font23getContextualFormsTableEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[183]">touchgfx::Font::getGlyph(unsigned short) const</a> from constfont.o(.text._ZNK8touchgfx4Font8getGlyphEt) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[183]">touchgfx::Font::getGlyph(unsigned short) const</a> from constfont.o(.text._ZNK8touchgfx4Font8getGlyphEt) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[183]">touchgfx::Font::getGlyph(unsigned short) const</a> from constfont.o(.text._ZNK8touchgfx4Font8getGlyphEt) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[18e]">touchgfx::Font::getHeight() const</a> from constfont.o(.text._ZNK8touchgfx4Font9getHeightEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[18e]">touchgfx::Font::getHeight() const</a> from constfont.o(.text._ZNK8touchgfx4Font9getHeightEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[18e]">touchgfx::Font::getHeight() const</a> from constfont.o(.text._ZNK8touchgfx4Font9getHeightEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[162]">touchgfx::Image::getSolidRect() const</a> from image.o(.text._ZNK8touchgfx5Image12getSolidRectEv) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[162]">touchgfx::Image::getSolidRect() const</a> from image.o(.text._ZNK8touchgfx5Image12getSolidRectEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[165]">touchgfx::Image::invalidateContent() const</a> from animatedimage.o(.text._ZNK8touchgfx5Image17invalidateContentEv) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[165]">touchgfx::Image::invalidateContent() const</a> from animatedimage.o(.text._ZNK8touchgfx5Image17invalidateContentEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[161]">touchgfx::Image::draw(touchgfx::Rect const&) const</a> from image.o(.text._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[161]">touchgfx::Image::draw(touchgfx::Rect const&) const</a> from image.o(.text._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[1ed]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</a> from frontendapplicationbase.o(.text._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[164]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[164]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[164]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[164]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[164]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[164]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[164]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[164]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[164]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[164]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[169]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[169]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[169]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[169]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[169]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[169]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[169]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[169]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[169]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[169]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[163]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[163]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[163]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[163]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[163]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[163]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[163]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[163]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[163]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[163]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1e7]">touchgfx::Drawable::invalidateContent() const</a> from container.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1e7]">touchgfx::Drawable::invalidateContent() const</a> from container.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1e7]">touchgfx::Drawable::invalidateContent() const</a> from container.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[16a]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
 <LI><a href="#[16a]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[16a]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[16a]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[16a]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[16a]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[16a]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[16a]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[16a]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[16a]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[22f]">touchgfx::LCDGPU2D::framebufferFormat() const</a> from lcdgpu2d.o(.text._ZNK8touchgfx8LCDGPU2D17framebufferFormatEv) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[230]">touchgfx::LCDGPU2D::framebufferStride() const</a> from lcdgpu2d.o(.text._ZNK8touchgfx8LCDGPU2D17framebufferStrideEv) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[22e]">touchgfx::LCDGPU2D::bitDepth() const</a> from lcdgpu2d.o(.text._ZNK8touchgfx8LCDGPU2D8bitDepthEv) referenced from lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
 <LI><a href="#[1c7]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1c7]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1c7]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1c0]">touchgfx::TextArea::getSolidRect() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1c0]">touchgfx::TextArea::getSolidRect() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1c0]">touchgfx::TextArea::getSolidRect() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1c9]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1c9]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1c9]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1d0]">touchgfx::TextArea::getWildcard1() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getWildcard1Ev) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d0]">touchgfx::TextArea::getWildcard1() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getWildcard1Ev) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1cc]">touchgfx::TextArea::getWildcard2() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1cc]">touchgfx::TextArea::getWildcard2() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1cc]">touchgfx::TextArea::getWildcard2() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1c8]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1c8]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1c8]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[23c]">touchgfx::TextArea::invalidateContent() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea17invalidateContentEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1ca]">touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1ca]">touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1ca]">touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[23d]">touchgfx::TextArea::calculateBoundingArea() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea21calculateBoundingAreaEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[23b]">touchgfx::TextArea::draw(touchgfx::Rect const&) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea4drawERKNS_4RectE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[182]">touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const</a> from constfont.o(.text._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[182]">touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const</a> from constfont.o(.text._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[244]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[250]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[243]">touchgfx::Container::draw(touchgfx::Rect const&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[253]">touchgfx::DragEvent::getEventType() const</a> from screen.o(.text._ZNK8touchgfx9DragEvent12getEventTypeEv) referenced from screen.o(.rodata._ZTVN8touchgfx9DragEventE)
 <LI><a href="#[255]">touchgfx::FusedFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const</a> from generatedfont.o(.text._ZNK8touchgfx9FusedFont8getGlyphEtRPKhRh) referenced from generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
 <LI><a href="#[25b]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[258]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[261]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[25e]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[267]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[264]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[108]">non-virtual thunk to FontScreenPresenter::~FontScreenPresenter__deallocating()</a> from fontscreenpresenter.o(.text._ZThn4_N19FontScreenPresenterD0Ev) referenced from fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
 <LI><a href="#[107]">non-virtual thunk to FontScreenPresenter::~FontScreenPresenter()</a> from fontscreenpresenter.o(.text._ZThn4_N19FontScreenPresenterD1Ev) referenced from fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
 <LI><a href="#[11f]">non-virtual thunk to MainScreenPresenter::~MainScreenPresenter__deallocating()</a> from mainscreenpresenter.o(.text._ZThn4_N19MainScreenPresenterD0Ev) referenced from mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
 <LI><a href="#[11e]">non-virtual thunk to MainScreenPresenter::~MainScreenPresenter()</a> from mainscreenpresenter.o(.text._ZThn4_N19MainScreenPresenterD1Ev) referenced from mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
 <LI><a href="#[17c]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 4 times from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[17c]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from frontendapplicationbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIvvvEE)
 <LI><a href="#[17c]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx15TouchControllerE)
 <LI><a href="#[17c]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from touchgfxhal.o(.rodata._ZTVN8touchgfx16ButtonControllerE)
 <LI><a href="#[17c]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 4 times from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[17c]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 3 times from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx18MCUInstrumentationE)
 <LI><a href="#[17c]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[17c]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 3 times from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[17c]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 6 times from halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
 <LI><a href="#[17c]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[93]">__main</a> from __main.o(!!!main) referenced from startup_stm32u599xx.o(.text)
 <LI><a href="#[0]">abort</a> from abort.o(.text) referenced 2 times from cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler)
 <LI><a href="#[ac]">prvIdleTask</a> from tasks.o(.text.prvIdleTask) referenced 2 times from tasks.o(.text.vTaskStartScheduler)
 <LI><a href="#[aa]">prvTaskExitError</a> from port.o(.text.prvTaskExitError) referenced 2 times from port.o(.text.pxPortInitialiseStack)
 <LI><a href="#[ad]">prvTimerTask</a> from timers.o(.text.prvTimerTask) referenced 2 times from timers.o(.text.xTimerCreateTimerTask)
 <LI><a href="#[9c]">vPortSVCHandler_C</a> from port.o(.text.vPortSVCHandler_C) referenced from portasm.o(.text.SVC_Handler)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[93]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(.text)
</UL>
<P><STRONG><a name="[274]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[276]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[542]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[543]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[544]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[545]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[546]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[281]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[277]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[279]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000007))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[547]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[548]"></a>__rt_lib_init_relocate_pie_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[549]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[54a]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000022))

<P><STRONG><a name="[54b]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[54c]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[54d]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[54e]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[54f]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[550]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[551]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[552]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))

<P><STRONG><a name="[553]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[554]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[555]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000024))

<P><STRONG><a name="[556]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[557]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[27b]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[558]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[559]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000027))

<P><STRONG><a name="[55a]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000034))

<P><STRONG><a name="[55b]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000035))

<P><STRONG><a name="[286]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[27c]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_2 &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[55c]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[55d]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[55e]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[55f]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[560]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[561]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[562]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[275]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[563]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[27e]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[280]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[564]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[282]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[565]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[2a2]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[285]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[566]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[287]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 4 + Unknown Stack Size
<LI>Call Chain = __rt_exit_exit &rArr; _sys_exit
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SecureFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecureFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecureFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>ADC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>ADF1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>CORDIC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DAC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>DCACHE1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>DCACHE2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>DCMI_PSSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>DSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EXTI14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>EXTI15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXTI7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>FLASH_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>FMAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>GFXMMU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>GPDMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>GPDMA1_Channel10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>GPDMA1_Channel11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>GPDMA1_Channel12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>GPDMA1_Channel13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>GPDMA1_Channel14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>GPDMA1_Channel15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>GPDMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>GPDMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>GPDMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>GPDMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>GPDMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>GPDMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>GPDMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>GPDMA1_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>GPDMA1_Channel9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GTZC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>HASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>HSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>I2C5_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>I2C5_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>I2C6_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>I2C6_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>ICACHE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>IWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>LPDMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>LPDMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>LPDMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>LPDMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>LSECSSD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>MDF1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>MDF1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>MDF1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>MDF1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>MDF1_FLT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>MDF1_FLT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OCTOSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>OCTOSPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PVD_PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>PWR_S3WU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RAMCFG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>RCC_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>UCPD1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[2a1]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_stm32u599xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[567]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[289]"></a>__cxa_atexit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cxa_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.4
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.3
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.1
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_20_4bpp()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SamsungOneKorean_700_v2_0_hinted_20200508_30_4bpp()
</UL>

<P><STRONG><a name="[28b]"></a>__aeabi_assert</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, assert.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::indexOf(void const*)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::allocate(unsigned short)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::setFrameBufferFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyWord(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_create
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_sys_init
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::execute()
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataCopy(touchgfx::BlitOp const&)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::initialize(int)
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::bindFrameBufferTexture()
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::getTextureMapperDrawScanLine(touchgfx::TextureSurface const&, unsigned short, unsigned char)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::switchScreen(touchgfx::Screen*)
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt1(unsigned short)
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar(unsigned short)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar()
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight() const
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getAlignment() const
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(touchgfx::Rect const&) const
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pop()
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(touchgfx::BlitOp const&)
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::compact()
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::handleTickEvent()
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::setBitmapEnd(touchgfx::Bitmap const&)
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*)
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(unsigned short const*, unsigned short, unsigned short, unsigned short)
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(touchgfx::Rect const&) const
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::invalidateContent() const
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setBaselineY(short)
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int)
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(touchgfx::Rect const&, short, short, touchgfx::TextRotation)
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(touchgfx::Rect const&, short, short, touchgfx::TextRotation)
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&)
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::endOfString()
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::framebufferStride() const
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned char*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned int*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned char*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned int*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned char*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned int*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned char*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)
</UL>

<P><STRONG><a name="[568]"></a>__assert</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, assert.o(.text), UNUSED)

<P><STRONG><a name="[33d]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::FusionFontTextUpdate()
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[28d]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[569]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[28e]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[56a]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[56b]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[56c]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[28f]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memset &rArr; _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::memset(void*, unsigned char, unsigned int)
</UL>

<P><STRONG><a name="[291]"></a>__aeabi_memset4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memset4 &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[56d]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_memset4.o(.text), UNUSED)

<P><STRONG><a name="[440]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::HALGPU2D__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
</UL>

<P><STRONG><a name="[56e]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[290]"></a>_memset</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[32a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::HALGPU2D__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_init
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WriteEnable
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_AutoPollingMemReady
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_MemoryMappedMode
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_OctalModeCfg
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image__sub_object(touchgfx::Bitmap const&)
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::SnapshotWidget()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box__sub_object()
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;context_reset
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, unsigned short const*, char const*, std::__va_list)
</UL>

<P><STRONG><a name="[2ca]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MspInit
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
</UL>

<P><STRONG><a name="[56f]"></a>__rt_memclr_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[292]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>

<P><STRONG><a name="[570]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[571]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[572]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[272]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[573]"></a>__semihosting$guard</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[574]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[293]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[296]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[0]"></a>abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler)
</UL>
<P><STRONG><a name="[28a]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>

<P><STRONG><a name="[28c]"></a>__assert_puts</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, assert_puts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __assert_puts &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[294]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[298]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_ddtor_pointer_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[575]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[576]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[577]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[578]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[295]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[29b]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[27a]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[29d]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[579]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[27d]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_2
</UL>

<P><STRONG><a name="[297]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[57a]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2a0]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[57b]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[27f]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[29a]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[57c]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.text), UNUSED)

<P><STRONG><a name="[284]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[29f]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __sig_exit &rArr; _sys_exit
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[29e]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[29c]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[2a3]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
</UL>

<P><STRONG><a name="[2a4]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[5]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[3df]"></a>CRC_Lock</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, stm32_crc_lock.o(.text.CRC_Lock), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[7d]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32u5xx_it.o(.text.DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DMA2D_IRQHandler &rArr; HAL_DMA2D_IRQHandler &rArr; HAL_DMA2D_CLUTLoadingCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI13_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32u5xx_it.o(.text.EXTI13_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EXTI13_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Falling_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI8_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32u5xx_it.o(.text.EXTI8_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EXTI8_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Falling_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[2cc]"></a>Error_Handler</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, main.o(.text.Error_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPU2D_Init
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DCACHE2_Init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DCACHE1_Init
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C5_Init
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ICACHE_Init
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPower_Config
</UL>

<P><STRONG><a name="[8c]"></a>GPU2D_ER_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32u5xx_it.o(.text.GPU2D_ER_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPU2D_ER_IRQHandler &rArr; HAL_GPU2D_ER_IRQHandler &rArr; HAL_GPU2D_ErrorCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_ER_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>GPU2D_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32u5xx_it.o(.text.GPU2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GPU2D_IRQHandler &rArr; HAL_GPU2D_IRQHandler &rArr; HAL_GPU2D_CommandListCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[2ad]"></a>HAL_CRCEx_Polynomial_Set</STRONG> (Thumb, 234 bytes, Stack size 28 bytes, stm32u5xx_hal_crc_ex.o(.text.HAL_CRCEx_Polynomial_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[2ab]"></a>HAL_CRC_Init</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, stm32u5xx_hal_crc.o(.text.HAL_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_MspInit
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
</UL>

<P><STRONG><a name="[2ac]"></a>HAL_CRC_MspInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, crc.o(.text.HAL_CRC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[98]"></a>HAL_DCACHE_CleanAndInvalidateByAddrCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_CleanAndInvalidateByAddrCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_DCACHE_CleanAndInvalidateByAddrCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Init)
</UL>
<P><STRONG><a name="[95]"></a>HAL_DCACHE_CleanByAddrCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_CleanByAddrCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_DCACHE_CleanByAddrCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Init)
</UL>
<P><STRONG><a name="[2af]"></a>HAL_DCACHE_Enable</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DCACHE_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DCACHE_Init
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DCACHE2_Init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DCACHE1_Init
</UL>

<P><STRONG><a name="[94]"></a>HAL_DCACHE_ErrorCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_ErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_DCACHE_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Init)
</UL>
<P><STRONG><a name="[2ae]"></a>HAL_DCACHE_Init</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_DCACHE_Init &rArr; HAL_DCACHE_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DCACHE_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DCACHE2_Init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DCACHE1_Init
</UL>

<P><STRONG><a name="[2b0]"></a>HAL_DCACHE_Invalidate</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Invalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DCACHE_Invalidate
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DCACHE2_Init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DCACHE1_Init
</UL>

<P><STRONG><a name="[96]"></a>HAL_DCACHE_InvalidateByAddrCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_InvalidateByAddrCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_DCACHE_InvalidateByAddrCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Init)
</UL>
<P><STRONG><a name="[97]"></a>HAL_DCACHE_InvalidateCompleteCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_InvalidateCompleteCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_DCACHE_InvalidateCompleteCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Init)
</UL>
<P><STRONG><a name="[99]"></a>HAL_DCACHE_MspInit</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, dcache.o(.text.HAL_DCACHE_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DCACHE_MspInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32u5xx_hal_dcache.o(.text.HAL_DCACHE_Init)
</UL>
<P><STRONG><a name="[2b2]"></a>HAL_DMA2D_CLUTLoadingCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_dma2d.o(.text.HAL_DMA2D_CLUTLoadingCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_DMA2D_CLUTLoadingCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[2a5]"></a>HAL_DMA2D_IRQHandler</STRONG> (Thumb, 528 bytes, Stack size 24 bytes, stm32u5xx_hal_dma2d.o(.text.HAL_DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_DMA2D_IRQHandler &rArr; HAL_DMA2D_CLUTLoadingCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoadingCpltCallback
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_LineEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[2b3]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, stm32u5xx_hal_dma2d.o(.text.HAL_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[2b1]"></a>HAL_DMA2D_LineEventCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_dma2d.o(.text.HAL_DMA2D_LineEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_DMA2D_LineEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[2b4]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, dma2d.o(.text.HAL_DMA2D_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>

<P><STRONG><a name="[32e]"></a>HAL_DSI_ConfigErrorMonitor</STRONG> (Thumb, 414 bytes, Stack size 12 bytes, stm32u5xx_hal_dsi.o(.text.HAL_DSI_ConfigErrorMonitor))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DSI_ConfigErrorMonitor
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[32d]"></a>HAL_DSI_ConfigFlowControl</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, stm32u5xx_hal_dsi.o(.text.HAL_DSI_ConfigFlowControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DSI_ConfigFlowControl
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[32b]"></a>HAL_DSI_ConfigHostTimeouts</STRONG> (Thumb, 340 bytes, Stack size 12 bytes, stm32u5xx_hal_dsi.o(.text.HAL_DSI_ConfigHostTimeouts))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DSI_ConfigHostTimeouts
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[32c]"></a>HAL_DSI_ConfigPhyTimer</STRONG> (Thumb, 284 bytes, Stack size 20 bytes, stm32u5xx_hal_dsi.o(.text.HAL_DSI_ConfigPhyTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_DSI_ConfigPhyTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[32f]"></a>HAL_DSI_ConfigVideoMode</STRONG> (Thumb, 824 bytes, Stack size 12 bytes, stm32u5xx_hal_dsi.o(.text.HAL_DSI_ConfigVideoMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DSI_ConfigVideoMode
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[2b7]"></a>HAL_DSI_EnterULPM</STRONG> (Thumb, 682 bytes, Stack size 24 bytes, stm32u5xx_hal_dsi.o(.text.HAL_DSI_EnterULPM))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_DSI_EnterULPM &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[2b9]"></a>HAL_DSI_ExitULPM</STRONG> (Thumb, 752 bytes, Stack size 24 bytes, stm32u5xx_hal_dsi.o(.text.HAL_DSI_ExitULPM))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_DSI_ExitULPM &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[2ba]"></a>HAL_DSI_Init</STRONG> (Thumb, 376 bytes, Stack size 32 bytes, stm32u5xx_hal_dsi.o(.text.HAL_DSI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_DSI_Init &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_MspInit
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSI_SetWrapperPLLTuning
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSI_ConfigBandControl
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[2be]"></a>HAL_DSI_LongWrite</STRONG> (Thumb, 374 bytes, Stack size 64 bytes, stm32u5xx_hal_dsi.o(.text.HAL_DSI_LongWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_DSI_LongWrite &rArr; DSI_ConfigPacketHeader
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSI_ConfigPacketHeader
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[2bb]"></a>HAL_DSI_MspInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, dsihost.o(.text.HAL_DSI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DSI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Init
</UL>

<P><STRONG><a name="[330]"></a>HAL_DSI_SetGenericVCID</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, stm32u5xx_hal_dsi.o(.text.HAL_DSI_SetGenericVCID))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DSI_SetGenericVCID
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[2c0]"></a>HAL_DSI_ShortWrite</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, stm32u5xx_hal_dsi.o(.text.HAL_DSI_ShortWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_DSI_ShortWrite &rArr; DSI_ShortWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSI_ShortWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::endFrame()
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[331]"></a>HAL_DSI_Start</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, stm32u5xx_hal_dsi.o(.text.HAL_DSI_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DSI_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[2b8]"></a>HAL_Delay</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, stm32u5xx_hal.o(.text.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WriteEnable
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_OctalModeCfg
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ExitULPM
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_EnterULPM
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Init
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
</UL>

<P><STRONG><a name="[2c2]"></a>HAL_GPIO_EXTI_Falling_Callback</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, stm32u5xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Falling_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_GPIO_EXTI_Falling_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[2a8]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32u5xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Falling_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Falling_Callback
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Rising_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI13_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI8_IRQHandler
</UL>

<P><STRONG><a name="[2c1]"></a>HAL_GPIO_EXTI_Rising_Callback</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, stm32u5xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Rising_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_GPIO_EXTI_Rising_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[31f]"></a>HAL_GPIO_EnableHighSPeedLowVoltage</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, stm32u5xx_hal_gpio.o(.text.HAL_GPIO_EnableHighSPeedLowVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_GPIO_EnableHighSPeedLowVoltage
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MspInit
</UL>

<P><STRONG><a name="[2cd]"></a>HAL_GPIO_Init</STRONG> (Thumb, 984 bytes, Stack size 28 bytes, stm32u5xx_hal_gpio.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MspInit
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[442]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32u5xx_hal_gpio.o(.text.HAL_GPIO_ReadPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Buttons::sample()
</UL>

<P><STRONG><a name="[435]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, stm32u5xx_hal_gpio.o(.text.HAL_GPIO_TogglePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
</UL>

<P><STRONG><a name="[329]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32u5xx_hal_gpio.o(.text.HAL_GPIO_WritePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[2c3]"></a>HAL_GPU2D_CommandListCpltCallback</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, nema_hal.o(.text.HAL_GPU2D_CommandListCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = HAL_GPU2D_CommandListCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_IRQHandler
</UL>

<P><STRONG><a name="[2a9]"></a>HAL_GPU2D_ER_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32u5xx_hal_gpu2d.o(.text.HAL_GPU2D_ER_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPU2D_ER_IRQHandler &rArr; HAL_GPU2D_ErrorCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPU2D_ER_IRQHandler
</UL>

<P><STRONG><a name="[2c5]"></a>HAL_GPU2D_ErrorCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_gpu2d.o(.text.HAL_GPU2D_ErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_GPU2D_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_ER_IRQHandler
</UL>

<P><STRONG><a name="[2aa]"></a>HAL_GPU2D_IRQHandler</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, stm32u5xx_hal_gpu2d.o(.text.HAL_GPU2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = HAL_GPU2D_IRQHandler &rArr; HAL_GPU2D_CommandListCpltCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_CommandListCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPU2D_IRQHandler
</UL>

<P><STRONG><a name="[2c6]"></a>HAL_GPU2D_Init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32u5xx_hal_gpu2d.o(.text.HAL_GPU2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_GPU2D_Init &rArr; HAL_GPU2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPU2D_Init
</UL>

<P><STRONG><a name="[2c7]"></a>HAL_GPU2D_MspInit</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, gpu2d.o(.text.HAL_GPU2D_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_GPU2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_Init
</UL>

<P><STRONG><a name="[4d6]"></a>HAL_GPU2D_ReadRegister</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, stm32u5xx_hal_gpu2d.o(.text.HAL_GPU2D_ReadRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_GPU2D_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_reg_read
</UL>

<P><STRONG><a name="[4d7]"></a>HAL_GPU2D_WriteRegister</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32u5xx_hal_gpu2d.o(.text.HAL_GPU2D_WriteRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_GPU2D_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_reg_write
</UL>

<P><STRONG><a name="[2a7]"></a>HAL_GetTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32u5xx_hal.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::KeySampler::sample(unsigned char&)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MemoryMapped
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Transmit
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_AutoPolling
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Command
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Init
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_LongWrite
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ExitULPM
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_EnterULPM
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Init
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DCACHE_Invalidate
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XSPI_WaitFlagStateUntilTimeout
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSI_ShortWrite
</UL>

<P><STRONG><a name="[337]"></a>HAL_I2CEx_ConfigAnalogFilter</STRONG> (Thumb, 152 bytes, Stack size 12 bytes, stm32u5xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigAnalogFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_I2CEx_ConfigAnalogFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C5_Init
</UL>

<P><STRONG><a name="[338]"></a>HAL_I2CEx_ConfigDigitalFilter</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, stm32u5xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigDigitalFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_I2CEx_ConfigDigitalFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C5_Init
</UL>

<P><STRONG><a name="[2c8]"></a>HAL_I2C_Init</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, stm32u5xx_hal_i2c.o(.text.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C5_Init
</UL>

<P><STRONG><a name="[2c9]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 170 bytes, Stack size 264 bytes, i2c.o(.text.HAL_I2C_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = HAL_I2C_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[33a]"></a>HAL_ICACHE_ConfigAssociativityMode</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32u5xx_hal_icache.o(.text.HAL_ICACHE_ConfigAssociativityMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_ICACHE_ConfigAssociativityMode
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ICACHE_Init
</UL>

<P><STRONG><a name="[33b]"></a>HAL_ICACHE_Enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32u5xx_hal_icache.o(.text.HAL_ICACHE_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ICACHE_Init
</UL>

<P><STRONG><a name="[313]"></a>HAL_IncTick</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32u5xx_hal.o(.text.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[2ce]"></a>HAL_Init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, stm32u5xx_hal.o(.text.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d1]"></a>HAL_InitTick</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, stm32u5xx_hal_timebase_tim.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetClockConfig
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[2d7]"></a>HAL_LTDC_ConfigLayer</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, stm32u5xx_hal_ltdc.o(.text.HAL_LTDC_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[2da]"></a>HAL_LTDC_ErrorCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_ltdc.o(.text.HAL_LTDC_ErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_LTDC_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[2d9]"></a>HAL_LTDC_IRQHandler</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, stm32u5xx_hal_ltdc.o(.text.HAL_LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ReloadEventCallback
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ER_IRQHandler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[2dd]"></a>HAL_LTDC_Init</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, stm32u5xx_hal_ltdc.o(.text.HAL_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[2db]"></a>HAL_LTDC_LineEventCallback</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text.HAL_LTDC_LineEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getInstance()
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::frontPorchEntered()
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::vSync()
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ProgramLineEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[2de]"></a>HAL_LTDC_MspInit</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, ltdc.o(.text.HAL_LTDC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
</UL>

<P><STRONG><a name="[2e0]"></a>HAL_LTDC_ProgramLineEvent</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, stm32u5xx_hal_ltdc.o(.text.HAL_LTDC_ProgramLineEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_LTDC_ProgramLineEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[2dc]"></a>HAL_LTDC_ReloadEventCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_ltdc.o(.text.HAL_LTDC_ReloadEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_LTDC_ReloadEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[2e7]"></a>HAL_LTDC_SetAddress</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, stm32u5xx_hal_ltdc.o(.text.HAL_LTDC_SetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_LTDC_SetAddress &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::setFrameBufferStartAddresses(void*, void*, void*)
</UL>

<P><STRONG><a name="[2d2]"></a>HAL_MspInit</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, stm32u5xx_hal_msp.o(.text.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[2b6]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32u5xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_NVIC_EnableIRQ &rArr; __NVIC_EnableIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_MspInit
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[2b5]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, stm32u5xx_hal_cortex.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EncodePriority
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_MspInit
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[2cf]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32u5xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_NVIC_SetPriorityGrouping &rArr; __NVIC_SetPriorityGrouping
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[353]"></a>HAL_PWREx_ConfigSupply</STRONG> (Thumb, 222 bytes, Stack size 20 bytes, stm32u5xx_hal_pwr_ex.o(.text.HAL_PWREx_ConfigSupply))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_PWREx_ConfigSupply
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPower_Config
</UL>

<P><STRONG><a name="[350]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 350 bytes, Stack size 24 bytes, stm32u5xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_PWREx_ControlVoltageScaling
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[352]"></a>HAL_PWREx_DisableUCPDDeadBattery</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32u5xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableUCPDDeadBattery))
<BR><BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPower_Config
</UL>

<P><STRONG><a name="[31e]"></a>HAL_PWREx_EnableVddIO2</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32u5xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableVddIO2))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MspInit
</UL>

<P><STRONG><a name="[34a]"></a>HAL_PWREx_GetVoltageRange</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32u5xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>

<P><STRONG><a name="[2cb]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 2974 bytes, Stack size 72 bytes, stm32u5xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MspInit
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
</UL>

<P><STRONG><a name="[2ef]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 1320 bytes, Stack size 40 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2d3]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2f0]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[2d4]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_RCC_GetPCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2d0]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 612 bytes, Stack size 44 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[2f1]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 4320 bytes, Stack size 80 bytes, stm32u5xx_hal_rcc.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[300]"></a>HAL_TIMEx_Break2Callback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_Break2Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIMEx_Break2Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2ff]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_BreakCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[302]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_CommutCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIMEx_CommutCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[343]"></a>HAL_TIMEx_ConfigBreakDeadTime</STRONG> (Thumb, 488 bytes, Stack size 16 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_ConfigBreakDeadTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIMEx_ConfigBreakDeadTime
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
</UL>

<P><STRONG><a name="[304]"></a>HAL_TIMEx_DirectionChangeCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_DirectionChangeCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIMEx_DirectionChangeCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[303]"></a>HAL_TIMEx_EncoderIndexCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_EncoderIndexCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIMEx_EncoderIndexCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[305]"></a>HAL_TIMEx_IndexErrorCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_IndexErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIMEx_IndexErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[342]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 492 bytes, Stack size 20 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
</UL>

<P><STRONG><a name="[306]"></a>HAL_TIMEx_TransitionErrorCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_tim_ex.o(.text.HAL_TIMEx_TransitionErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIMEx_TransitionErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2d5]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
</UL>

<P><STRONG><a name="[2f3]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, tim.o(.text.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_Base_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[2d6]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 364 bytes, Stack size 12 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_TIM_Base_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2f5]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 478 bytes, Stack size 32 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_TI2_ConfigInputStage
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
</UL>

<P><STRONG><a name="[2fb]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2fa]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 932 bytes, Stack size 16 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_TransitionErrorCallback
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_IndexErrorCallback
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_DirectionChangeCallback
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_EncoderIndexCallback
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_Break2Callback
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[307]"></a>HAL_TIM_MspPostInit</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, tim.o(.text.HAL_TIM_MspPostInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_TIM_MspPostInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
</UL>

<P><STRONG><a name="[2fc]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_OC_DelayElapsedCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[308]"></a>HAL_TIM_PWM_ConfigChannel</STRONG> (Thumb, 432 bytes, Stack size 32 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_TIM_PWM_ConfigChannel &rArr; TIM_OC6_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC6_SetConfig
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC5_SetConfig
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4_SetConfig
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
</UL>

<P><STRONG><a name="[30f]"></a>HAL_TIM_PWM_Init</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_PWM_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
</UL>

<P><STRONG><a name="[310]"></a>HAL_TIM_PWM_MspInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_PWM_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
</UL>

<P><STRONG><a name="[2fd]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_PWM_PulseFinishedCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[311]"></a>HAL_TIM_PWM_Start</STRONG> (Thumb, 854 bytes, Stack size 72 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_PWM_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::endFrame()
</UL>

<P><STRONG><a name="[2fe]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, main.o(.text.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[301]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_tim.o(.text.HAL_TIM_TriggerCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_TriggerCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[314]"></a>HAL_XSPI_AutoPolling</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, stm32u5xx_hal_xspi.o(.text.HAL_XSPI_AutoPolling))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_XSPI_AutoPolling &rArr; XSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WriteEnable
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_AutoPollingMemReady
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_OctalModeCfg
</UL>

<P><STRONG><a name="[316]"></a>HAL_XSPI_Command</STRONG> (Thumb, 674 bytes, Stack size 48 bytes, stm32u5xx_hal_xspi.o(.text.HAL_XSPI_Command))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HAL_XSPI_Command &rArr; XSPI_ConfigCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XSPI_ConfigCmd
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WriteEnable
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_AutoPollingMemReady
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_MemoryMappedMode
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_OctalModeCfg
</UL>

<P><STRONG><a name="[318]"></a>HAL_XSPI_DeInit</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32u5xx_hal_xspi.o(.text.HAL_XSPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_XSPI_DeInit &rArr; HAL_XSPI_MspDeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[31a]"></a>HAL_XSPI_Init</STRONG> (Thumb, 912 bytes, Stack size 32 bytes, stm32u5xx_hal_xspi.o(.text.HAL_XSPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = HAL_XSPI_Init &rArr; HAL_XSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MspInit
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_SetTimeout
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[31d]"></a>HAL_XSPI_MemoryMapped</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, stm32u5xx_hal_xspi.o(.text.HAL_XSPI_MemoryMapped))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_XSPI_MemoryMapped &rArr; XSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_MemoryMappedMode
</UL>

<P><STRONG><a name="[319]"></a>HAL_XSPI_MspDeInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32u5xx_hal_xspi.o(.text.HAL_XSPI_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_XSPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_DeInit
</UL>

<P><STRONG><a name="[31b]"></a>HAL_XSPI_MspInit</STRONG> (Thumb, 578 bytes, Stack size 328 bytes, octospi.o(.text.HAL_XSPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = HAL_XSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EnableHighSPeedLowVoltage
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableVddIO2
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Init
</UL>

<P><STRONG><a name="[31c]"></a>HAL_XSPI_SetTimeout</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32u5xx_hal_xspi.o(.text.HAL_XSPI_SetTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_XSPI_SetTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Init
</UL>

<P><STRONG><a name="[320]"></a>HAL_XSPI_Transmit</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, stm32u5xx_hal_xspi.o(.text.HAL_XSPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_XSPI_Transmit &rArr; XSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_OctalModeCfg
</UL>

<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[ab]"></a>IdleTaskHook</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, touchgfxhal.o(.text.IdleTaskHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = IdleTaskHook &rArr; touchgfx::HAL::setMCUActive(bool) &rArr; touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID) &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setMCUActive(bool)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getInstance()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_freertos.o(.text.vApplicationIdleHook)
</UL>
<P><STRONG><a name="[8f]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32u5xx_it.o(.text.LTDC_ER_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LTDC_ER_IRQHandler &rArr; HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>LTDC_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32u5xx_it.o(.text.LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = LTDC_IRQHandler &rArr; HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[324]"></a>MX_CRC_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, crc.o(.text.MX_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MX_CRC_Init &rArr; HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[325]"></a>MX_DCACHE1_Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, dcache.o(.text.MX_DCACHE1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MX_DCACHE1_Init &rArr; HAL_DCACHE_Init &rArr; HAL_DCACHE_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DCACHE_Invalidate
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DCACHE_Enable
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DCACHE_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[326]"></a>MX_DCACHE2_Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, dcache.o(.text.MX_DCACHE2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MX_DCACHE2_Init &rArr; HAL_DCACHE_Init &rArr; HAL_DCACHE_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DCACHE_Invalidate
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DCACHE_Enable
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DCACHE_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[327]"></a>MX_DMA2D_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dma2d.o(.text.MX_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MX_DMA2D_Init &rArr; HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[328]"></a>MX_DSIHOST_DSI_Init</STRONG> (Thumb, 522 bytes, Stack size 448 bytes, dsihost.o(.text.MX_DSIHOST_DSI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = MX_DSIHOST_DSI_Init &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Start
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_SetGenericVCID
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ConfigVideoMode
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ConfigErrorMonitor
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ConfigFlowControl
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ConfigPhyTimer
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ConfigHostTimeouts
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Init
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[332]"></a>MX_FREERTOS_Init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, app_freertos.o(.text.MX_FREERTOS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = MX_FREERTOS_Init &rArr; osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[334]"></a>MX_GPIO_Init</STRONG> (Thumb, 562 bytes, Stack size 120 bytes, gpio.o(.text.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = MX_GPIO_Init &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[335]"></a>MX_GPU2D_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gpu2d.o(.text.MX_GPU2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MX_GPU2D_Init &rArr; HAL_GPU2D_Init &rArr; HAL_GPU2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[336]"></a>MX_I2C5_Init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, i2c.o(.text.MX_I2C5_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = MX_I2C5_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigDigitalFilter
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigAnalogFilter
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[339]"></a>MX_ICACHE_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, icache.o(.text.MX_ICACHE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MX_ICACHE_Init &rArr; HAL_ICACHE_ConfigAssociativityMode
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ICACHE_Enable
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ICACHE_ConfigAssociativityMode
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33c]"></a>MX_LTDC_Init</STRONG> (Thumb, 1286 bytes, Stack size 472 bytes, ltdc.o(.text.MX_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ShortWrite
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_LongWrite
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ExitULPM
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_EnterULPM
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33e]"></a>MX_OCTOSPI1_Init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, octospi.o(.text.MX_OCTOSPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = MX_OCTOSPI1_Init &rArr; HAL_XSPI_Init &rArr; HAL_XSPI_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Init
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_DeInit
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_MemoryMappedMode
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_OctalModeCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[341]"></a>MX_TIM8_Init</STRONG> (Thumb, 304 bytes, Stack size 128 bytes, tim.o(.text.MX_TIM8_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = MX_TIM8_Init &rArr; HAL_TIM_MspPostInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_ConfigBreakDeadTime
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[344]"></a>MX_TouchGFX_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_touchgfx.o(.text.MX_TouchGFX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = MX_TouchGFX_Init &rArr; touchgfx_init &rArr; TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HALGPU2D::initialize(int) &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_components_init
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a3]"></a>MX_TouchGFX_PreOSInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_touchgfx.o(.text.MX_TouchGFX_PreOSInit))
<BR><BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, portasm.o(.text.PendSV_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext &rArr; xTaskCallApplicationTaskHook
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[349]"></a>PeriphCommonClock_Config</STRONG> (Thumb, 80 bytes, Stack size 240 bytes, main.o(.text.PeriphCommonClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = PeriphCommonClock_Config &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, portasm.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>StartDefaultTask</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, app_freertos.o(.text.StartDefaultTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = StartDefaultTask &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_freertos.o(.text.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, cmsis_os2.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SysTick_Handler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[34f]"></a>SystemClock_Config</STRONG> (Thumb, 140 bytes, Stack size 128 bytes, main.o(.text.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>SystemInit</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, system_stm32u5xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>TIM6_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32u5xx_it.o(.text.TIM6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM6_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[2f4]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 726 bytes, Stack size 12 bytes, stm32u5xx_hal_tim.o(.text.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[312]"></a>TIM_CCxChannelCmd</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32u5xx_hal_tim.o(.text.TIM_CCxChannelCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
</UL>

<P><STRONG><a name="[2f6]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, stm32u5xx_hal_tim.o(.text.TIM_ETR_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[30a]"></a>TIM_OC2_SetConfig</STRONG> (Thumb, 528 bytes, Stack size 20 bytes, stm32u5xx_hal_tim.o(.text.TIM_OC2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[9b]"></a>TouchGFX_Task</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, app_touchgfx.o(.text.TouchGFX_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = TouchGFX_Task &rArr; touchgfx_taskEntry &rArr; touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_freertos.o(.text.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[6]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32u5xx_it.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32u599xx.o(RESET)
</UL>
<P><STRONG><a name="[35c]"></a>getFont_verdana_20_4bpp()</STRONG> (Thumb, 170 bytes, Stack size 72 bytes, table_verdana_20_4bpp.o(.text._Z23getFont_verdana_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = getFont_verdana_20_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[360]"></a>getFont_verdanab_20_4bpp()</STRONG> (Thumb, 172 bytes, Stack size 72 bytes, table_verdanab_20_4bpp.o(.text._Z24getFont_verdanab_20_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = getFont_verdanab_20_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[361]"></a>getFont_SamsungOneKorean_700_v2_0_hinted_20200508_30_4bpp()</STRONG> (Thumb, 174 bytes, Stack size 72 bytes, table_samsungonekorean_700_v2_0_hinted_20200508_30_4bpp.o(.text._Z57getFont_SamsungOneKorean_700_v2_0_hinted_20200508_30_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = getFont_SamsungOneKorean_700_v2_0_hinted_20200508_30_4bpp() &rArr; touchgfx::FusedFont::FusedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::GeneratedFont::GeneratedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FusedFont::FusedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[495]"></a>__cxxabiv1::__isOurExceptionClass(_Unwind_Control_Block const*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, cxa_exception.cpp.o(.text._ZN10__cxxabiv121__isOurExceptionClassEPK21_Unwind_Control_Block), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>

<P><STRONG><a name="[d9]"></a>TouchGFXHAL::beginFrame()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL10beginFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = TouchGFXHAL::beginFrame() &rArr; TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b1]"></a>TouchGFXHAL::initialize()</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HALGPU2D::initialize(int) &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::enableMCULoadCalculation(bool)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setMCUInstrumentation(touchgfx::MCUInstrumentation*)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockDMAToFrontPorch(bool)
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setButtonController(touchgfx::ButtonController*)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CortexMMCUInstrumentation::init()
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[cb]"></a>TouchGFXHAL::enableInterrupts()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL16enableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TouchGFXHAL::enableInterrupts() &rArr; TouchGFXGeneratedHAL::enableInterrupts() &rArr; __NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableInterrupts()
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b4]"></a>TouchGFXHAL::flushFrameBuffer(touchgfx::Rect const&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TouchGFXHAL::flushFrameBuffer(touchgfx::Rect const&) &rArr; TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[b3]"></a>TouchGFXHAL::flushFrameBuffer()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TouchGFXHAL::flushFrameBuffer() &rArr; TouchGFXGeneratedHAL::flushFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[cc]"></a>TouchGFXHAL::disableInterrupts()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL17disableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TouchGFXHAL::disableInterrupts() &rArr; TouchGFXGeneratedHAL::disableInterrupts() &rArr; __NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::disableInterrupts()
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[db]"></a>TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL17setTFTFrameBufferEPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TouchGFXHAL::setTFTFrameBuffer(unsigned short*) &rArr; TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[ca]"></a>TouchGFXHAL::configureInterrupts()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL19configureInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TouchGFXHAL::configureInterrupts() &rArr; TouchGFXGeneratedHAL::configureInterrupts() &rArr; __NVIC_SetPriority(IRQn_Type, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::configureInterrupts()
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority(IRQn_Type, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[cd]"></a>TouchGFXHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL28enableLCDControllerInterruptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TouchGFXHAL::enableLCDControllerInterrupt() &rArr; TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[cf]"></a>TouchGFXHAL::setFrameBufferStartAddresses(void*, void*, void*)</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = TouchGFXHAL::setFrameBufferStartAddresses(void*, void*, void*) &rArr; touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAddress
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[da]"></a>TouchGFXHAL::endFrame()</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = TouchGFXHAL::endFrame() &rArr; TouchGFXGeneratedHAL::endFrame() &rArr; touchgfx::HALGPU2D::endFrame() &rArr; nema_cl_wait &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ShortWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[ba]"></a>TouchGFXHAL::blockCopy(void*, void const*, unsigned int)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TouchGFXHAL::blockCopy(void*, void const*, unsigned int) &rArr; TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int) &rArr; touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[36c]"></a>TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, touchgfxconfiguration.o(.text._ZN11TouchGFXHALC2ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CortexMMCUInstrumentation::CortexMMCUInstrumentation__sub_object()
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.4
</UL>

<P><STRONG><a name="[ae]"></a>TouchGFXHAL::~TouchGFXHAL__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN11TouchGFXHALD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TouchGFXHAL::~TouchGFXHAL__deallocating() &rArr; TouchGFXHAL::~TouchGFXHAL__sub_object() &rArr; TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object() &rArr; touchgfx::HALGPU2D::~HALGPU2D__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::~TouchGFXHAL__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[a9]"></a>TouchGFXHAL::~TouchGFXHAL__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN11TouchGFXHALD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TouchGFXHAL::~TouchGFXHAL__sub_object() &rArr; TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object() &rArr; touchgfx::HALGPU2D::~HALGPU2D__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object()
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::~TouchGFXHAL__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.text.__cxx_global_var_init.4)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[370]"></a>FrontendHeap::getInstance()</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeap11getInstanceEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = FrontendHeap::getInstance() &rArr; FrontendHeap::FrontendHeap__sub_object() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[371]"></a>FrontendHeap::FrontendHeap__sub_object()</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeapC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = FrontendHeap::FrontendHeap__sub_object() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::Model()
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::FrontendHeapBase__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, FrontendApplication&)
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
</UL>

<P><STRONG><a name="[e1]"></a>FrontendHeap::~FrontendHeap__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeapD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = FrontendHeap::~FrontendHeap__deallocating() &rArr; FrontendHeap::~FrontendHeap__sub_object() &rArr; FrontendApplication::~FrontendApplication__sub_object() &rArr; FrontendApplicationBase::~FrontendApplicationBase__sub_object() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[9f]"></a>FrontendHeap::~FrontendHeap__sub_object()</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FrontendHeap::~FrontendHeap__sub_object() &rArr; FrontendApplication::~FrontendApplication__sub_object() &rArr; FrontendApplicationBase::~FrontendApplicationBase__sub_object() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::~FrontendHeapBase__sub_object()
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::~FrontendApplication__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.text._ZN12FrontendHeap11getInstanceEv)
<LI> touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[e6]"></a>ModelListener::modelUpdateFPS(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, fontscreenpresenter.o(.text._ZN13ModelListener14modelUpdateFPSEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ModelListener::modelUpdateFPS(unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
<LI> mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
<LI> fontscreenpresenter.o(.rodata._ZTV13ModelListener)
</UL>
<P><STRONG><a name="[e5]"></a>ModelListener::modelUpdateMCU(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, fontscreenpresenter.o(.text._ZN13ModelListener14modelUpdateMCUEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ModelListener::modelUpdateMCU(unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
<LI> mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
<LI> fontscreenpresenter.o(.rodata._ZTV13ModelListener)
</UL>
<P><STRONG><a name="[409]"></a>ModelListener::bind(Model*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN13ModelListener4bindEP5Model))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ModelListener::bind(Model*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[3a6]"></a>ModelListener::ModelListener__sub_object()</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, fontscreenpresenter.o(.text._ZN13ModelListenerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ModelListener::ModelListener__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter::MainScreenPresenter(MainScreenView&)
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter::FontScreenPresenter(FontScreenView&)
</UL>

<P><STRONG><a name="[e4]"></a>ModelListener::~ModelListener__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fontscreenpresenter.o(.text._ZN13ModelListenerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ModelListener::~ModelListener__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::~ModelListener__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenpresenter.o(.rodata._ZTV13ModelListener)
</UL>
<P><STRONG><a name="[e3]"></a>ModelListener::~ModelListener__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, fontscreenpresenter.o(.text._ZN13ModelListenerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ModelListener::~ModelListener__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter::~MainScreenPresenter__sub_object()
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::~ModelListener__deallocating()
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter::~FontScreenPresenter__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenpresenter.o(.rodata._ZTV13ModelListener)
</UL>
<P><STRONG><a name="[529]"></a>BitmapDatabase::getInstance()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bitmapdatabase.o(.text._ZN14BitmapDatabase11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[52a]"></a>BitmapDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(.text._ZN14BitmapDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[ea]"></a>FontScreenView::setupScreen()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, fontscreenview.o(.text._ZN14FontScreenView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FontScreenView::setupScreen() &rArr; FontScreenViewBase::setupScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenview.o(.rodata._ZTV14FontScreenView)
</UL>
<P><STRONG><a name="[ec]"></a>FontScreenView::tearDownScreen()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, fontscreenview.o(.text._ZN14FontScreenView14tearDownScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FontScreenView::tearDownScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::tearDownScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenview.o(.rodata._ZTV14FontScreenView)
</UL>
<P><STRONG><a name="[f0]"></a>FontScreenView::handleTickEvent()</STRONG> (Thumb, 270 bytes, Stack size 48 bytes, fontscreenview.o(.text._ZN14FontScreenView15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FontScreenView::handleTickEvent() &rArr; touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::fromUTF8(unsigned char const*, unsigned short*, unsigned short)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::memset(void*, unsigned char, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenview.o(.rodata._ZTV14FontScreenView)
</UL>
<P><STRONG><a name="[f2]"></a>FontScreenView::FusionFontTextUpdate()</STRONG> (Thumb, 64 bytes, Stack size 64 bytes, fontscreenview.o(.text._ZN14FontScreenView20FusionFontTextUpdateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FontScreenView::FusionFontTextUpdate() &rArr; touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::fromUTF8(unsigned char const*, unsigned short*, unsigned short)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenview.o(.rodata._ZTV14FontScreenView)
</UL>
<P><STRONG><a name="[37b]"></a>FontScreenView::FontScreenView()</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, fontscreenview.o(.text._ZN14FontScreenViewC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = FontScreenView::FontScreenView() &rArr; FontScreenViewBase::FontScreenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[57d]"></a>FontScreenView::FontScreenView__sub_object()</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, fontscreenview.o(.text._ZN14FontScreenViewC2Ev), UNUSED)

<P><STRONG><a name="[e8]"></a>FontScreenView::~FontScreenView__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fontscreenview.o(.text._ZN14FontScreenViewD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FontScreenView::~FontScreenView__deallocating() &rArr; FontScreenView::~FontScreenView__sub_object() &rArr; FontScreenViewBase::~FontScreenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::~FontScreenView__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenview.o(.rodata._ZTV14FontScreenView)
</UL>
<P><STRONG><a name="[e7]"></a>FontScreenView::~FontScreenView__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, fontscreenview.o(.text._ZN14FontScreenViewD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FontScreenView::~FontScreenView__sub_object() &rArr; FontScreenViewBase::~FontScreenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::~FontScreenViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::~FontScreenView__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenview.o(.rodata._ZTV14FontScreenView)
</UL>
<P><STRONG><a name="[f5]"></a>MainScreenView::setupScreen()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mainscreenview.o(.text._ZN14MainScreenView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MainScreenView::setupScreen() &rArr; MainScreenViewBase::setupScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.rodata._ZTV14MainScreenView)
</UL>
<P><STRONG><a name="[f6]"></a>MainScreenView::tearDownScreen()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mainscreenview.o(.text._ZN14MainScreenView14tearDownScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MainScreenView::tearDownScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::tearDownScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.rodata._ZTV14MainScreenView)
</UL>
<P><STRONG><a name="[f7]"></a>MainScreenView::handleTickEvent()</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, mainscreenview.o(.text._ZN14MainScreenView15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MainScreenView::handleTickEvent() &rArr; MainScreenView::updateFPS(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getInstance()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::updateFPS(unsigned short)
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getLCDRefreshCount()
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::updateMCU(unsigned short)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getMCULoadPct() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.rodata._ZTV14MainScreenView)
</UL>
<P><STRONG><a name="[381]"></a>MainScreenView::updateFPS(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainscreenview.o(.text._ZN14MainScreenView9updateFPSEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MainScreenView::updateFPS(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::handleTickEvent()
</UL>

<P><STRONG><a name="[37f]"></a>MainScreenView::updateMCU(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainscreenview.o(.text._ZN14MainScreenView9updateMCUEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MainScreenView::updateMCU(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::handleTickEvent()
</UL>

<P><STRONG><a name="[382]"></a>MainScreenView::MainScreenView()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, mainscreenview.o(.text._ZN14MainScreenViewC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MainScreenView::MainScreenView() &rArr; MainScreenViewBase::MainScreenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[57e]"></a>MainScreenView::MainScreenView__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, mainscreenview.o(.text._ZN14MainScreenViewC2Ev), UNUSED)

<P><STRONG><a name="[f4]"></a>MainScreenView::~MainScreenView__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, mainscreenview.o(.text._ZN14MainScreenViewD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MainScreenView::~MainScreenView__deallocating() &rArr; MainScreenView::~MainScreenView__sub_object() &rArr; MainScreenViewBase::~MainScreenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::~MainScreenView__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.rodata._ZTV14MainScreenView)
</UL>
<P><STRONG><a name="[f3]"></a>MainScreenView::~MainScreenView__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, mainscreenview.o(.text._ZN14MainScreenViewD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MainScreenView::~MainScreenView__sub_object() &rArr; MainScreenViewBase::~MainScreenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::~MainScreenViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::~MainScreenView__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.rodata._ZTV14MainScreenView)
</UL>
<P><STRONG><a name="[e2]"></a>FrontendHeapBase::gotoStartScreen(FrontendApplication&)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = FrontendHeapBase::gotoStartScreen(FrontendApplication&) &rArr; FrontendApplicationBase::gotoMainScreenScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
<LI> touchgfxconfiguration.o(.rodata._ZTV16FrontendHeapBase)
</UL>
<P><STRONG><a name="[372]"></a>FrontendHeapBase::FrontendHeapBase__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, FrontendApplication&)</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, touchgfxconfiguration.o(.text._ZN16FrontendHeapBaseC2ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FrontendHeapBase::FrontendHeapBase__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, FrontendApplication&) &rArr; touchgfx::MVPHeap::MVPHeap__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::MVPApplication&)
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPHeap::MVPHeap__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::MVPApplication&)
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[fa]"></a>FrontendHeapBase::~FrontendHeapBase__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN16FrontendHeapBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FrontendHeapBase::~FrontendHeapBase__deallocating() &rArr; FrontendHeapBase::~FrontendHeapBase__sub_object() &rArr; touchgfx::MVPHeap::~MVPHeap__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::~FrontendHeapBase__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTV16FrontendHeapBase)
</UL>
<P><STRONG><a name="[f9]"></a>FrontendHeapBase::~FrontendHeapBase__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN16FrontendHeapBaseD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FrontendHeapBase::~FrontendHeapBase__sub_object() &rArr; touchgfx::MVPHeap::~MVPHeap__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPHeap::~MVPHeap__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::~FrontendHeapBase__deallocating()
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTV16FrontendHeapBase)
</UL>
<P><STRONG><a name="[439]"></a>TypedTextDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(.text._ZN17TypedTextDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[3b2]"></a>TypedTextDatabase::getFonts()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, typedtextdatabase.o(.text._ZN17TypedTextDatabase8getFontsEv))
<BR><BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::getFont(unsigned short)
</UL>

<P><STRONG><a name="[387]"></a>FontScreenViewBase::application()</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN18FontScreenViewBase11applicationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FontScreenViewBase::application()
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::handleKeyEvent(unsigned char)
</UL>

<P><STRONG><a name="[fd]"></a>FontScreenViewBase::setupScreen()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, fontscreenviewbase.o(.text._ZN18FontScreenViewBase11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FontScreenViewBase::setupScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
</UL>
<P><STRONG><a name="[f1]"></a>FontScreenViewBase::handleKeyEvent(unsigned char)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, fontscreenviewbase.o(.text._ZN18FontScreenViewBase14handleKeyEventEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = FontScreenViewBase::handleKeyEvent(unsigned char) &rArr; FrontendApplicationBase::gotoMainScreenScreenSlideTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenScreenSlideTransitionEast()
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::application()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> fontscreenview.o(.rodata._ZTV14FontScreenView)
<LI> fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
</UL>
<P><STRONG><a name="[38a]"></a>FontScreenViewBase::FontScreenViewBase()</STRONG> (Thumb, 470 bytes, Stack size 128 bytes, fontscreenviewbase.o(.text._ZN18FontScreenViewBaseC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard(unsigned short const*)
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, char const*, ...)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText const&)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText__sub_object(unsigned short)
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setLinespacing(short)
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setColor(touchgfx::colortype)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box__sub_object()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;FontScreenPresenter&rang;::View__sub_object()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::~TypedText__sub_object()
</UL>

<P><STRONG><a name="[37c]"></a>FontScreenViewBase::FontScreenViewBase__sub_object()</STRONG> (Thumb, 470 bytes, Stack size 128 bytes, fontscreenviewbase.o(.text._ZN18FontScreenViewBaseC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = FontScreenViewBase::FontScreenViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::FontScreenView()
</UL>

<P><STRONG><a name="[fc]"></a>FontScreenViewBase::~FontScreenViewBase__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN18FontScreenViewBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FontScreenViewBase::~FontScreenViewBase__deallocating() &rArr; FontScreenViewBase::~FontScreenViewBase() &rArr; touchgfx::Box::~Box__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::~FontScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
</UL>
<P><STRONG><a name="[fb]"></a>FontScreenViewBase::~FontScreenViewBase()</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN18FontScreenViewBaseD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FontScreenViewBase::~FontScreenViewBase() &rArr; touchgfx::Box::~Box__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;FontScreenPresenter&rang;::~View__sub_object()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box__sub_object()
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::~FontScreenViewBase__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
</UL>
<P><STRONG><a name="[37d]"></a>FontScreenViewBase::~FontScreenViewBase__sub_object()</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN18FontScreenViewBaseD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FontScreenViewBase::~FontScreenViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::~FontScreenView__sub_object()
</UL>

<P><STRONG><a name="[39c]"></a>MainScreenViewBase::application()</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, mainscreenviewbase.o(.text._ZN18MainScreenViewBase11applicationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MainScreenViewBase::application()
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::handleKeyEvent(unsigned char)
</UL>

<P><STRONG><a name="[102]"></a>MainScreenViewBase::setupScreen()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, mainscreenviewbase.o(.text._ZN18MainScreenViewBase11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = MainScreenViewBase::setupScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
</UL>
<P><STRONG><a name="[f8]"></a>MainScreenViewBase::handleKeyEvent(unsigned char)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, mainscreenviewbase.o(.text._ZN18MainScreenViewBase14handleKeyEventEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = MainScreenViewBase::handleKeyEvent(unsigned char) &rArr; FrontendApplicationBase::gotoFontScreenScreenSlideTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::application()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoFontScreenScreenSlideTransitionEast()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mainscreenview.o(.rodata._ZTV14MainScreenView)
<LI> mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
</UL>
<P><STRONG><a name="[39e]"></a>MainScreenViewBase::MainScreenViewBase()</STRONG> (Thumb, 390 bytes, Stack size 96 bytes, mainscreenviewbase.o(.text._ZN18MainScreenViewBaseC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::startAnimation(bool, bool, bool)
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::setUpdateTicksInterval(unsigned char)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::setBitmaps(unsigned short, unsigned short)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::AnimatedImage__sub_object(unsigned char const&)
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;MainScreenPresenter&rang;::View__sub_object()
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText const&)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText__sub_object(unsigned short)
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setLinespacing(short)
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setColor(touchgfx::colortype)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box__sub_object()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::~TypedText__sub_object()
</UL>

<P><STRONG><a name="[383]"></a>MainScreenViewBase::MainScreenViewBase__sub_object()</STRONG> (Thumb, 390 bytes, Stack size 96 bytes, mainscreenviewbase.o(.text._ZN18MainScreenViewBaseC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MainScreenViewBase::MainScreenViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::MainScreenView()
</UL>

<P><STRONG><a name="[101]"></a>MainScreenViewBase::~MainScreenViewBase__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, mainscreenviewbase.o(.text._ZN18MainScreenViewBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MainScreenViewBase::~MainScreenViewBase__deallocating() &rArr; MainScreenViewBase::~MainScreenViewBase() &rArr; touchgfx::AnimatedImage::~AnimatedImage__sub_object() &rArr; touchgfx::Image::~Image__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::~MainScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
</UL>
<P><STRONG><a name="[100]"></a>MainScreenViewBase::~MainScreenViewBase()</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, mainscreenviewbase.o(.text._ZN18MainScreenViewBaseD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MainScreenViewBase::~MainScreenViewBase() &rArr; touchgfx::AnimatedImage::~AnimatedImage__sub_object() &rArr; touchgfx::Image::~Image__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;MainScreenPresenter&rang;::~View__sub_object()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::~AnimatedImage__sub_object()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box__sub_object()
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::~MainScreenViewBase__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
</UL>
<P><STRONG><a name="[384]"></a>MainScreenViewBase::~MainScreenViewBase__sub_object()</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, mainscreenviewbase.o(.text._ZN18MainScreenViewBaseD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MainScreenViewBase::~MainScreenViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::~MainScreenView__sub_object()
</UL>

<P><STRONG><a name="[104]"></a>FontScreenPresenter::deactivate()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, fontscreenpresenter.o(.text._ZN19FontScreenPresenter10deactivateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FontScreenPresenter::deactivate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
</UL>
<P><STRONG><a name="[103]"></a>FontScreenPresenter::activate()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, fontscreenpresenter.o(.text._ZN19FontScreenPresenter8activateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FontScreenPresenter::activate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
</UL>
<P><STRONG><a name="[3a4]"></a>FontScreenPresenter::FontScreenPresenter(FontScreenView&)</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, fontscreenpresenter.o(.text._ZN19FontScreenPresenterC2ER14FontScreenView))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FontScreenPresenter::FontScreenPresenter(FontScreenView&) &rArr; ModelListener::ModelListener__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::ModelListener__sub_object()
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::Presenter__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[57f]"></a>FontScreenPresenter::FontScreenPresenter__sub_object(FontScreenView&)</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, fontscreenpresenter.o(.text._ZN19FontScreenPresenterC2ER14FontScreenView), UNUSED)

<P><STRONG><a name="[106]"></a>FontScreenPresenter::~FontScreenPresenter__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fontscreenpresenter.o(.text._ZN19FontScreenPresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FontScreenPresenter::~FontScreenPresenter__deallocating() &rArr; FontScreenPresenter::~FontScreenPresenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter::~FontScreenPresenter__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to FontScreenPresenter::~FontScreenPresenter__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
</UL>
<P><STRONG><a name="[105]"></a>FontScreenPresenter::~FontScreenPresenter__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, fontscreenpresenter.o(.text._ZN19FontScreenPresenterD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FontScreenPresenter::~FontScreenPresenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::~Presenter__sub_object()
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::~ModelListener__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to FontScreenPresenter::~FontScreenPresenter()
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter::~FontScreenPresenter__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
</UL>
<P><STRONG><a name="[10d]"></a>FrontendApplication::handleTickEvent()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplication.o(.text._ZN19FrontendApplication15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = FrontendApplication::handleTickEvent() &rArr; touchgfx::Application::handleTickEvent() &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[377]"></a>FrontendApplication::FrontendApplication(Model&, FrontendHeap&)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, frontendapplication.o(.text._ZN19FrontendApplicationC2ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[580]"></a>FrontendApplication::FrontendApplication__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, frontendapplication.o(.text._ZN19FrontendApplicationC2ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[110]"></a>FrontendApplication::~FrontendApplication__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplication.o(.text._ZN19FrontendApplicationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FrontendApplication::~FrontendApplication__deallocating() &rArr; FrontendApplication::~FrontendApplication__sub_object() &rArr; FrontendApplicationBase::~FrontendApplicationBase__sub_object() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::~FrontendApplication__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[10f]"></a>FrontendApplication::~FrontendApplication__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN19FrontendApplicationD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplication::~FrontendApplication__sub_object() &rArr; FrontendApplicationBase::~FrontendApplicationBase__sub_object() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::~FrontendApplication__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[11b]"></a>MainScreenPresenter::deactivate()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, mainscreenpresenter.o(.text._ZN19MainScreenPresenter10deactivateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = MainScreenPresenter::deactivate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
</UL>
<P><STRONG><a name="[11a]"></a>MainScreenPresenter::activate()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, mainscreenpresenter.o(.text._ZN19MainScreenPresenter8activateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = MainScreenPresenter::activate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
</UL>
<P><STRONG><a name="[3a9]"></a>MainScreenPresenter::MainScreenPresenter(MainScreenView&)</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, mainscreenpresenter.o(.text._ZN19MainScreenPresenterC2ER14MainScreenView))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MainScreenPresenter::MainScreenPresenter(MainScreenView&) &rArr; ModelListener::ModelListener__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::ModelListener__sub_object()
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::Presenter__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[581]"></a>MainScreenPresenter::MainScreenPresenter__sub_object(MainScreenView&)</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, mainscreenpresenter.o(.text._ZN19MainScreenPresenterC2ER14MainScreenView), UNUSED)

<P><STRONG><a name="[11d]"></a>MainScreenPresenter::~MainScreenPresenter__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, mainscreenpresenter.o(.text._ZN19MainScreenPresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MainScreenPresenter::~MainScreenPresenter__deallocating() &rArr; MainScreenPresenter::~MainScreenPresenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter::~MainScreenPresenter__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to MainScreenPresenter::~MainScreenPresenter__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
</UL>
<P><STRONG><a name="[11c]"></a>MainScreenPresenter::~MainScreenPresenter__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, mainscreenpresenter.o(.text._ZN19MainScreenPresenterD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MainScreenPresenter::~MainScreenPresenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::~Presenter__sub_object()
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::~ModelListener__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to MainScreenPresenter::~MainScreenPresenter()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter::~MainScreenPresenter__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
</UL>
<P><STRONG><a name="[122]"></a>STM32TouchController::sampleTouch(int&, int&)</STRONG> (Thumb, 14 bytes, Stack size 12 bytes, stm32touchcontroller.o(.text._ZN20STM32TouchController11sampleTouchERiS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = STM32TouchController::sampleTouch(int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[121]"></a>STM32TouchController::init()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32touchcontroller.o(.text._ZN20STM32TouchController4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = STM32TouchController::init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[3aa]"></a>STM32TouchController::STM32TouchController__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN20STM32TouchControllerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = STM32TouchController::STM32TouchController__sub_object() &rArr; touchgfx::TouchController::TouchController__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchController::TouchController__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[120]"></a>STM32TouchController::~STM32TouchController__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, stm32touchcontroller.o(.text._ZN20STM32TouchControllerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = STM32TouchController::~STM32TouchController__deallocating() &rArr; STM32TouchController::~STM32TouchController__sub_object() &rArr; touchgfx::TouchController::~TouchController__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::~STM32TouchController__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[a5]"></a>STM32TouchController::~STM32TouchController__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32touchcontroller.o(.text._ZN20STM32TouchControllerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = STM32TouchController::~STM32TouchController__sub_object() &rArr; touchgfx::TouchController::~TouchController__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchController::~TouchController__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::~STM32TouchController__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.text.__cxx_global_var_init)
<LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[12f]"></a>TouchGFXGeneratedHAL::beginFrame()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL10beginFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::beginFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[125]"></a>TouchGFXGeneratedHAL::initialize()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HALGPU2D::initialize(int) &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::initialize(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[12b]"></a>TouchGFXGeneratedHAL::enableInterrupts()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL16enableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TouchGFXGeneratedHAL::enableInterrupts() &rArr; __NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[127]"></a>TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer(touchgfx::Rect const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::flushFrameBuffer(touchgfx::Rect const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[126]"></a>TouchGFXGeneratedHAL::flushFrameBuffer()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN20TouchGFXGeneratedHAL16flushFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::flushFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::flushFrameBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[12c]"></a>TouchGFXGeneratedHAL::disableInterrupts()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL17disableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TouchGFXGeneratedHAL::disableInterrupts() &rArr; __NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::disableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[131]"></a>TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[12a]"></a>TouchGFXGeneratedHAL::configureInterrupts()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL19configureInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TouchGFXGeneratedHAL::configureInterrupts() &rArr; __NVIC_SetPriority(IRQn_Type, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority(IRQn_Type, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::configureInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[12d]"></a>TouchGFXGeneratedHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 88 bytes, Stack size 4 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[130]"></a>TouchGFXGeneratedHAL::endFrame()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = TouchGFXGeneratedHAL::endFrame() &rArr; touchgfx::HALGPU2D::endFrame() &rArr; nema_cl_wait &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::endFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[129]"></a>TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int) &rArr; touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[36d]"></a>TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, touchgfxconfiguration.o(.text._ZN20TouchGFXGeneratedHALC2ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::HALGPU2D__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[124]"></a>TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHALD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating() &rArr; TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object() &rArr; touchgfx::HALGPU2D::~HALGPU2D__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[123]"></a>TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN20TouchGFXGeneratedHALD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object() &rArr; touchgfx::HALGPU2D::~HALGPU2D__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::~HALGPU2D__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::~TouchGFXHAL__sub_object()
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[132]"></a>ApplicationFontProvider::getFont(unsigned short)</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, applicationfontprovider.o(.text._ZN23ApplicationFontProvider7getFontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ApplicationFontProvider::getFont(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[133]"></a>ApplicationFontProvider::~ApplicationFontProvider__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, applicationfontprovider.o(.text._ZN23ApplicationFontProviderD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ApplicationFontProvider::~ApplicationFontProvider__deallocating() &rArr; ApplicationFontProvider::~ApplicationFontProvider__sub_object() &rArr; touchgfx::FontProvider::~FontProvider__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::~ApplicationFontProvider__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[a8]"></a>ApplicationFontProvider::~ApplicationFontProvider__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN23ApplicationFontProviderD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ApplicationFontProvider::~ApplicationFontProvider__sub_object() &rArr; touchgfx::FontProvider::~FontProvider__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FontProvider::~FontProvider__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::~ApplicationFontProvider__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.text.__cxx_global_var_init.3)
<LI> applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[111]"></a>FrontendApplicationBase::changeToStartScreen()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, frontendapplication.o(.text._ZN23FrontendApplicationBase19changeToStartScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = FrontendApplicationBase::changeToStartScreen() &rArr; FrontendApplicationBase::gotoMainScreenScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[385]"></a>FrontendApplicationBase::gotoMainScreenScreenNoTransition()</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBase32gotoMainScreenScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = FrontendApplicationBase::gotoMainScreenScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator=(touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&&)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::gotoStartScreen(FrontendApplication&)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::changeToStartScreen()
</UL>

<P><STRONG><a name="[a0]"></a>FrontendApplicationBase::gotoMainScreenScreenNoTransitionImpl()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBase36gotoMainScreenScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoMainScreenScreenNoTransitionImpl() &rArr; MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; MainScreenView::MainScreenView() &rArr; MainScreenViewBase::MainScreenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.text._ZN23FrontendApplicationBase32gotoMainScreenScreenNoTransitionEv)
</UL>
<P><STRONG><a name="[39d]"></a>FrontendApplicationBase::gotoFontScreenScreenSlideTransitionEast()</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBase39gotoFontScreenScreenSlideTransitionEastEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = FrontendApplicationBase::gotoFontScreenScreenSlideTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator=(touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&&)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::handleKeyEvent(unsigned char)
</UL>

<P><STRONG><a name="[389]"></a>FrontendApplicationBase::gotoMainScreenScreenSlideTransitionEast()</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionEastEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = FrontendApplicationBase::gotoMainScreenScreenSlideTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator=(touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&&)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::handleKeyEvent(unsigned char)
</UL>

<P><STRONG><a name="[a1]"></a>FrontendApplicationBase::gotoFontScreenScreenSlideTransitionEastImpl()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBase43gotoFontScreenScreenSlideTransitionEastImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoFontScreenScreenSlideTransitionEastImpl() &rArr; FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; FontScreenView::FontScreenView() &rArr; FontScreenViewBase::FontScreenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.text._ZN23FrontendApplicationBase39gotoFontScreenScreenSlideTransitionEastEv)
</UL>
<P><STRONG><a name="[a2]"></a>FrontendApplicationBase::gotoMainScreenScreenSlideTransitionEastImpl()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBase43gotoMainScreenScreenSlideTransitionEastImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoMainScreenScreenSlideTransitionEastImpl() &rArr; MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; MainScreenView::MainScreenView() &rArr; MainScreenViewBase::MainScreenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.text._ZN23FrontendApplicationBase39gotoMainScreenScreenSlideTransitionEastEv)
</UL>
<P><STRONG><a name="[3b9]"></a>FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseC2ER5ModelR12FrontendHeap), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getInstance()
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object()
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::MVPApplication__sub_object()
</UL>

<P><STRONG><a name="[3a8]"></a>FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseC2ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[136]"></a>FrontendApplicationBase::~FrontendApplicationBase__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::~FrontendApplicationBase__deallocating() &rArr; FrontendApplicationBase::~FrontendApplicationBase__sub_object() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[135]"></a>FrontendApplicationBase::~FrontendApplicationBase__sub_object()</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN23FrontendApplicationBaseD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FrontendApplicationBase::~FrontendApplicationBase__sub_object() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::~MVPApplication__sub_object()
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::~FrontendApplication__sub_object()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[408]"></a>Model::bind(ModelListener*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN5Model4bindEP13ModelListener))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Model::bind(ModelListener*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[3a7]"></a>Model::tick()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, model.o(.text._ZN5Model4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Model::tick()
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>

<P><STRONG><a name="[376]"></a>Model::Model()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, model.o(.text._ZN5ModelC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Model::Model()
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[582]"></a>Model::Model__sub_object()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, model.o(.text._ZN5ModelC2Ev), UNUSED)

<P><STRONG><a name="[13d]"></a>STM32DMA::getDMAType()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, stm32dma.o(.text._ZN8STM32DMA10getDMATypeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = STM32DMA::getDMAType()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[13a]"></a>STM32DMA::initialize()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8STM32DMA10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = STM32DMA::initialize() &rArr; __NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[137]"></a>STM32DMA::getBlitCaps()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32dma.o(.text._ZN8STM32DMA11getBlitCapsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = STM32DMA::getBlitCaps()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[142]"></a>STM32DMA::setupDataCopy(touchgfx::BlitOp const&)</STRONG> (Thumb, 942 bytes, Stack size 48 bytes, stm32dma.o(.text._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = STM32DMA::setupDataCopy(touchgfx::BlitOp const&) &rArr; STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::operator unsigned int() const
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[143]"></a>STM32DMA::setupDataFill(touchgfx::BlitOp const&)</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, stm32dma.o(.text._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = STM32DMA::setupDataFill(touchgfx::BlitOp const&) &rArr; STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::operator unsigned int() const
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[13c]"></a>STM32DMA::signalDMAInterrupt()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8STM32DMA18signalDMAInterruptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = STM32DMA::signalDMAInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[3be]"></a>STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataCopy(touchgfx::BlitOp const&)
</UL>

<P><STRONG><a name="[3bf]"></a>STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataFill(touchgfx::BlitOp const&)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataCopy(touchgfx::BlitOp const&)
</UL>

<P><STRONG><a name="[3c1]"></a>STM32DMA::STM32DMA()</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, stm32dma.o(.text._ZN8STM32DMAC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = STM32DMA::STM32DMA() &rArr; touchgfx::BlitOp::BlitOp__sub_object() &rArr; touchgfx::colortype::colortype__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp__sub_object()
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::DMA_Interface__sub_object(touchgfx::DMA_Queue&)
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.1
</UL>

<P><STRONG><a name="[583]"></a>STM32DMA::STM32DMA__sub_object()</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, stm32dma.o(.text._ZN8STM32DMAC2Ev), UNUSED)

<P><STRONG><a name="[13e]"></a>STM32DMA::~STM32DMA__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8STM32DMAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = STM32DMA::~STM32DMA__deallocating() &rArr; STM32DMA::~STM32DMA() &rArr; touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::~STM32DMA()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[a6]"></a>STM32DMA::~STM32DMA()</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, stm32dma.o(.text._ZN8STM32DMAD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = STM32DMA::~STM32DMA() &rArr; touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__sub_object()
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ(IRQn_Type)
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::~DMA_Interface__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::~STM32DMA__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.text.__cxx_global_var_init.1)
<LI> stm32dma.o(.rodata._ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[584]"></a>STM32DMA::~STM32DMA__sub_object()</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, stm32dma.o(.text._ZN8STM32DMAD2Ev), UNUSED)

<P><STRONG><a name="[149]"></a>touchgfx::ClickEvent::~ClickEvent__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx10ClickEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ClickEvent::~ClickEvent__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
</UL>
<P><STRONG><a name="[14c]"></a>touchgfx::KeySampler::init()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, keysampler.o(.text._ZN8touchgfx10KeySampler4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::KeySampler::init()
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Buttons::init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keysampler.o(.rodata._ZTVN8touchgfx10KeySamplerE)
</UL>
<P><STRONG><a name="[14d]"></a>touchgfx::KeySampler::sample(unsigned char&)</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, keysampler.o(.text._ZN8touchgfx10KeySampler6sampleERh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::KeySampler::sample(unsigned char&) &rArr; touchgfx::Buttons::sample() &rArr; HAL_GPIO_ReadPin
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Buttons::sample()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keysampler.o(.rodata._ZTVN8touchgfx10KeySamplerE)
</UL>
<P><STRONG><a name="[3c9]"></a>touchgfx::KeySampler::KeySampler__sub_object()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN8touchgfx10KeySamplerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::KeySampler::KeySampler__sub_object() &rArr; touchgfx::ButtonController::ButtonController__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonController::ButtonController__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[14b]"></a>touchgfx::KeySampler::~KeySampler__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, keysampler.o(.text._ZN8touchgfx10KeySamplerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::KeySampler::~KeySampler__deallocating() &rArr; touchgfx::KeySampler::~KeySampler__sub_object() &rArr; touchgfx::ButtonController::~ButtonController__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::KeySampler::~KeySampler__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keysampler.o(.rodata._ZTVN8touchgfx10KeySamplerE)
</UL>
<P><STRONG><a name="[a4]"></a>touchgfx::KeySampler::~KeySampler__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, keysampler.o(.text._ZN8touchgfx10KeySamplerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::KeySampler::~KeySampler__sub_object() &rArr; touchgfx::ButtonController::~ButtonController__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonController::~ButtonController__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::KeySampler::~KeySampler__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.text.__cxx_global_var_init)
<LI> keysampler.o(.rodata._ZTVN8touchgfx10KeySamplerE)
</UL>
<P><STRONG><a name="[3cb]"></a>touchgfx::OSWrappers::initialize()</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[2e2]"></a>touchgfx::OSWrappers::signalVSync()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers11signalVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[3cf]"></a>touchgfx::OSWrappers::waitForVSync()</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers12waitForVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>

<P><STRONG><a name="[3d1]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphore()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::unlockFrameBuffer()
</UL>

<P><STRONG><a name="[3d2]"></a>touchgfx::OSWrappers::takeFrameBufferSemaphore()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[3d4]"></a>touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)
</UL>

<P><STRONG><a name="[3d5]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, oswrappers.o(.text._ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::executeCompleted()
</UL>

<P><STRONG><a name="[154]"></a>touchgfx::Transition::invalidate()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = touchgfx::Transition::invalidate() &rArr; touchgfx::Application::invalidate() &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidate()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[151]"></a>touchgfx::Transition::handleTickEvent()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Transition::handleTickEvent()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[155]"></a>touchgfx::Transition::setScreenContainer(touchgfx::Container&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Transition::setScreenContainer(touchgfx::Container&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[153]"></a>touchgfx::Transition::init()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Transition::init()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::init()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[152]"></a>touchgfx::Transition::tearDown()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition8tearDownEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Transition::tearDown()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[3e3]"></a>touchgfx::Transition::Transition__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10TransitionC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Transition::Transition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition__sub_object(unsigned char)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition__sub_object()
</UL>

<P><STRONG><a name="[150]"></a>touchgfx::Transition::~Transition__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10TransitionD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Transition::~Transition__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::~Transition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[14f]"></a>touchgfx::Transition::~Transition__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10TransitionD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Transition::~Transition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition__sub_object()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::~Transition__deallocating()
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::~NoTransition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[3d6]"></a>touchgfx::Application::invalidate()</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::invalidate() &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::invalidate()
</UL>

<P><STRONG><a name="[388]"></a>touchgfx::Application::getInstance()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::application()
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::startAnimation(bool, bool, bool)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::invalidate()
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::application()
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::handleTickEvent()
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::pauseAnimation()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::stopAnimation()
</UL>

<P><STRONG><a name="[3d8]"></a>touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*)</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, application.o(.text._ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::compact()
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::startAnimation(bool, bool, bool)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::pauseAnimation()
</UL>

<P><STRONG><a name="[3dd]"></a>touchgfx::Application::TimerWidgets::clear()</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application12TimerWidgets5clearEv))
<BR><BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::clearAllTimerWidgets()
</UL>

<P><STRONG><a name="[3f7]"></a>touchgfx::Application::TimerWidgets::remove(touchgfx::Drawable const*)</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::TimerWidgets::remove(touchgfx::Drawable const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::handleTickEvent()
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::pauseAnimation()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::stopAnimation()
</UL>

<P><STRONG><a name="[3d9]"></a>touchgfx::Application::TimerWidgets::compact()</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application12TimerWidgets7compactEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::TimerWidgets::compact() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[112]"></a>touchgfx::Application::switchScreen(touchgfx::Screen*)</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::switchScreen(touchgfx::Screen*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[115]"></a>touchgfx::Application::requestRedraw(touchgfx::Rect&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[114]"></a>touchgfx::Application::requestRedraw()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application13requestRedrawEv))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[10c]"></a>touchgfx::Application::handleKeyEvent(unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application14handleKeyEventEh))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[3d7]"></a>touchgfx::Application::invalidateArea(touchgfx::Rect)</STRONG> (Thumb, 3490 bytes, Stack size 136 bytes, application.o(.text._ZN8touchgfx11Application14invalidateAreaENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidate()
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[113]"></a>touchgfx::Application::appSwitchScreen(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application15appSwitchScreenEh))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[117]"></a>touchgfx::Application::drawCachedAreas()</STRONG> (Thumb, 2212 bytes, Stack size 136 bytes, application.o(.text._ZN8touchgfx11Application15drawCachedAreasEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::drawCachedAreas() &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[10a]"></a>touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[134]"></a>touchgfx::Application::handleTickEvent()</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::handleTickEvent() &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::compact()
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[116]"></a>touchgfx::Application::clearCachedAreas()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application16clearCachedAreasEv))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[109]"></a>touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[10b]"></a>touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[159]"></a>touchgfx::Application::changeToStartScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application19changeToStartScreenEv))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[3dc]"></a>touchgfx::Application::clearAllTimerWidgets()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx11Application20clearAllTimerWidgetsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::clearAllTimerWidgets()
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>

<P><STRONG><a name="[156]"></a>touchgfx::Application::handlePendingScreenTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application29handlePendingScreenTransitionEv))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[119]"></a>touchgfx::Application::draw(touchgfx::Rect&)</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Application::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[118]"></a>touchgfx::Application::draw()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application4drawEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::draw()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[3de]"></a>touchgfx::Application::Application()</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11ApplicationC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw()
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Lock
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[3ff]"></a>touchgfx::Application::Application__sub_object()</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11ApplicationC2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::MVPApplication__sub_object()
</UL>

<P><STRONG><a name="[158]"></a>touchgfx::Application::~Application__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11ApplicationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::~Application__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[3e1]"></a>touchgfx::Application::~Application__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx11ApplicationD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::UIEventListener::~UIEventListener__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::~MVPApplication__sub_object()
</UL>

<P><STRONG><a name="[52c]"></a>touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fontmanager.o(.text._ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[3b3]"></a>touchgfx::FontProvider::~FontProvider__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx12FontProviderD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::FontProvider::~FontProvider__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::~ApplicationFontProvider__sub_object()
</UL>

<P><STRONG><a name="[15a]"></a>touchgfx::GestureEvent::~GestureEvent__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx12GestureEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::GestureEvent::~GestureEvent__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
</UL>
<P><STRONG><a name="[15e]"></a>touchgfx::NoTransition::handleTickEvent()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx12NoTransition15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::NoTransition::handleTickEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[3e2]"></a>touchgfx::NoTransition::NoTransition__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::NoTransition::NoTransition__sub_object() &rArr; touchgfx::Transition::Transition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::Transition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[15d]"></a>touchgfx::NoTransition::~NoTransition__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::NoTransition::~NoTransition__deallocating() &rArr; touchgfx::NoTransition::~NoTransition__sub_object() &rArr; touchgfx::Transition::~Transition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::~NoTransition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[15c]"></a>touchgfx::NoTransition::~NoTransition__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::NoTransition::~NoTransition__sub_object() &rArr; touchgfx::Transition::~Transition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::~Transition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::~NoTransition__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[3e4]"></a>touchgfx::TextProvider::initialize(unsigned short const*, unsigned short const*, touchgfx::FontContextualFormsTable const*, ...)</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initialize(unsigned short const*, unsigned short const*, touchgfx::FontContextualFormsTable const*, ...) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[3e6]"></a>touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const
</UL>

<P><STRONG><a name="[3e7]"></a>touchgfx::TextProvider::endOfString()</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider11endOfStringEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::endOfString() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[3e8]"></a>touchgfx::TextProvider::getNextChar()</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider11getNextCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, touchgfx::Font const*, short)
</UL>

<P><STRONG><a name="[3ea]"></a>touchgfx::TextProvider::gsubRuleMatch(unsigned short const*, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 84 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::gsubRuleMatch(unsigned short const*, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[3f1]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt0(unsigned short)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, texts.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE10replaceAt0Et))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt0(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[3eb]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt1(unsigned short)</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, texts.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE10replaceAt1Et))
<BR><BR>[Stack]<UL><LI>Max Depth = 84 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt1(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[3ec]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar(unsigned short)</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, texts.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 84 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[3ed]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, texts.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[3ee]"></a>touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*)</STRONG> (Thumb, 520 bytes, Stack size 32 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>

<P><STRONG><a name="[3e9]"></a>touchgfx::TextProvider::fillInputBuffer()</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15fillInputBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)
</UL>

<P><STRONG><a name="[3ef]"></a>touchgfx::TextProvider::getNextLigature(unsigned char)</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, texts.o(.text._ZN8touchgfx12TextProvider15getNextLigatureEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 164 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt0(unsigned short)
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt1(unsigned short)
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar(unsigned short)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar()
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>

<P><STRONG><a name="[3f2]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*, unsigned short)
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, touchgfx::Font const&, int, unsigned char)
</UL>

<P><STRONG><a name="[3f4]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&)</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*, unsigned short)
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>

<P><STRONG><a name="[3f0]"></a>touchgfx::TextProvider::substituteGlyphs()</STRONG> (Thumb, 310 bytes, Stack size 56 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider16substituteGlyphsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 140 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(unsigned short const*, unsigned short, unsigned short, unsigned short)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[3f3]"></a>touchgfx::TextProvider::adjustArabicGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*, unsigned short)</STRONG> (Thumb, 1968 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextProvider::adjustArabicGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>

<P><STRONG><a name="[3e5]"></a>touchgfx::TextProvider::initializeInternal()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, texts.o(.text._ZN8touchgfx12TextProvider18initializeInternalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, unsigned short const*, touchgfx::FontContextualFormsTable const*, ...)
</UL>

<P><STRONG><a name="[3f5]"></a>touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt))
<BR><BR>[Stack]<UL><LI>Max Depth = 84 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[3f6]"></a>touchgfx::TextProvider::TextProvider()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProviderC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[585]"></a>touchgfx::TextProvider::TextProvider__sub_object()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProviderC2Ev), UNUSED)

<P><STRONG><a name="[3a1]"></a>touchgfx::AnimatedImage::setBitmaps(unsigned short, unsigned short)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, animatedimage.o(.text._ZN8touchgfx13AnimatedImage10setBitmapsEtt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
</UL>

<P><STRONG><a name="[17b]"></a>touchgfx::AnimatedImage::setBitmapEnd(touchgfx::Bitmap const&)</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx13AnimatedImage12setBitmapEndERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::AnimatedImage::setBitmapEnd(touchgfx::Bitmap const&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
</UL>
<P><STRONG><a name="[179]"></a>touchgfx::AnimatedImage::stopAnimation()</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, animatedimage.o(.text._ZN8touchgfx13AnimatedImage13stopAnimationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = touchgfx::AnimatedImage::stopAnimation() &rArr; touchgfx::Image::setBitmap(touchgfx::Bitmap const&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::remove(touchgfx::Drawable const*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
</UL>
<P><STRONG><a name="[17a]"></a>touchgfx::AnimatedImage::pauseAnimation()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, animatedimage.o(.text._ZN8touchgfx13AnimatedImage14pauseAnimationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = touchgfx::AnimatedImage::pauseAnimation() &rArr; touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::remove(touchgfx::Drawable const*)
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
</UL>
<P><STRONG><a name="[178]"></a>touchgfx::AnimatedImage::startAnimation(bool, bool, bool)</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, animatedimage.o(.text._ZN8touchgfx13AnimatedImage14startAnimationEbbb))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = touchgfx::AnimatedImage::startAnimation(bool, bool, bool) &rArr; touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*) &rArr; touchgfx::Application::TimerWidgets::compact() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::add(touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
</UL>
<P><STRONG><a name="[173]"></a>touchgfx::AnimatedImage::handleTickEvent()</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, animatedimage.o(.text._ZN8touchgfx13AnimatedImage15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = touchgfx::AnimatedImage::handleTickEvent() &rArr; touchgfx::Image::setBitmap(touchgfx::Bitmap const&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::remove(touchgfx::Drawable const*)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
</UL>
<P><STRONG><a name="[3a2]"></a>touchgfx::AnimatedImage::setUpdateTicksInterval(unsigned char)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
</UL>

<P><STRONG><a name="[177]"></a>touchgfx::AnimatedImage::setBitmap(touchgfx::Bitmap const&)</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = touchgfx::AnimatedImage::setBitmap(touchgfx::Bitmap const&) &rArr; touchgfx::Image::setBitmap(touchgfx::Bitmap const&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
</UL>
<P><STRONG><a name="[3a0]"></a>touchgfx::AnimatedImage::AnimatedImage__sub_object(unsigned char const&)</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, mainscreenviewbase.o(.text._ZN8touchgfx13AnimatedImageC2ERKh), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image__sub_object(touchgfx::Bitmap const&)
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap__sub_object(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
</UL>

<P><STRONG><a name="[160]"></a>touchgfx::AnimatedImage::~AnimatedImage__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx13AnimatedImageD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AnimatedImage::~AnimatedImage__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
</UL>
<P><STRONG><a name="[3a3]"></a>touchgfx::AnimatedImage::~AnimatedImage__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, mainscreenviewbase.o(.text._ZN8touchgfx13AnimatedImageD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::AnimatedImage::~AnimatedImage__sub_object() &rArr; touchgfx::Image::~Image__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::~Image__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::~MainScreenViewBase()
</UL>

<P><STRONG><a name="[138]"></a>touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&) &rArr; touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[17e]"></a>touchgfx::DMA_Interface::getDMAType()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface10getDMATypeEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[17d]"></a>touchgfx::DMA_Interface::initialize()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface10initializeEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[144]"></a>touchgfx::DMA_Interface::enableAlpha(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface11enableAlphaEh))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[145]"></a>touchgfx::DMA_Interface::disableAlpha()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface12disableAlphaEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[141]"></a>touchgfx::DMA_Interface::seedExecution()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface13seedExecutionEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[41e]"></a>touchgfx::DMA_Interface::isDmaQueueEmpty()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::isDmaQueueEmpty()
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[140]"></a>touchgfx::DMA_Interface::executeCompleted()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface16executeCompletedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touchgfx::DMA_Interface::executeCompleted() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[147]"></a>touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touchgfx::DMA_Interface::waitForFrameBufferSemaphore() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[146]"></a>touchgfx::DMA_Interface::enableCopyWithTransparentPixels(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface31enableCopyWithTransparentPixelsEh))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[139]"></a>touchgfx::DMA_Interface::flush()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface5flushEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[13b]"></a>touchgfx::DMA_Interface::start()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::start()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[13f]"></a>touchgfx::DMA_Interface::execute()</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = touchgfx::DMA_Interface::execute() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV8STM32DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[3c2]"></a>touchgfx::DMA_Interface::DMA_Interface__sub_object(touchgfx::DMA_Queue&)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32dma.o(.text._ZN8touchgfx13DMA_InterfaceC2ERNS_9DMA_QueueE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::DMA_Interface__sub_object(touchgfx::DMA_Queue&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
</UL>

<P><STRONG><a name="[180]"></a>touchgfx::DMA_Interface::~DMA_Interface__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_InterfaceD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[17f]"></a>touchgfx::DMA_Interface::~DMA_Interface__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_InterfaceD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::~STM32DMA()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[35e]"></a>touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)</STRONG> (Thumb, 224 bytes, Stack size 104 bytes, generatedfont.o(.text._ZN8touchgfx13GeneratedFontC2EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_20_4bpp()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
</UL>

<P><STRONG><a name="[486]"></a>touchgfx::GeneratedFont::GeneratedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)</STRONG> (Thumb, 224 bytes, Stack size 104 bytes, generatedfont.o(.text._ZN8touchgfx13GeneratedFontC2EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::GeneratedFont::GeneratedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FusedFont::FusedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
</UL>

<P><STRONG><a name="[181]"></a>touchgfx::GeneratedFont::~GeneratedFont__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, generatedfont.o(.text._ZN8touchgfx13GeneratedFontD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::GeneratedFont::~GeneratedFont__deallocating() &rArr; touchgfx::GeneratedFont::~GeneratedFont__sub_object() &rArr; touchgfx::ConstFont::~ConstFont__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::~GeneratedFont__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[9d]"></a>touchgfx::GeneratedFont::~GeneratedFont__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, cachedfont.o(.text._ZN8touchgfx13GeneratedFontD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::GeneratedFont::~GeneratedFont__sub_object() &rArr; touchgfx::ConstFont::~ConstFont__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::~ConstFont__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FusedFont::~FusedFont__sub_object()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::~GeneratedFont__deallocating()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> table_verdana_20_4bpp.o(.text._Z23getFont_verdana_20_4bppv)
<LI> table_verdanab_20_4bpp.o(.text._Z24getFont_verdanab_20_4bppv)
</UL>
<P><STRONG><a name="[10e]"></a>touchgfx::MVPApplication::handlePendingScreenTransition()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::MVPApplication::handlePendingScreenTransition() &rArr; touchgfx::MVPApplication::evaluatePendingScreenTransition()
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::evaluatePendingScreenTransition()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[3fe]"></a>touchgfx::MVPApplication::evaluatePendingScreenTransition()</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, frontendapplication.o(.text._ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::MVPApplication::evaluatePendingScreenTransition()
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::handlePendingScreenTransition()
</UL>

<P><STRONG><a name="[3ba]"></a>touchgfx::MVPApplication::MVPApplication__sub_object()</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14MVPApplicationC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[197]"></a>touchgfx::MVPApplication::~MVPApplication__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14MVPApplicationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::MVPApplication::~MVPApplication__deallocating() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::~MVPApplication__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[196]"></a>touchgfx::MVPApplication::~MVPApplication__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx14MVPApplicationD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__sub_object()
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::~MVPApplication__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[19e]"></a>touchgfx::SnapshotWidget::makeSnapshot(unsigned short)</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, snapshotwidget.o(.text._ZN8touchgfx14SnapshotWidget12makeSnapshotEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::SnapshotWidget::makeSnapshot(unsigned short) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[19d]"></a>touchgfx::SnapshotWidget::makeSnapshot()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, snapshotwidget.o(.text._ZN8touchgfx14SnapshotWidget12makeSnapshotEv))
<BR><BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition__sub_object(unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[401]"></a>touchgfx::SnapshotWidget::SnapshotWidget()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, snapshotwidget.o(.text._ZN8touchgfx14SnapshotWidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = touchgfx::SnapshotWidget::SnapshotWidget()
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition__sub_object(unsigned char)
</UL>

<P><STRONG><a name="[586]"></a>touchgfx::SnapshotWidget::SnapshotWidget__sub_object()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, snapshotwidget.o(.text._ZN8touchgfx14SnapshotWidgetC2Ev), UNUSED)

<P><STRONG><a name="[198]"></a>touchgfx::SnapshotWidget::~SnapshotWidget__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, snapshotwidget.o(.text._ZN8touchgfx14SnapshotWidgetD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::SnapshotWidget::~SnapshotWidget__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[402]"></a>touchgfx::SnapshotWidget::~SnapshotWidget__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14SnapshotWidgetD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::SnapshotWidget::~SnapshotWidget__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition__sub_object()
</UL>

<P><STRONG><a name="[3b7]"></a>FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)</STRONG> (Thumb, 298 bytes, Stack size 64 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14makeTransitionI14FontScreenView19FontScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; FontScreenView::FontScreenView() &rArr; FontScreenViewBase::FontScreenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::FontScreenView()
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter::FontScreenPresenter(FontScreenView&)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;FontScreenPresenter&rang;::bind(FontScreenPresenter&)
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter& touchgfx::AbstractPartition::at&lang;FontScreenPresenter&rang;(unsigned short)
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView& touchgfx::AbstractPartition::at&lang;FontScreenView&rang;(unsigned short)
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition__sub_object(unsigned char)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;&rang;(unsigned short)
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoFontScreenScreenSlideTransitionEastImpl()
</UL>

<P><STRONG><a name="[3b6]"></a>MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)</STRONG> (Thumb, 296 bytes, Stack size 64 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; MainScreenView::MainScreenView() &rArr; MainScreenViewBase::MainScreenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::MainScreenView()
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter::MainScreenPresenter(MainScreenView&)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;MainScreenPresenter&rang;::bind(MainScreenPresenter&)
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter& touchgfx::AbstractPartition::at&lang;MainScreenPresenter&rang;(unsigned short)
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView& touchgfx::AbstractPartition::at&lang;MainScreenView&rang;(unsigned short)
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition__sub_object()
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[3b8]"></a>MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)</STRONG> (Thumb, 298 bytes, Stack size 64 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14makeTransitionI14MainScreenView19MainScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; MainScreenView::MainScreenView() &rArr; MainScreenViewBase::MainScreenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::MainScreenView()
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter::MainScreenPresenter(MainScreenView&)
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition__sub_object(unsigned char)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;&rang;(unsigned short)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;MainScreenPresenter&rang;::bind(MainScreenPresenter&)
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter& touchgfx::AbstractPartition::at&lang;MainScreenPresenter&rang;(unsigned short)
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView& touchgfx::AbstractPartition::at&lang;MainScreenView&rang;(unsigned short)
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenScreenSlideTransitionEastImpl()
</UL>

<P><STRONG><a name="[410]"></a>touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, easingequations.o(.text._ZN8touchgfx15EasingEquations12cubicEaseOutEtsst))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[446]"></a>touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15GenericCallbackIvvvEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)())
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object()
</UL>

<P><STRONG><a name="[1a0]"></a>touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15GenericCallbackIvvvED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIvvvEE)
</UL>
<P><STRONG><a name="[19f]"></a>touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx15GenericCallbackIvvvED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIvvvEE)
</UL>
<P><STRONG><a name="[447]"></a>touchgfx::GenericCallback&lang;void, void, void&rang;::operator=(touchgfx::GenericCallback&lang;void, void, void&rang; const&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15GenericCallbackIvvvEaSERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::GenericCallback&lang;void, void, void&rang;::operator=(touchgfx::GenericCallback&lang;void, void, void&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator=(touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&&)
</UL>

<P><STRONG><a name="[1a3]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent() &rArr; touchgfx::Drawable::getNextSibling()
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getNextSibling()
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getX() const
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::handleTickEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[1a5]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::init()</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::init() &rArr; touchgfx::Drawable::getNextSibling()
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getNextSibling()
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getX() const
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[1a4]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::tearDown()</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::tearDown()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[405]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition__sub_object(unsigned char)</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC2Eh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition__sub_object(unsigned char) &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::makeSnapshot()
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::SnapshotWidget()
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::Transition__sub_object()
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[1a2]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition__deallocating() &rArr; touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition__sub_object() &rArr; touchgfx::SnapshotWidget::~SnapshotWidget__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[1a1]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition__sub_object() &rArr; touchgfx::SnapshotWidget::~SnapshotWidget__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::~SnapshotWidget__sub_object()
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::~Transition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[3ab]"></a>touchgfx::TouchController::TouchController__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx15TouchControllerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::TouchController::TouchController__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::STM32TouchController__sub_object()
</UL>

<P><STRONG><a name="[1a7]"></a>touchgfx::TouchController::~TouchController__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx15TouchControllerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::TouchController::~TouchController__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx15TouchControllerE)
</UL>
<P><STRONG><a name="[1a6]"></a>touchgfx::TouchController::~TouchController__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, stm32touchcontroller.o(.text._ZN8touchgfx15TouchControllerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::TouchController::~TouchController__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::~STM32TouchController__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx15TouchControllerE)
</UL>
<P><STRONG><a name="[157]"></a>touchgfx::UIEventListener::~UIEventListener__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx15UIEventListenerD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[14e]"></a>touchgfx::ButtonController::reset()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, keysampler.o(.text._ZN8touchgfx16ButtonController5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::ButtonController::reset()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> keysampler.o(.rodata._ZTVN8touchgfx10KeySamplerE)
<LI> touchgfxhal.o(.rodata._ZTVN8touchgfx16ButtonControllerE)
</UL>
<P><STRONG><a name="[3ca]"></a>touchgfx::ButtonController::ButtonController__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, touchgfxhal.o(.text._ZN8touchgfx16ButtonControllerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::ButtonController::ButtonController__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::KeySampler::KeySampler__sub_object()
</UL>

<P><STRONG><a name="[1a9]"></a>touchgfx::ButtonController::~ButtonController__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, touchgfxhal.o(.text._ZN8touchgfx16ButtonControllerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::ButtonController::~ButtonController__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTVN8touchgfx16ButtonControllerE)
</UL>
<P><STRONG><a name="[1a8]"></a>touchgfx::ButtonController::~ButtonController__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, keysampler.o(.text._ZN8touchgfx16ButtonControllerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::ButtonController::~ButtonController__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::KeySampler::~KeySampler__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTVN8touchgfx16ButtonControllerE)
</UL>
<P><STRONG><a name="[413]"></a>touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[414]"></a>touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration6muldivEiiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>

<P><STRONG><a name="[415]"></a>touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)</STRONG> (Thumb, 274 bytes, Stack size 48 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration7muldivuEjjjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[1ad]"></a>touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[406]"></a>FontScreenView& touchgfx::AbstractPartition::at&lang;FontScreenView&rang;(unsigned short)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx17AbstractPartition2atI14FontScreenViewEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FontScreenView& touchgfx::AbstractPartition::at&lang;FontScreenView&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[40d]"></a>MainScreenView& touchgfx::AbstractPartition::at&lang;MainScreenView&rang;(unsigned short)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx17AbstractPartition2atI14MainScreenViewEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MainScreenView& touchgfx::AbstractPartition::at&lang;MainScreenView&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[407]"></a>FontScreenPresenter& touchgfx::AbstractPartition::at&lang;FontScreenPresenter&rang;(unsigned short)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx17AbstractPartition2atI19FontScreenPresenterEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FontScreenPresenter& touchgfx::AbstractPartition::at&lang;FontScreenPresenter&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[40e]"></a>MainScreenPresenter& touchgfx::AbstractPartition::at&lang;MainScreenPresenter&rang;(unsigned short)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx17AbstractPartition2atI19MainScreenPresenterEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MainScreenPresenter& touchgfx::AbstractPartition::at&lang;MainScreenPresenter&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[40c]"></a>touchgfx::NoTransition& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::NoTransition& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[404]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;&rang;(unsigned short)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[1b0]"></a>touchgfx::AbstractPartition::clear()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[1af]"></a>touchgfx::AbstractPartition::indexOf(void const*)</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPartition::indexOf(void const*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[1ac]"></a>touchgfx::AbstractPartition::allocate(unsigned short)</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPartition::allocate(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[487]"></a>touchgfx::AbstractPartition::AbstractPartition__sub_object()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
</UL>

<P><STRONG><a name="[1ab]"></a>touchgfx::AbstractPartition::~AbstractPartition__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[587]"></a>touchgfx::AbstractPartition::~AbstractPartition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev), UNUSED)

<P><STRONG><a name="[1aa]"></a>touchgfx::AbstractPartition::~AbstractPartition__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[1b3]"></a>touchgfx::LockFreeDMA_Queue::pushCopyOf(touchgfx::BlitOp const&)</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 84 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pushCopyOf(touchgfx::BlitOp const&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[1b6]"></a>touchgfx::LockFreeDMA_Queue::pop()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue3popEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pop() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[1b7]"></a>touchgfx::LockFreeDMA_Queue::first()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue5firstEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[1b2]"></a>touchgfx::LockFreeDMA_Queue::isFull()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue6isFullEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[1b1]"></a>touchgfx::LockFreeDMA_Queue::isEmpty()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[3c3]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueC2EPNS_6BlitOpEm))
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
</UL>

<P><STRONG><a name="[588]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue__sub_object(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueC2EPNS_6BlitOpEm), UNUSED)

<P><STRONG><a name="[1b5]"></a>touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[3c6]"></a>touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Queue::~DMA_Queue__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::~STM32DMA()
</UL>

<P><STRONG><a name="[1ba]"></a>touchgfx::MCUInstrumentation::setMCUActive(bool)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx18MCUInstrumentation12setMCUActiveEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::MCUInstrumentation::setMCUActive(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx18MCUInstrumentationE)
</UL>
<P><STRONG><a name="[1bb]"></a>touchgfx::MCUInstrumentation::getCCConsumed()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, cortexmmcuinstrumentation.o(.text._ZN8touchgfx18MCUInstrumentation13getCCConsumedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::MCUInstrumentation::getCCConsumed()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx18MCUInstrumentationE)
</UL>
<P><STRONG><a name="[1bc]"></a>touchgfx::MCUInstrumentation::setCCConsumed(unsigned int)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cortexmmcuinstrumentation.o(.text._ZN8touchgfx18MCUInstrumentation13setCCConsumedEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::MCUInstrumentation::setCCConsumed(unsigned int)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx18MCUInstrumentationE)
</UL>
<P><STRONG><a name="[419]"></a>touchgfx::MCUInstrumentation::MCUInstrumentation__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx18MCUInstrumentationC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::MCUInstrumentation::MCUInstrumentation__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CortexMMCUInstrumentation::CortexMMCUInstrumentation__sub_object()
</UL>

<P><STRONG><a name="[1b9]"></a>touchgfx::MCUInstrumentation::~MCUInstrumentation__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx18MCUInstrumentationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::MCUInstrumentation::~MCUInstrumentation__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx18MCUInstrumentationE)
</UL>
<P><STRONG><a name="[1b8]"></a>touchgfx::MCUInstrumentation::~MCUInstrumentation__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, cortexmmcuinstrumentation.o(.text._ZN8touchgfx18MCUInstrumentationD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::MCUInstrumentation::~MCUInstrumentation__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx18MCUInstrumentationE)
</UL>
<P><STRONG><a name="[3db]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[462]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[482]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_))
<BR><BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[3da]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
</UL>

<P><STRONG><a name="[427]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[39a]"></a>touchgfx::TextAreaWithOneWildcard::setWildcard(unsigned short const*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard1(unsigned short const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[416]"></a>touchgfx::TextAreaWithOneWildcard::setWildcard1(unsigned short const*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fontscreenviewbase.o(.text._ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard(unsigned short const*)
</UL>

<P><STRONG><a name="[38e]"></a>touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx23TextAreaWithOneWildcardC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[1be]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx23TextAreaWithOneWildcardD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__deallocating() &rArr; touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object() &rArr; touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[1bd]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx23TextAreaWithOneWildcardD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object() &rArr; touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__deallocating()
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::~FontScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[417]"></a>touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx24TextAreaWithWildcardBaseC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()
</UL>

<P><STRONG><a name="[1cf]"></a>touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, textareawithwildcard.o(.text._ZN8touchgfx24TextAreaWithWildcardBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[418]"></a>touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx24TextAreaWithWildcardBaseD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()
</UL>

<P><STRONG><a name="[1d5]"></a>touchgfx::CortexMMCUInstrumentation::getCPUCycles()</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, cortexmmcuinstrumentation.o(.text._ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::CortexMMCUInstrumentation::getCPUCycles()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
</UL>
<P><STRONG><a name="[1d4]"></a>touchgfx::CortexMMCUInstrumentation::getElapsedUS(unsigned int, unsigned int, unsigned int)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, cortexmmcuinstrumentation.o(.text._ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::CortexMMCUInstrumentation::getElapsedUS(unsigned int, unsigned int, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
</UL>
<P><STRONG><a name="[1d6]"></a>touchgfx::CortexMMCUInstrumentation::setMCUActive(bool)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, cortexmmcuinstrumentation.o(.text._ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::CortexMMCUInstrumentation::setMCUActive(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
</UL>
<P><STRONG><a name="[1d1]"></a>touchgfx::CortexMMCUInstrumentation::init()</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, cortexmmcuinstrumentation.o(.text._ZN8touchgfx25CortexMMCUInstrumentation4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::CortexMMCUInstrumentation::init()
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
</UL>
<P><STRONG><a name="[36e]"></a>touchgfx::CortexMMCUInstrumentation::CortexMMCUInstrumentation__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx25CortexMMCUInstrumentationC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::CortexMMCUInstrumentation::CortexMMCUInstrumentation__sub_object() &rArr; touchgfx::MCUInstrumentation::MCUInstrumentation__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MCUInstrumentation::MCUInstrumentation__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[1d3]"></a>touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, cortexmmcuinstrumentation.o(.text._ZN8touchgfx25CortexMMCUInstrumentationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation__deallocating() &rArr; touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation__sub_object() &rArr; touchgfx::MCUInstrumentation::~MCUInstrumentation__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
</UL>
<P><STRONG><a name="[1d2]"></a>touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, cortexmmcuinstrumentation.o(.text._ZN8touchgfx25CortexMMCUInstrumentationD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation__sub_object() &rArr; touchgfx::MCUInstrumentation::~MCUInstrumentation__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MCUInstrumentation::~MCUInstrumentation__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::~TouchGFXHAL__sub_object()
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cortexmmcuinstrumentation.o(.rodata._ZTVN8touchgfx25CortexMMCUInstrumentationE)
</UL>
<P><STRONG><a name="[391]"></a>touchgfx::Box::setColor(touchgfx::colortype)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fontscreenviewbase.o(.text._ZN8touchgfx3Box8setColorENS_9colortypeE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[38c]"></a>touchgfx::Box::Box__sub_object()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx3BoxC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype__sub_object(unsigned int)
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[1d7]"></a>touchgfx::Box::~Box__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx3BoxD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Box::~Box__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[39b]"></a>touchgfx::Box::~Box__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx3BoxD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Box::~Box__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::~MainScreenViewBase()
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::~FontScreenViewBase()
</UL>

<P><STRONG><a name="[e0]"></a>touchgfx::HAL::FlushCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL10FlushCacheEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[44a]"></a>touchgfx::HAL::beginFrame()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL10beginFrameEv))
<BR><BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::beginFrame()
</UL>

<P><STRONG><a name="[d5]"></a>touchgfx::HAL::getDMAType()</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx3HAL10getDMATypeEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[41c]"></a>touchgfx::HAL::initialize()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::initialize(int)
</UL>

<P><STRONG><a name="[bb]"></a>touchgfx::HAL::getBlitCaps()</STRONG> (Thumb, 18 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx3HAL11getBlitCapsEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[2df]"></a>touchgfx::HAL::getInstance()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IdleTaskHook
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*)
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::handleTickEvent()
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[bf]"></a>touchgfx::HAL::blitCopyWord(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, hal.o(.text._ZN8touchgfx3HAL12blitCopyWordEPKttttttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyWord(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[c0]"></a>touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 200 bytes, Stack size 72 bytes, hal.o(.text._ZN8touchgfx3HAL12blitFillWordEtttttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitFillWord(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[323]"></a>touchgfx::HAL::setMCUActive(bool)</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL12setMCUActiveEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::HAL::setMCUActive(bool) &rArr; touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID) &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IdleTaskHook
</UL>

<P><STRONG><a name="[c2]"></a>touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</STRONG> (Thumb, 350 bytes, Stack size 72 bytes, hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[df]"></a>touchgfx::HAL::InvalidateCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL15InvalidateCacheEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[c9]"></a>touchgfx::HAL::backPorchExited()</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx3HAL15backPorchExitedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::backPorchExited() &rArr; touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID) &rArr; HAL_GPIO_TogglePin
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[41d]"></a>touchgfx::HAL::lockFrameBuffer()</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL15lockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::HAL::lockFrameBuffer() &rArr; touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::isDmaQueueEmpty()
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::lockFrameBuffer()
</UL>

<P><STRONG><a name="[c1]"></a>touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 118 bytes, Stack size 80 bytes, hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[1f3]"></a>touchgfx::HAL::flushFrameBuffer(touchgfx::Rect const&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[1f2]"></a>touchgfx::HAL::flushFrameBuffer()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[2e3]"></a>touchgfx::HAL::swapFrameBuffers()</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL16swapFrameBuffersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID) &rArr; HAL_GPIO_TogglePin
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::backPorchExited()
</UL>

<P><STRONG><a name="[b5]"></a>touchgfx::HAL::allowDMATransfers()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[2e5]"></a>touchgfx::HAL::frontPorchEntered()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text._ZN8touchgfx3HAL17frontPorchEnteredEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::frontPorchEntered()
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[d4]"></a>touchgfx::HAL::getTFTCurrentLine()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[420]"></a>touchgfx::HAL::unlockFrameBuffer()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL17unlockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::HAL::unlockFrameBuffer() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::unlockFrameBuffer()
</UL>

<P><STRONG><a name="[380]"></a>touchgfx::HAL::getLCDRefreshCount()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, mainscreenview.o(.text._ZN8touchgfx3HAL18getLCDRefreshCountEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::HAL::getLCDRefreshCount()
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::handleTickEvent()
</UL>

<P><STRONG><a name="[b0]"></a>touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short)</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL18setFrameBufferSizeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::setFrameBufferSize(unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[3fb]"></a>touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::bindExecBuffer()
</UL>

<P><STRONG><a name="[363]"></a>touchgfx::HAL::signalDMAInterrupt()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8touchgfx3HAL18signalDMAInterruptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::signalDMAInterrupt()
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*)
</UL>

<P><STRONG><a name="[365]"></a>touchgfx::HAL::lockDMAToFrontPorch(bool)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL19lockDMAToFrontPorchEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::lockDMAToFrontPorch(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[d0]"></a>touchgfx::HAL::setAnimationStorage(void*)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL19setAnimationStorageEPv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[364]"></a>touchgfx::HAL::setButtonController(touchgfx::ButtonController*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL19setButtonControllerEPNS_16ButtonControllerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::setButtonController(touchgfx::ButtonController*)
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[c7]"></a>touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[c8]"></a>touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)</STRONG> (Thumb, 256 bytes, Stack size 72 bytes, hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[c6]"></a>touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[af]"></a>touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[367]"></a>touchgfx::HAL::setMCUInstrumentation(touchgfx::MCUInstrumentation*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL21setMCUInstrumentationEPNS_18MCUInstrumentationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::setMCUInstrumentation(touchgfx::MCUInstrumentation*)
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[368]"></a>touchgfx::HAL::enableMCULoadCalculation(bool)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL24enableMCULoadCalculationEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::enableMCULoadCalculation(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[c4]"></a>touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect)</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, hal.o(.text._ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::copyFromTFTToClientBuffer(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[d1]"></a>touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[d6]"></a>touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[d7]"></a>touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)</STRONG> (Thumb, 726 bytes, Stack size 96 bytes, hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::dynamicBitmapGetAddress(unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[12e]"></a>touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</STRONG> (Thumb, 108 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::setFrameBufferStartAddresses(void*, void*, void*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[de]"></a>touchgfx::HAL::performDisplayOrientationChange()</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[d8]"></a>touchgfx::HAL::tick()</STRONG> (Thumb, 404 bytes, Stack size 32 bytes, hal.o(.text._ZN8touchgfx3HAL4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::HAL::tick() &rArr; touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID) &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::tick()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[dc]"></a>touchgfx::HAL::touch(int, int)</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, hal.o(.text._ZN8touchgfx3HAL5touchEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::HAL::touch(int, int) &rArr; touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[2e1]"></a>touchgfx::HAL::vSync()</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, touchgfxgeneratedhal.o(.text._ZN8touchgfx3HAL5vSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::HAL::vSync()
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[dd]"></a>touchgfx::HAL::noTouch()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL7noTouchEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::HAL::noTouch() &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[bc]"></a>touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 328 bytes, Stack size 72 bytes, hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[be]"></a>touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</STRONG> (Thumb, 118 bytes, Stack size 80 bytes, hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[bd]"></a>touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 64 bytes, Stack size 80 bytes, hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[c5]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 102 bytes, Stack size 64 bytes, hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[c3]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 258 bytes, Stack size 72 bytes, hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[452]"></a>touchgfx::HAL::endFrame()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::endFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::endFrame()
</UL>

<P><STRONG><a name="[b6]"></a>touchgfx::HAL::flushDMA()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL8flushDMAEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[1f4]"></a>touchgfx::HAL::blockCopy(void*, void const*, unsigned int)</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[ce]"></a>touchgfx::HAL::sampleKey(unsigned char&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL9sampleKeyERh))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[d3]"></a>touchgfx::HAL::taskDelay(unsigned short)</STRONG> (Thumb, 10 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx3HAL9taskDelayEt))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[b2]"></a>touchgfx::HAL::taskEntry()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL9taskEntryEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[1ef]"></a>touchgfx::HAL::~HAL__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HALD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::~HALGPU2D__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[42a]"></a>touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...)</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, texts.o(.text._ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 836 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...) &rArr; touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(touchgfx::Rect const&) const
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[42c]"></a>touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, touchgfx::Font const*, short)</STRONG> (Thumb, 216 bytes, Stack size 64 bytes, lcd.o(.text._ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, touchgfx::Font const*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const
</UL>

<P><STRONG><a name="[42e]"></a>touchgfx::LCD::stringWidth(touchgfx::TextProvider&, touchgfx::Font const&, int, unsigned char)</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, lcd.o(.text._ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::stringWidth(touchgfx::TextProvider&, touchgfx::Font const&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[42b]"></a>touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)</STRONG> (Thumb, 946 bytes, Stack size 440 bytes, lcd.o(.text._ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 796 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...)
</UL>

<P><STRONG><a name="[232]"></a>touchgfx::LCD::setDefaultColor(touchgfx::colortype)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd.o(.text._ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[42f]"></a>touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool)</STRONG> (Thumb, 814 bytes, Stack size 160 bytes, lcd.o(.text._ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
</UL>

<P><STRONG><a name="[465]"></a>touchgfx::LCD::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 200 bytes, Stack size 120 bytes, lcd.o(.text._ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::LCD::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[42d]"></a>touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()</STRONG> (Thumb, 708 bytes, Stack size 72 bytes, lcd.o(.text._ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, touchgfx::Font const*, short)
</UL>

<P><STRONG><a name="[236]"></a>touchgfx::LCD::drawTextureMapScanLine(touchgfx::DrawingSurface const&, touchgfx::Gradients const&, touchgfx::Edge const*, touchgfx::Edge const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 456 bytes, Stack size 80 bytes, lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD::drawTextureMapScanLine(touchgfx::DrawingSurface const&, touchgfx::Gradients const&, touchgfx::Edge const*, touchgfx::Edge const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[430]"></a>touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 2470 bytes, Stack size 392 bytes, lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short) &rArr; touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gradients::Gradients(touchgfx::Point3D const*)
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[1f7]"></a>touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev))
<BR>[Address Reference Count : 22]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
<LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[231]"></a>touchgfx::LCD::supportDynamicBitmapDrawing(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[433]"></a>touchgfx::LCD::realX(touchgfx::Rect const&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, lcd.o(.text._ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::realX(touchgfx::Rect const&, short, short, touchgfx::TextRotation) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[434]"></a>touchgfx::LCD::realY(touchgfx::Rect const&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, lcd.o(.text._ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::realY(touchgfx::Rect const&, short, short, touchgfx::TextRotation) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[224]"></a>touchgfx::LCD::~LCD__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(.text._ZN8touchgfx3LCDD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::~LCDGPU2D__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[432]"></a>touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int)</STRONG> (Thumb, 572 bytes, Stack size 40 bytes, texturemaptypes.o(.text._ZN8touchgfx4EdgeC2ERKNS_9GradientsEPKNS_7Point3DEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[589]"></a>touchgfx::Edge::Edge__sub_object(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int)</STRONG> (Thumb, 572 bytes, Stack size 40 bytes, texturemaptypes.o(.text._ZN8touchgfx4EdgeC2ERKNS_9GradientsEPKNS_7Point3DEii), UNUSED)

<P><STRONG><a name="[23e]"></a>touchgfx::Font::~Font__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, constfont.o(.text._ZN8touchgfx4FontD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::~ConstFont__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[2e4]"></a>touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, touchgfxgpio.o(.text._ZN8touchgfx4GPIO3setENS0_7GPIO_IDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID) &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setMCUActive(bool)
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[366]"></a>touchgfx::GPIO::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(.text._ZN8touchgfx4GPIO4initEv))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[2e6]"></a>touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, touchgfxgpio.o(.text._ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID) &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setMCUActive(bool)
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[41f]"></a>touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, touchgfxgpio.o(.text._ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID) &rArr; HAL_GPIO_TogglePin
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>

<P><STRONG><a name="[485]"></a>touchgfx::Rect::Rect__sub_object(short, short, short, short)</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, fontscreenviewbase.o(.text._ZN8touchgfx4RectC2Essss), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::BoundingArea::BoundingArea__sub_object()
</UL>

<P><STRONG><a name="[449]"></a>touchgfx::Rect::Rect__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, fontscreenviewbase.o(.text._ZN8touchgfx4RectC2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>

<P><STRONG><a name="[436]"></a>touchgfx::Rect::operator&=(touchgfx::Rect const&)</STRONG> (Thumb, 112 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx4RectaNERKS0_))
<BR><BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(touchgfx::Rect const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
</UL>

<P><STRONG><a name="[40a]"></a>touchgfx::View&lang;FontScreenPresenter&rang;::bind(FontScreenPresenter&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN8touchgfx4ViewI19FontScreenPresenterE4bindERS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::View&lang;FontScreenPresenter&rang;::bind(FontScreenPresenter&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[38b]"></a>touchgfx::View&lang;FontScreenPresenter&rang;::View__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx4ViewI19FontScreenPresenterEC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[1dc]"></a>touchgfx::View&lang;FontScreenPresenter&rang;::~View__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx4ViewI19FontScreenPresenterED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::View&lang;FontScreenPresenter&rang;::~View__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;FontScreenPresenter&rang;::~View__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
</UL>
<P><STRONG><a name="[1db]"></a>touchgfx::View&lang;FontScreenPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx4ViewI19FontScreenPresenterED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::View&lang;FontScreenPresenter&rang;::~View__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::~Screen__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;FontScreenPresenter&rang;::~View__deallocating()
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::~FontScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
</UL>
<P><STRONG><a name="[40f]"></a>touchgfx::View&lang;MainScreenPresenter&rang;::bind(MainScreenPresenter&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN8touchgfx4ViewI19MainScreenPresenterE4bindERS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::View&lang;MainScreenPresenter&rang;::bind(MainScreenPresenter&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[39f]"></a>touchgfx::View&lang;MainScreenPresenter&rang;::View__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, mainscreenviewbase.o(.text._ZN8touchgfx4ViewI19MainScreenPresenterEC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
</UL>

<P><STRONG><a name="[1e0]"></a>touchgfx::View&lang;MainScreenPresenter&rang;::~View__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, mainscreenviewbase.o(.text._ZN8touchgfx4ViewI19MainScreenPresenterED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::View&lang;MainScreenPresenter&rang;::~View__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;MainScreenPresenter&rang;::~View__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
</UL>
<P><STRONG><a name="[1df]"></a>touchgfx::View&lang;MainScreenPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, mainscreenviewbase.o(.text._ZN8touchgfx4ViewI19MainScreenPresenterED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::View&lang;MainScreenPresenter&rang;::~View__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::~Screen__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;MainScreenPresenter&rang;::~View__deallocating()
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::~MainScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
</UL>
<P><STRONG><a name="[390]"></a>touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx5Color15getColorFromRGBEhhh), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype__sub_object(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[148]"></a>touchgfx::Event::~Event__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx5EventD2Ev))
<BR>[Address Reference Count : 3]<UL><LI> screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
<LI> screen.o(.rodata._ZTVN8touchgfx9DragEventE)
<LI> screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
</UL>
<P><STRONG><a name="[1e2]"></a>touchgfx::Image::setBitmap(touchgfx::Bitmap const&)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, image.o(.text._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::setBitmap(touchgfx::Bitmap const&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image__sub_object(touchgfx::Bitmap const&)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::startAnimation(bool, bool, bool)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::handleTickEvent()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::stopAnimation()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[3f9]"></a>touchgfx::Image::Image__sub_object(touchgfx::Bitmap const&)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, mainscreenviewbase.o(.text._ZN8touchgfx5ImageC2ERKNS_6BitmapE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::AnimatedImage__sub_object(unsigned char const&)
</UL>

<P><STRONG><a name="[1e1]"></a>touchgfx::Image::~Image__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, image.o(.text._ZN8touchgfx5ImageD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Image::~Image__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[3fa]"></a>touchgfx::Image::~Image__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, mainscreenviewbase.o(.text._ZN8touchgfx5ImageD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Image::~Image__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::~AnimatedImage__sub_object()
</UL>

<P><STRONG><a name="[3bc]"></a>touchgfx::Texts::setLanguage(unsigned short)</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, texts.o(.text._ZN8touchgfx5Texts11setLanguageEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::Texts::setLanguage(unsigned short) &rArr; touchgfx::TypedText::registerTypedTextDatabase(touchgfx::TypedText::TypedTextData const*, touchgfx::Font const* const*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::registerTypedTextDatabase(touchgfx::TypedText::TypedTextData const*, touchgfx::Font const* const*, unsigned short)
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getInstanceSize()
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[43b]"></a>touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int)</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 108 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int) &rArr; touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[422]"></a>touchgfx::Bitmap::dynamicBitmapGetAddress(unsigned short)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[43c]"></a>touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int)</STRONG> (Thumb, 548 bytes, Stack size 32 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap8setCacheEPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[3f8]"></a>touchgfx::Bitmap::Bitmap__sub_object(unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mainscreenviewbase.o(.text._ZN8touchgfx6BitmapC2Et), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::AnimatedImage__sub_object(unsigned char const&)
</UL>

<P><STRONG><a name="[3c4]"></a>touchgfx::BlitOp::BlitOp__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8touchgfx6BlitOpC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::BlitOp::BlitOp__sub_object() &rArr; touchgfx::colortype::colortype__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
</UL>

<P><STRONG><a name="[1dd]"></a>touchgfx::Screen::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen11setupScreenEv))
<BR>[Address Reference Count : 3]<UL><LI> mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[488]"></a>touchgfx::Screen::bindTransition(touchgfx::Transition&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE))
<BR><BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>

<P><STRONG><a name="[1de]"></a>touchgfx::Screen::handleKeyEvent(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen14handleKeyEventEh))
<BR>[Address Reference Count : 3]<UL><LI> mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[fe]"></a>touchgfx::Screen::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen14tearDownScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::tearDownScreen()
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::tearDownScreen()
</UL>
<BR>[Address Reference Count : 5]<UL><LI> fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[eb]"></a>touchgfx::Screen::afterTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv))
<BR>[Address Reference Count : 7]<UL><LI> mainscreenview.o(.rodata._ZTV14MainScreenView)
<LI> fontscreenview.o(.rodata._ZTV14FontScreenView)
<LI> fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[ee]"></a>touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</STRONG> (Thumb, 250 bytes, Stack size 56 bytes, screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 7]<UL><LI> mainscreenview.o(.rodata._ZTV14MainScreenView)
<LI> fontscreenview.o(.rodata._ZTV14FontScreenView)
<LI> fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[ff]"></a>touchgfx::Screen::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv))
<BR>[Address Reference Count : 5]<UL><LI> fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[ed]"></a>touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&) &rArr; touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
</UL>
<BR>[Address Reference Count : 7]<UL><LI> mainscreenview.o(.rodata._ZTV14MainScreenView)
<LI> fontscreenview.o(.rodata._ZTV14FontScreenView)
<LI> fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[ef]"></a>touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 7]<UL><LI> mainscreenview.o(.rodata._ZTV14MainScreenView)
<LI> fontscreenview.o(.rodata._ZTV14FontScreenView)
<LI> fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[392]"></a>touchgfx::Screen::add(touchgfx::Drawable&)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx6Screen3addERNS_8DrawableE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[e9]"></a>touchgfx::Screen::draw(touchgfx::Rect&)</STRONG> (Thumb, 250 bytes, Stack size 56 bytes, screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::Screen::draw(touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(touchgfx::Rect const&) const
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 7]<UL><LI> mainscreenview.o(.rodata._ZTV14MainScreenView)
<LI> fontscreenview.o(.rodata._ZTV14FontScreenView)
<LI> fontscreenviewbase.o(.rodata._ZTV18FontScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTV18MainScreenViewBase)
<LI> mainscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19MainScreenPresenterEE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx4ViewI19FontScreenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[3e0]"></a>touchgfx::Screen::draw()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, screen.o(.text._ZN8touchgfx6Screen4drawEv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[43e]"></a>touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)</STRONG> (Thumb, 1006 bytes, Stack size 80 bytes, screen.o(.text._ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[43f]"></a>touchgfx::Screen::Screen()</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, screen.o(.text._ZN8touchgfx6ScreenC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[438]"></a>touchgfx::Screen::Screen__sub_object()</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, screen.o(.text._ZN8touchgfx6ScreenC2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;MainScreenPresenter&rang;::View__sub_object()
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;FontScreenPresenter&rang;::View__sub_object()
</UL>

<P><STRONG><a name="[1e4]"></a>touchgfx::Screen::~Screen__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6ScreenD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Screen::~Screen__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[1e3]"></a>touchgfx::Screen::~Screen__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6ScreenD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;MainScreenPresenter&rang;::~View__sub_object()
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;FontScreenPresenter&rang;::~View__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[168]"></a>touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE))
<BR>[Address Reference Count : 8]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[41a]"></a>touchgfx::Widget::Widget__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx6WidgetC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image__sub_object(touchgfx::Bitmap const&)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box__sub_object()
</UL>

<P><STRONG><a name="[1e6]"></a>touchgfx::Widget::~Widget__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, fontscreenviewbase.o(.text._ZN8touchgfx6WidgetD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Widget::~Widget__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
</UL>
<P><STRONG><a name="[1e5]"></a>touchgfx::Widget::~Widget__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx6WidgetD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::~Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::~Image__sub_object()
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::~SnapshotWidget__sub_object()
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
</UL>
<P><STRONG><a name="[378]"></a>touchgfx::memset(void*, unsigned char, unsigned int)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, utils.o(.text._ZN8touchgfx6memsetEPvhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::memset(void*, unsigned char, unsigned int) &rArr; __aeabi_memset &rArr; _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::handleTickEvent()
</UL>

<P><STRONG><a name="[3c7]"></a>touchgfx::Buttons::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, buttons.o(.text._ZN8touchgfx7Buttons4initEv))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::KeySampler::init()
</UL>

<P><STRONG><a name="[3c8]"></a>touchgfx::Buttons::sample()</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, buttons.o(.text._ZN8touchgfx7Buttons6sampleEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Buttons::sample() &rArr; HAL_GPIO_ReadPin
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::KeySampler::sample(unsigned char&)
</UL>

<P><STRONG><a name="[386]"></a>touchgfx::MVPHeap::MVPHeap__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::MVPApplication&)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx7MVPHeapC2ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::MVPHeap::MVPHeap__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::MVPApplication&)
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::FrontendHeapBase__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, FrontendApplication&)
</UL>

<P><STRONG><a name="[1e9]"></a>touchgfx::MVPHeap::~MVPHeap__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx7MVPHeapD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::MVPHeap::~MVPHeap__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPHeap::~MVPHeap__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx7MVPHeapE)
</UL>
<P><STRONG><a name="[1e8]"></a>touchgfx::MVPHeap::~MVPHeap__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx7MVPHeapD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::MVPHeap::~MVPHeap__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPHeap::~MVPHeap__deallocating()
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::~FrontendHeapBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx7MVPHeapE)
</UL>
<P><STRONG><a name="[445]"></a>touchgfx::Unicode::composeString(unsigned short const*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)</STRONG> (Thumb, 844 bytes, Stack size 40 bytes, unicode.o(.text._ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, unsigned short const*, char const*, std::__va_list)
</UL>

<P><STRONG><a name="[444]"></a>touchgfx::Unicode::parseFlagsAndPrecision(unsigned short const*&, char const*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)</STRONG> (Thumb, 726 bytes, Stack size 40 bytes, unicode.o(.text._ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, unsigned short const*, char const*, std::__va_list)
</UL>

<P><STRONG><a name="[379]"></a>touchgfx::Unicode::fromUTF8(unsigned char const*, unsigned short*, unsigned short)</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, unicode.o(.text._ZN8touchgfx7Unicode8fromUTF8EPKhPtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Unicode::fromUTF8(unsigned char const*, unsigned short*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::FusionFontTextUpdate()
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::handleTickEvent()
</UL>

<P><STRONG><a name="[399]"></a>touchgfx::Unicode::snprintf(unsigned short*, unsigned short, char const*, ...)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, unicode.o(.text._ZN8touchgfx7Unicode8snprintfEPttPKcz), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, unsigned short const*, char const*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[443]"></a>touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, unsigned short const*, char const*, std::__va_list)</STRONG> (Thumb, 2642 bytes, Stack size 232 bytes, unicode.o(.text._ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(unsigned short const*&, char const*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::composeString(unsigned short const*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, char const*, ...)
</UL>

<P><STRONG><a name="[1ec]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[3b4]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)())</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC2EPS1_MS1_FvvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenScreenNoTransition()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoFontScreenScreenSlideTransitionEast()
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenScreenSlideTransitionEast()
</UL>

<P><STRONG><a name="[3bb]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[1eb]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object() &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[1ea]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object() &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__sub_object()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenScreenNoTransition()
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoFontScreenScreenSlideTransitionEast()
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenScreenSlideTransitionEast()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[3b5]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator=(touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&&)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator=(touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&&) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::operator=(touchgfx::GenericCallback&lang;void, void, void&rang; const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void, void&rang;::operator=(touchgfx::GenericCallback&lang;void, void, void&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenScreenNoTransition()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoFontScreenScreenSlideTransitionEast()
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoMainScreenScreenSlideTransitionEast()
</UL>

<P><STRONG><a name="[38f]"></a>touchgfx::Drawable::setPosition(short, short, short, short)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, fontscreenviewbase.o(.text._ZN8touchgfx8Drawable11setPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition__sub_object(unsigned char)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[174]"></a>touchgfx::Drawable::moveRelative(short, short)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::moveRelative(short, short)
</UL>
<BR>[Address Reference Count : 10]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[166]"></a>touchgfx::Drawable::getFirstChild()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx8Drawable13getFirstChildEv))
<BR>[Address Reference Count : 9]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[412]"></a>touchgfx::Drawable::getNextSibling()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8Drawable14getNextSiblingEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Drawable::getNextSibling()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::init()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[448]"></a>touchgfx::Drawable::setWidthHeight(short, short)</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, fontscreenviewbase.o(.text._ZN8touchgfx8Drawable14setWidthHeightEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>

<P><STRONG><a name="[176]"></a>touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_))
<BR>[Address Reference Count : 9]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[172]"></a>touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 10]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[19c]"></a>touchgfx::Drawable::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable15handleTickEventEv))
<BR>[Address Reference Count : 9]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[170]"></a>touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 10]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[171]"></a>touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 10]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[16f]"></a>touchgfx::Drawable::childGeometryChanged()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv))
<BR>[Address Reference Count : 10]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[167]"></a>touchgfx::Drawable::getSolidRectAbsolute()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::getSolidRectAbsolute()
</UL>
<BR>[Address Reference Count : 10]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[16b]"></a>touchgfx::Drawable::setX(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx8Drawable4setXEs))
<BR>[Address Reference Count : 10]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[16c]"></a>touchgfx::Drawable::setY(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx8Drawable4setYEs))
<BR>[Address Reference Count : 10]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[393]"></a>touchgfx::Drawable::setXY(short, short)</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, fontscreenviewbase.o(.text._ZN8touchgfx8Drawable5setXYEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>

<P><STRONG><a name="[175]"></a>touchgfx::Drawable::moveTo(short, short)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx8Drawable6moveToEss))
<BR>[Address Reference Count : 10]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[16d]"></a>touchgfx::Drawable::setWidth(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx8Drawable8setWidthEs))
<BR>[Address Reference Count : 7]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[16e]"></a>touchgfx::Drawable::setHeight(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx8Drawable9setHeightEs))
<BR>[Address Reference Count : 7]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[441]"></a>touchgfx::Drawable::Drawable__sub_object()</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, fontscreenviewbase.o(.text._ZN8touchgfx8DrawableC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>

<P><STRONG><a name="[1ee]"></a>touchgfx::Drawable::~Drawable__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drawable.o(.text._ZN8touchgfx8DrawableD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
</UL>
<P><STRONG><a name="[15f]"></a>touchgfx::Drawable::~Drawable__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, animatedimage.o(.text._ZN8touchgfx8DrawableD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Address Reference Count : 6]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[428]"></a>touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, gestures.o(.text._ZN8touchgfx8Gestures17registerDragEventEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[429]"></a>touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, gestures.o(.text._ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::noTouch()
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[421]"></a>touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gestures.o(.text._ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)
</UL>

<P><STRONG><a name="[426]"></a>touchgfx::Gestures::tick()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gestures.o(.text._ZN8touchgfx8Gestures4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[1f5]"></a>touchgfx::HALGPU2D::beginFrame()</STRONG> (Thumb, 10 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx8HALGPU2D10beginFrameEv))
<BR><BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::beginFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[3ac]"></a>touchgfx::HALGPU2D::initialize(int)</STRONG> (Thumb, 136 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx8HALGPU2D10initializeEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = touchgfx::HALGPU2D::initialize(int) &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_create_sized
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::initialize()
</UL>

<P><STRONG><a name="[1f1]"></a>touchgfx::HALGPU2D::initialize()</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx8HALGPU2D10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = touchgfx::HALGPU2D::initialize() &rArr; touchgfx::HALGPU2D::initialize(int) &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::initialize(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[44c]"></a>touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 88 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx8HALGPU2D13dma2dBlitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; nema_cl_wait &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[44e]"></a>touchgfx::HALGPU2D::bindExecBuffer()</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx8HALGPU2D14bindExecBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::HALGPU2D::bindExecBuffer() &rArr; touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_bind_circular
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[b7]"></a>touchgfx::HALGPU2D::lockFrameBuffer()</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx8HALGPU2D15lockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::HALGPU2D::lockFrameBuffer() &rArr; nema_cl_wait &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_wait
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[450]"></a>touchgfx::HALGPU2D::submitExecBuffer()</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx8HALGPU2D16submitExecBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::HALGPU2D::submitExecBuffer() &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[b8]"></a>touchgfx::HALGPU2D::unlockFrameBuffer()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx8HALGPU2D17unlockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::HALGPU2D::unlockFrameBuffer() &rArr; touchgfx::HAL::unlockFrameBuffer() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::unlockFrameBuffer()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[1f6]"></a>touchgfx::HALGPU2D::endFrame()</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx8HALGPU2D8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::HALGPU2D::endFrame() &rArr; nema_cl_wait &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_wait
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::endFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[3b0]"></a>touchgfx::HALGPU2D::HALGPU2D__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 202 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx8HALGPU2DC2ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt))
<BR><BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[1f0]"></a>touchgfx::HALGPU2D::~HALGPU2D__deallocating()</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, halgpu2d.o(.text._ZN8touchgfx8HALGPU2DD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[3b1]"></a>touchgfx::HALGPU2D::~HALGPU2D__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN8touchgfx8HALGPU2DD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HALGPU2D::~HALGPU2D__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::~HAL__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object()
</UL>

<P><STRONG><a name="[453]"></a>touchgfx::LCDGPU2D::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 236 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D10blitCopyL8EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; nema_cl_wait &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8_RGB888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[22d]"></a>touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 356 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D10fillBufferEPhtRKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char) &rArr; nema_set_blend &rArr; nema_set_rop_blend_mode &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_clip
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_dst_tex
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rgba
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_fill_rect
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_const_color
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::submitExecBuffer()
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::bindExecBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[226]"></a>touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)</STRONG> (Thumb, 420 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool) &rArr; nema_set_blend &rArr; nema_set_rop_blend_mode &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_clip
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rgba
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_src_tex
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_const_color
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::submitExecBuffer()
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::bindExecBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[234]"></a>touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 612 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short) &rArr; nema_set_blend &rArr; nema_set_rop_blend_mode &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_clip
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rgba
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_enable_aa
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_tex_color
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_enable_tiling
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_quad_fit
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_src_tex
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_const_color
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::submitExecBuffer()
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::bindExecBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[46a]"></a>touchgfx::LCDGPU2D::setFrameBufferFormat(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 30 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D20setFrameBufferFormatENS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::setFrameBufferFormat(touchgfx::Bitmap::BitmapFormat) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[239]"></a>touchgfx::LCDGPU2D::bindFrameBufferTexture()</STRONG> (Thumb, 200 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D22bindFrameBufferTextureEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::bindFrameBufferTexture() &rArr; nema_bind_dst_tex &rArr; nema_bind_tex &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_dst_tex
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[233]"></a>touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 804 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short) &rArr; touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short) &rArr; touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_clip
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rgba
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_enable_aa
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_tex_color
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_enable_tiling
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_tri_fit
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_src_tex
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_const_color
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::submitExecBuffer()
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::bindExecBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[454]"></a>touchgfx::LCDGPU2D::blitCopyL8_RGB888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 710 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_16BPPEPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::blitCopyL8_RGB888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; nema_cl_wait &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[456]"></a>touchgfx::LCDGPU2D::blitCopyL8_RGB888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 514 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_24BPPEPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::blitCopyL8_RGB888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; nema_cl_wait &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[457]"></a>touchgfx::LCDGPU2D::blitCopyL8_RGB888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 554 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D23blitCopyL8_RGB888_32BPPEPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::blitCopyL8_RGB888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; nema_cl_wait &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[455]"></a>touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 588 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_16BPPEPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_16BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; nema_cl_wait &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[458]"></a>touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 548 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_24BPPEPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_24BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; nema_cl_wait &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[459]"></a>touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 558 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D25blitCopyL8_ARGB8888_32BPPEPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::blitCopyL8_ARGB8888_32BPP(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; nema_cl_wait &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[235]"></a>touchgfx::LCDGPU2D::getTextureMapperDrawScanLine(touchgfx::TextureSurface const&, unsigned short, unsigned char)</STRONG> (Thumb, 2520 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::getTextureMapperDrawScanLine(touchgfx::TextureSurface const&, unsigned short, unsigned char) &rArr; __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[22b]"></a>touchgfx::LCDGPU2D::copyAreaFromTFTToClientBuffer(touchgfx::Rect const&)</STRONG> (Thumb, 84 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D29copyAreaFromTFTToClientBufferERKNS_4RectE))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[22a]"></a>touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)</STRONG> (Thumb, 640 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short) &rArr; nema_set_blend &rArr; nema_set_rop_blend_mode &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_clip
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_dst_tex
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_src_tex
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::submitExecBuffer()
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::bindExecBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[229]"></a>touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)</STRONG> (Thumb, 236 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D29copyFrameBufferRegionToMemoryERKNS_4RectES3_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[238]"></a>touchgfx::LCDGPU2D::init()</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D4initEv))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[1f9]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 668 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[1f8]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[1fb]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 624 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[1fa]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[1fd]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 624 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[1fc]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D55TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[1ff]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 480 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[1fe]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[201]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 460 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[200]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[203]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 460 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[202]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D57TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[205]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 708 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[204]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[207]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 648 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[206]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[209]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 656 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[208]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D60TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[46c]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 368 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA10writePixelEPtPKhS4_siihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[46d]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 480 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[20b]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 624 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[20a]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[46e]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned char*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 374 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA10writePixelEPhPKhS4_siihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned char*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[46f]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 480 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhS4_ssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[20d]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 620 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned char*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[20c]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[470]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned int*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 360 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA10writePixelEPjPKhS4_siihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned int*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[471]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 430 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPjPKhS4_ssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[20f]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 624 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned int*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[20e]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D61TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[211]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 740 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[210]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D62TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[213]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 672 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[212]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D62TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[472]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 302 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA10writePixelEPtPKhS4_siihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[473]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 422 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[215]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 616 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[214]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[474]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned char*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 292 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA10writePixelEPhPKhS4_siihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned char*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[475]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 378 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhS4_ssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[217]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 612 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned char*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[216]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[476]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned int*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 306 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA10writePixelEPjPKhS4_siihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned int*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[477]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 364 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPjPKhS4_ssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[219]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 616 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned int*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[218]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D63TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[478]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 644 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKhPKjsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[479]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 736 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKjssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[21b]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 624 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[21a]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[47a]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned char*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 620 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPhPKhPKjsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned char*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[47b]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 638 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPhPKhPKjssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[21d]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 620 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned char*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[21c]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[47c]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned int*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 626 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPjPKhPKjsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned int*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[47d]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 810 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPjPKhPKjssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[21f]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 624 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned int*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned int*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[21e]"></a>touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D66TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[47e]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 632 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKjsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[47f]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 722 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[221]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 616 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[220]"></a>touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D68TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[480]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned char*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 604 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPhPKhPKjsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned char*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[481]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 690 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPhPKhPKjssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[223]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 612 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned char*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned char*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[222]"></a>touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2D68TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[228]"></a>touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</STRONG> (Thumb, 352 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool) &rArr; nema_set_blend &rArr; nema_set_rop_blend_mode &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_clip
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rgba
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_src_tex
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_const_color
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::submitExecBuffer()
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::bindExecBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[227]"></a>touchgfx::LCDGPU2D::blitCopy(unsigned short const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D8blitCopyEPKtRKNS_4RectES5_hb))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[22c]"></a>touchgfx::LCDGPU2D::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 218 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D8fillRectERKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char) &rArr; nema_set_blend &rArr; nema_set_rop_blend_mode &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_clip
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rgba
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_fill_rect
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_const_color
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::submitExecBuffer()
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::bindExecBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[237]"></a>touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</STRONG> (Thumb, 872 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2D9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation) &rArr; nema_set_blend &rArr; nema_set_rop_blend_mode &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_clip
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rgba
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_tex_color
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_rotate
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_src_tex
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_const_color
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(touchgfx::Rect const&, short, short, touchgfx::TextRotation)
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(touchgfx::Rect const&, short, short, touchgfx::TextRotation)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::bindExecBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[497]"></a>touchgfx::LCDGPU2D::LCDGPU2D()</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2DC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
</UL>

<P><STRONG><a name="[58a]"></a>touchgfx::LCDGPU2D::LCDGPU2D__sub_object()</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2DC2Ev), UNUSED)

<P><STRONG><a name="[225]"></a>touchgfx::LCDGPU2D::~LCDGPU2D__deallocating()</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZN8touchgfx8LCDGPU2DD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::~LCDGPU2D__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[a7]"></a>touchgfx::LCDGPU2D::~LCDGPU2D__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx8LCDGPU2DD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCDGPU2D::~LCDGPU2D__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::~LCD__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.text.__cxx_global_var_init.2)
</UL>
<P><STRONG><a name="[484]"></a>touchgfx::TextArea::BoundingArea::BoundingArea__sub_object()</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, fontscreenviewbase.o(.text._ZN8touchgfx8TextArea12BoundingAreaC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect__sub_object(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
</UL>

<P><STRONG><a name="[1c5]"></a>touchgfx::TextArea::setBaselineY(short)</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, textarea.o(.text._ZN8touchgfx8TextArea12setBaselineYEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::setBaselineY(short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[397]"></a>touchgfx::TextArea::setTypedText(touchgfx::TypedText const&)</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, textarea.o(.text._ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[1c6]"></a>touchgfx::TextArea::setXBaselineY(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, textarea.o(.text._ZN8touchgfx8TextArea13setXBaselineYEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::setXBaselineY(short, short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[395]"></a>touchgfx::TextArea::setLinespacing(short)</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, fontscreenviewbase.o(.text._ZN8touchgfx8TextArea14setLinespacingEs), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[37a]"></a>touchgfx::TextArea::resizeToCurrentText()</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, textarea.o(.text._ZN8touchgfx8TextArea19resizeToCurrentTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::FusionFontTextUpdate()
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::handleTickEvent()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[1c4]"></a>touchgfx::TextArea::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, textarea.o(.text._ZN8touchgfx8TextArea8setAlphaEh))
<BR>[Address Reference Count : 3]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[394]"></a>touchgfx::TextArea::setColor(touchgfx::colortype)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fontscreenviewbase.o(.text._ZN8touchgfx8TextArea8setColorENS_9colortypeE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[1c2]"></a>touchgfx::TextArea::setWidth(short)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, textarea.o(.text._ZN8touchgfx8TextArea8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setWidth(short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[1c3]"></a>touchgfx::TextArea::setHeight(short)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, textarea.o(.text._ZN8touchgfx8TextArea9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setHeight(short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[38d]"></a>touchgfx::TextArea::TextArea__sub_object()</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, fontscreenviewbase.o(.text._ZN8touchgfx8TextAreaC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::BoundingArea::BoundingArea__sub_object()
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype__sub_object(unsigned int)
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText__sub_object(unsigned short)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase__sub_object()
</UL>

<P><STRONG><a name="[23a]"></a>touchgfx::TextArea::~TextArea__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, textarea.o(.text._ZN8touchgfx8TextAreaD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::~TextArea__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1ce]"></a>touchgfx::TextArea::~TextArea__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, textarea.o(.text._ZN8touchgfx8TextAreaD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::~MainScreenViewBase()
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::~FontScreenViewBase()
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__sub_object()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[3fc]"></a>touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, constfont.o(.text._ZN8touchgfx9ConstFontC2EPKNS_9GlyphNodeEttthhhhhhtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
</UL>

<P><STRONG><a name="[23f]"></a>touchgfx::ConstFont::~ConstFont__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, constfont.o(.text._ZN8touchgfx9ConstFontD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[3fd]"></a>touchgfx::ConstFont::~ConstFont__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, cachedfont.o(.text._ZN8touchgfx9ConstFontD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ConstFont::~ConstFont__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::~Font__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::~GeneratedFont__sub_object()
</UL>

<P><STRONG><a name="[24f]"></a>touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[246]"></a>touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[245]"></a>touchgfx::Container::getFirstChild()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container13getFirstChildEv))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[247]"></a>touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[24e]"></a>touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</STRONG> (Thumb, 670 bytes, Stack size 96 bytes, container.o(.text._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[251]"></a>touchgfx::Container::moveChildrenRelative(short, short)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::moveChildrenRelative(short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[248]"></a>touchgfx::Container::add(touchgfx::Drawable&)</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::Container::add(touchgfx::Drawable&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[24d]"></a>touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[249]"></a>touchgfx::Container::remove(touchgfx::Drawable&)</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[24b]"></a>touchgfx::Container::unlink()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container6unlinkEv))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[24c]"></a>touchgfx::Container::contains(touchgfx::Drawable const&)</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[24a]"></a>touchgfx::Container::removeAll()</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container9removeAllEv))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[242]"></a>touchgfx::Container::~Container__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9ContainerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::~Container__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[1b4]"></a>touchgfx::DMA_Queue::~DMA_Queue__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx9DMA_QueueD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[252]"></a>touchgfx::DragEvent::~DragEvent__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx9DragEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DragEvent::~DragEvent__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx9DragEventE)
</UL>
<P><STRONG><a name="[362]"></a>touchgfx::FusedFont::FusedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)</STRONG> (Thumb, 250 bytes, Stack size 128 bytes, table_samsungonekorean_700_v2_0_hinted_20200508_30_4bpp.o(.text._ZN8touchgfx9FusedFontC2EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = touchgfx::FusedFont::FusedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::GeneratedFont::GeneratedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SamsungOneKorean_700_v2_0_hinted_20200508_30_4bpp()
</UL>

<P><STRONG><a name="[254]"></a>touchgfx::FusedFont::~FusedFont__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, generatedfont.o(.text._ZN8touchgfx9FusedFontD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::FusedFont::~FusedFont__deallocating() &rArr; touchgfx::FusedFont::~FusedFont__sub_object() &rArr; touchgfx::GeneratedFont::~GeneratedFont__sub_object() &rArr; touchgfx::ConstFont::~ConstFont__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FusedFont::~FusedFont__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
</UL>
<P><STRONG><a name="[9e]"></a>touchgfx::FusedFont::~FusedFont__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, generatedfont.o(.text._ZN8touchgfx9FusedFontD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::FusedFont::~FusedFont__sub_object() &rArr; touchgfx::GeneratedFont::~GeneratedFont__sub_object() &rArr; touchgfx::ConstFont::~ConstFont__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::~GeneratedFont__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FusedFont::~FusedFont__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> table_samsungonekorean_700_v2_0_hinted_20200508_30_4bpp.o(.text._Z57getFont_SamsungOneKorean_700_v2_0_hinted_20200508_30_4bppv)
</UL>
<P><STRONG><a name="[431]"></a>touchgfx::Gradients::Gradients(touchgfx::Point3D const*)</STRONG> (Thumb, 560 bytes, Stack size 32 bytes, texturemaptypes.o(.text._ZN8touchgfx9GradientsC2EPKNS_7Point3DE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Gradients::Gradients(touchgfx::Point3D const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[58b]"></a>touchgfx::Gradients::Gradients__sub_object(touchgfx::Point3D const*)</STRONG> (Thumb, 560 bytes, Stack size 32 bytes, texturemaptypes.o(.text._ZN8touchgfx9GradientsC2EPKNS_7Point3DE), UNUSED)

<P><STRONG><a name="[259]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[25a]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[374]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[257]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating() &rArr; touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[256]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[25f]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[260]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[373]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[25d]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating() &rArr; touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[25c]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[265]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[266]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[375]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[263]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating() &rArr; touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[262]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[269]"></a>touchgfx::Presenter::deactivate()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, fontscreenpresenter.o(.text._ZN8touchgfx9Presenter10deactivateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Presenter::deactivate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenpresenter.o(.rodata._ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[268]"></a>touchgfx::Presenter::activate()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, fontscreenpresenter.o(.text._ZN8touchgfx9Presenter8activateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Presenter::activate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenpresenter.o(.rodata._ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[3a5]"></a>touchgfx::Presenter::Presenter__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, fontscreenpresenter.o(.text._ZN8touchgfx9PresenterC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Presenter::Presenter__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter::MainScreenPresenter(MainScreenView&)
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter::FontScreenPresenter(FontScreenView&)
</UL>

<P><STRONG><a name="[26b]"></a>touchgfx::Presenter::~Presenter__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fontscreenpresenter.o(.text._ZN8touchgfx9PresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Presenter::~Presenter__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenpresenter.o(.rodata._ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[26a]"></a>touchgfx::Presenter::~Presenter__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, fontscreenpresenter.o(.text._ZN8touchgfx9PresenterD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter::~MainScreenPresenter__sub_object()
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::~Presenter__deallocating()
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter::~FontScreenPresenter__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenpresenter.o(.rodata._ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[52b]"></a>touchgfx::TypedText::registerTexts(touchgfx::Texts const*)</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::TypedText::registerTexts(touchgfx::Texts const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[43a]"></a>touchgfx::TypedText::registerTypedTextDatabase(touchgfx::TypedText::TypedTextData const*, touchgfx::Font const* const*, unsigned short)</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, texts.o(.text._ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::TypedText::registerTypedTextDatabase(touchgfx::TypedText::TypedTextData const*, touchgfx::Font const* const*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[396]"></a>touchgfx::TypedText::TypedText__sub_object(unsigned short)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, fontscreenviewbase.o(.text._ZN8touchgfx9TypedTextC2Et), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
</UL>

<P><STRONG><a name="[26d]"></a>touchgfx::TypedText::~TypedText__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fontcache.o(.text._ZN8touchgfx9TypedTextD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TypedText::~TypedText__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::~TypedText__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontcache.o(.rodata._ZTVN8touchgfx9TypedTextE)
</UL>
<P><STRONG><a name="[26c]"></a>touchgfx::TypedText::~TypedText__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, fontcache.o(.text._ZN8touchgfx9TypedTextD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::TypedText::~TypedText__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::MainScreenViewBase()
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::~TypedText__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontcache.o(.rodata._ZTVN8touchgfx9TypedTextE)
</UL>
<P><STRONG><a name="[41b]"></a>touchgfx::colortype::colortype__sub_object(unsigned int)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fontscreenviewbase.o(.text._ZN8touchgfx9colortypeC2Ej), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box__sub_object()
</UL>

<P><STRONG><a name="[43d]"></a>touchgfx::colortype::colortype__sub_object()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, stm32dma.o(.text._ZN8touchgfx9colortypeC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::colortype::colortype__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp__sub_object()
</UL>

<P><STRONG><a name="[b9]"></a>TouchGFXHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZNK11TouchGFXHAL17getTFTFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TouchGFXHAL::getTFTFrameBuffer() const &rArr; TouchGFXGeneratedHAL::getTFTFrameBuffer() const
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::getTFTFrameBuffer() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[128]"></a>TouchGFXGeneratedHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, touchgfxgeneratedhal.o(.text._ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TouchGFXGeneratedHAL::getTFTFrameBuffer() const
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::getTFTFrameBuffer() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[14a]"></a>touchgfx::ClickEvent::getEventType() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZNK8touchgfx10ClickEvent12getEventTypeEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
</UL>
<P><STRONG><a name="[15b]"></a>touchgfx::GestureEvent::getEventType() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZNK8touchgfx12GestureEvent12getEventTypeEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
</UL>
<P><STRONG><a name="[191]"></a>touchgfx::GeneratedFont::getKerning(unsigned short, touchgfx::GlyphNode const*) const</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, generatedfont.o(.text._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::GeneratedFont::getKerning(unsigned short, touchgfx::GlyphNode const*) const &rArr; touchgfx::GlyphNode::kerningTablePos() const
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::kerningTablePos() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
</UL>
<P><STRONG><a name="[193]"></a>touchgfx::GeneratedFont::getGSUBTable() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getGSUBTableEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GeneratedFont::getGSUBTable() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
</UL>
<P><STRONG><a name="[195]"></a>touchgfx::GeneratedFont::getPixelData(touchgfx::GlyphNode const*) const</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::GeneratedFont::getPixelData(touchgfx::GlyphNode const*) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
</UL>
<P><STRONG><a name="[194]"></a>touchgfx::GeneratedFont::getContextualFormsTable() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, generatedfont.o(.text._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GeneratedFont::getContextualFormsTable() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
</UL>
<P><STRONG><a name="[19a]"></a>touchgfx::SnapshotWidget::getSolidRect() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, snapshotwidget.o(.text._ZNK8touchgfx14SnapshotWidget12getSolidRectEv))
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[19b]"></a>touchgfx::SnapshotWidget::invalidateContent() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, snapshotwidget.o(.text._ZNK8touchgfx14SnapshotWidget17invalidateContentEv))
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[199]"></a>touchgfx::SnapshotWidget::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, snapshotwidget.o(.text._ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = touchgfx::SnapshotWidget::draw(touchgfx::Rect const&) const &rArr; touchgfx::Bitmap::getWidth() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[1ae]"></a>touchgfx::AbstractPartition::getAllocationCount() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[1cb]"></a>touchgfx::TextAreaWithOneWildcard::getWildcard1() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, fontscreenviewbase.o(.text._ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::getWildcard1() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[1c1]"></a>touchgfx::TextAreaWithWildcardBase::invalidateContent() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv))
<BR>[Address Reference Count : 2]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[1cd]"></a>touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv))
<BR>[Address Reference Count : 2]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[1bf]"></a>touchgfx::TextAreaWithWildcardBase::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 298 bytes, Stack size 80 bytes, textareawithwildcard.o(.text._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 916 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::draw(touchgfx::Rect const&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...) &rArr; touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 2]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[1d9]"></a>touchgfx::Box::getSolidRect() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, box.o(.text._ZNK8touchgfx3Box12getSolidRectEv))
<BR>[Address Reference Count : 1]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[1da]"></a>touchgfx::Box::invalidateContent() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, box.o(.text._ZNK8touchgfx3Box17invalidateContentEv))
<BR>[Address Reference Count : 1]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[1d8]"></a>touchgfx::Box::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, box.o(.text._ZNK8touchgfx3Box4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Box::draw(touchgfx::Rect const&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[37e]"></a>touchgfx::HAL::getMCULoadPct() const</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, mainscreenview.o(.text._ZNK8touchgfx3HAL13getMCULoadPctEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::HAL::getMCULoadPct() const
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::handleTickEvent()
</UL>

<P><STRONG><a name="[d2]"></a>touchgfx::HAL::getFlashDataReader() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[18c]"></a>touchgfx::Font::getBaseline() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font11getBaselineEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[188]"></a>touchgfx::Font::getCharWidth(unsigned short) const</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, font.o(.text._ZNK8touchgfx4Font12getCharWidthEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Font::getCharWidth(unsigned short) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[240]"></a>touchgfx::Font::getGSUBTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font12getGSUBTableEv))
<BR>[Address Reference Count : 1]<UL><LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[18b]"></a>touchgfx::Font::getFontHeight() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, font.o(.text._ZNK8touchgfx4Font13getFontHeightEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[186]"></a>touchgfx::Font::getStringWidth(unsigned short const*, ...) const</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, texts.o(.text._ZNK8touchgfx4Font14getStringWidthEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidth(unsigned short const*, ...) const &rArr; touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[187]"></a>touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, texts.o(.text._ZNK8touchgfx4Font14getStringWidthEhPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const &rArr; touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[18f]"></a>touchgfx::Font::getBitsPerPixel() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font15getBitsPerPixelEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[190]"></a>touchgfx::Font::getByteAlignRow() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font15getByteAlignRowEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[185]"></a>touchgfx::Font::getEllipsisChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font15getEllipsisCharEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[184]"></a>touchgfx::Font::getFallbackChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font15getFallbackCharEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[189]"></a>touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const</STRONG> (Thumb, 168 bytes, Stack size 152 bytes, font.o(.text._ZNK8touchgfx4Font15getSpacingAboveEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[18a]"></a>touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const</STRONG> (Thumb, 180 bytes, Stack size 152 bytes, font.o(.text._ZNK8touchgfx4Font16getMaxTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[192]"></a>touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const</STRONG> (Thumb, 96 bytes, Stack size 144 bytes, font.o(.text._ZNK8touchgfx4Font16getNumberOfLinesEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const &rArr; touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[48b]"></a>touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const</STRONG> (Thumb, 212 bytes, Stack size 152 bytes, font.o(.text._ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidth(unsigned short const*, ...) const
</UL>

<P><STRONG><a name="[18d]"></a>touchgfx::Font::getMinimumTextHeight() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, font.o(.text._ZNK8touchgfx4Font20getMinimumTextHeightEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[241]"></a>touchgfx::Font::getContextualFormsTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font23getContextualFormsTableEv))
<BR>[Address Reference Count : 1]<UL><LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[183]"></a>touchgfx::Font::getGlyph(unsigned short) const</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, constfont.o(.text._ZNK8touchgfx4Font8getGlyphEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Font::getGlyph(unsigned short) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[18e]"></a>touchgfx::Font::getHeight() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font9getHeightEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[437]"></a>touchgfx::Rect::intersect(touchgfx::Rect const&) const</STRONG> (Thumb, 70 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZNK8touchgfx4Rect9intersectERKS0_))
<BR><BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[162]"></a>touchgfx::Image::getSolidRect() const</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, image.o(.text._ZNK8touchgfx5Image12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[165]"></a>touchgfx::Image::invalidateContent() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, animatedimage.o(.text._ZNK8touchgfx5Image17invalidateContentEv))
<BR>[Address Reference Count : 2]<UL><LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[161]"></a>touchgfx::Image::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 196 bytes, Stack size 56 bytes, image.o(.text._ZNK8touchgfx5Image4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 116 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::draw(touchgfx::Rect const&) const &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[48a]"></a>touchgfx::Texts::getText(unsigned short) const</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, texts.o(.text._ZNK8touchgfx5Texts7getTextEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Texts::getText(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight() const
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(touchgfx::Rect const&) const
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(touchgfx::Rect const&) const
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::invalidateContent() const
</UL>

<P><STRONG><a name="[461]"></a>touchgfx::Bitmap::getExtraData() const</STRONG> (Thumb, 218 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap12getExtraDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getExtraData() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[48c]"></a>touchgfx::Bitmap::getSolidRect() const</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getSolidRect() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::getSolidRect() const
</UL>

<P><STRONG><a name="[460]"></a>touchgfx::Bitmap::getData() const</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap7getDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getData() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::draw(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[423]"></a>touchgfx::Bitmap::getWidth() const</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap8getWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getWidth() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(touchgfx::Rect const&) const
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::draw(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[425]"></a>touchgfx::Bitmap::getFormat() const</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap9getFormatEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getFormat() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[424]"></a>touchgfx::Bitmap::getHeight() const</STRONG> (Thumb, 156 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap9getHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[1ed]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, frontendapplicationbase.o(.text._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[164]"></a>touchgfx::Drawable::invalidate() const</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::FusionFontTextUpdate()
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::handleTickEvent()
</UL>
<BR>[Address Reference Count : 10]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[169]"></a>touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 10]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[163]"></a>touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>
<BR>[Address Reference Count : 10]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[400]"></a>touchgfx::Drawable::getAbsoluteRect() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drawable.o(.text._ZNK8touchgfx8Drawable15getAbsoluteRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(touchgfx::Rect const&) const
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(touchgfx::Rect const&) const
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::makeSnapshot(unsigned short)
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[1e7]"></a>touchgfx::Drawable::invalidateContent() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, container.o(.text._ZNK8touchgfx8Drawable17invalidateContentEv))
<BR>[Address Reference Count : 3]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
</UL>
<P><STRONG><a name="[16a]"></a>touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE))
<BR>[Address Reference Count : 10]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> animatedimage.o(.rodata._ZTVN8touchgfx13AnimatedImageE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> snapshotwidget.o(.rodata._ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[411]"></a>touchgfx::Drawable::getX() const</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZNK8touchgfx8Drawable4getXEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Drawable::getX() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::init()
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[22f]"></a>touchgfx::LCDGPU2D::framebufferFormat() const</STRONG> (Thumb, 4 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZNK8touchgfx8LCDGPU2D17framebufferFormatEv))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[230]"></a>touchgfx::LCDGPU2D::framebufferStride() const</STRONG> (Thumb, 60 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZNK8touchgfx8LCDGPU2D17framebufferStrideEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCDGPU2D::framebufferStride() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[22e]"></a>touchgfx::LCDGPU2D::bitDepth() const</STRONG> (Thumb, 18 bytes, Stack size unknown bytes, lcdgpu2d.o(.text._ZNK8touchgfx8LCDGPU2D8bitDepthEv))
<BR>[Address Reference Count : 1]<UL><LI> lcdgpu2d.o(.rodata._ZTVN8touchgfx8LCDGPU2DE)
</UL>
<P><STRONG><a name="[1c7]"></a>touchgfx::TextArea::getAlignment() const</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, textarea.o(.text._ZNK8touchgfx8TextArea12getAlignmentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getAlignment() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[1c0]"></a>touchgfx::TextArea::getSolidRect() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, textarea.o(.text._ZNK8touchgfx8TextArea12getSolidRectEv))
<BR>[Address Reference Count : 3]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[1c9]"></a>touchgfx::TextArea::getTextWidth() const</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, textarea.o(.text._ZNK8touchgfx8TextArea12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextWidth() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[1d0]"></a>touchgfx::TextArea::getWildcard1() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, textarea.o(.text._ZNK8touchgfx8TextArea12getWildcard1Ev))
<BR>[Address Reference Count : 2]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[1cc]"></a>touchgfx::TextArea::getWildcard2() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, textarea.o(.text._ZNK8touchgfx8TextArea12getWildcard2Ev))
<BR>[Address Reference Count : 3]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[1c8]"></a>touchgfx::TextArea::getTextHeight() const</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, textarea.o(.text._ZNK8touchgfx8TextArea13getTextHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[23c]"></a>touchgfx::TextArea::invalidateContent() const</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, textarea.o(.text._ZNK8touchgfx8TextArea17invalidateContentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::invalidateContent() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1ca]"></a>touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const</STRONG> (Thumb, 350 bytes, Stack size 152 bytes, textarea.o(.text._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const &rArr; touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, touchgfx::Font const*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*, touchgfx::FontContextualFormsTable const*)
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, touchgfx::Font const*, short)
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[23d]"></a>touchgfx::TextArea::calculateBoundingArea() const</STRONG> (Thumb, 1032 bytes, Stack size 192 bytes, textarea.o(.text._ZNK8touchgfx8TextArea21calculateBoundingAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, unsigned short const*, touchgfx::FontContextualFormsTable const*, ...)
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, touchgfx::Font const&, int, unsigned char)
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::endOfString()
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[23b]"></a>touchgfx::TextArea::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 604 bytes, Stack size 96 bytes, textarea.o(.text._ZNK8touchgfx8TextArea4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 932 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::draw(touchgfx::Rect const&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...) &rArr; touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[48d]"></a>touchgfx::ConstFont::find(unsigned short) const</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, constfont.o(.text._ZNK8touchgfx9ConstFont4findEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const
</UL>

<P><STRONG><a name="[182]"></a>touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, constfont.o(.text._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const &rArr; touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FusedFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[244]"></a>touchgfx::Container::getSolidRect() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, container.o(.text._ZNK8touchgfx9Container12getSolidRectEv))
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[250]"></a>touchgfx::Container::getContainedArea() const</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Container::getContainedArea() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[243]"></a>touchgfx::Container::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Container::draw(touchgfx::Rect const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[253]"></a>touchgfx::DragEvent::getEventType() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZNK8touchgfx9DragEvent12getEventTypeEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx9DragEventE)
</UL>
<P><STRONG><a name="[255]"></a>touchgfx::FusedFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, generatedfont.o(.text._ZNK8touchgfx9FusedFont8getGlyphEtRPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::FusedFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const &rArr; touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const &rArr; touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx9FusedFontE)
</UL>
<P><STRONG><a name="[489]"></a>touchgfx::GlyphNode::kerningTablePos() const</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, generatedfont.o(.text._ZNK8touchgfx9GlyphNode15kerningTablePosEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GlyphNode::kerningTablePos() const
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::getKerning(unsigned short, touchgfx::GlyphNode const*) const
</UL>

<P><STRONG><a name="[25b]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[258]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI14FontScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[261]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[25e]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI19FontScreenPresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[267]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[264]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::capacity() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[48e]"></a>touchgfx::TypedText::hasValidId() const</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, fontcache.o(.text._ZNK8touchgfx9TypedText10hasValidIdEv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
</UL>

<P><STRONG><a name="[398]"></a>touchgfx::TypedText::getText() const</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, fontscreenviewbase.o(.text._ZNK8touchgfx9TypedText7getTextEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::FontScreenViewBase()
</UL>

<P><STRONG><a name="[3c0]"></a>touchgfx::colortype::operator unsigned int() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32dma.o(.text._ZNK8touchgfx9colortypecvjEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::colortype::operator unsigned int() const
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataFill(touchgfx::BlitOp const&)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataCopy(touchgfx::BlitOp const&)
</UL>

<P><STRONG><a name="[48f]"></a>std::__terminate(void (*)())</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = std::__terminate(void (*)()) &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>

<P><STRONG><a name="[493]"></a>std::terminate()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, cxa_handlers.cpp.o(.text._ZSt9terminatev), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + Unknown Stack Size
<LI>Call Chain = std::terminate() &rArr; std::__terminate(void (*)()) &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals_fast
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__isOurExceptionClass(_Unwind_Control_Block const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup_impl
</UL>

<P><STRONG><a name="[108]"></a>non-virtual thunk to FontScreenPresenter::~FontScreenPresenter__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, fontscreenpresenter.o(.text._ZThn4_N19FontScreenPresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = non-virtual thunk to FontScreenPresenter::~FontScreenPresenter__deallocating() &rArr; FontScreenPresenter::~FontScreenPresenter__deallocating() &rArr; FontScreenPresenter::~FontScreenPresenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter::~FontScreenPresenter__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
</UL>
<P><STRONG><a name="[107]"></a>non-virtual thunk to FontScreenPresenter::~FontScreenPresenter()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fontscreenpresenter.o(.text._ZThn4_N19FontScreenPresenterD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = non-virtual thunk to FontScreenPresenter::~FontScreenPresenter() &rArr; FontScreenPresenter::~FontScreenPresenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter::~FontScreenPresenter__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontscreenpresenter.o(.rodata._ZTV19FontScreenPresenter)
</UL>
<P><STRONG><a name="[11f]"></a>non-virtual thunk to MainScreenPresenter::~MainScreenPresenter__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, mainscreenpresenter.o(.text._ZThn4_N19MainScreenPresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = non-virtual thunk to MainScreenPresenter::~MainScreenPresenter__deallocating() &rArr; MainScreenPresenter::~MainScreenPresenter__deallocating() &rArr; MainScreenPresenter::~MainScreenPresenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter::~MainScreenPresenter__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
</UL>
<P><STRONG><a name="[11e]"></a>non-virtual thunk to MainScreenPresenter::~MainScreenPresenter()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, mainscreenpresenter.o(.text._ZThn4_N19MainScreenPresenterD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = non-virtual thunk to MainScreenPresenter::~MainScreenPresenter() &rArr; MainScreenPresenter::~MainScreenPresenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter::~MainScreenPresenter__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.rodata._ZTV19MainScreenPresenter)
</UL>
<P><STRONG><a name="[36f]"></a>operator delete(void*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, new.cpp.o(.text._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;FontScreenPresenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPHeap::~MVPHeap__deallocating()
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::~FrontendHeapBase__deallocating()
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__deallocating()
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::~STM32TouchController__deallocating()
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::~TouchGFXHAL__deallocating()
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::KeySampler::~KeySampler__deallocating()
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CortexMMCUInstrumentation::~CortexMMCUInstrumentation__deallocating()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::~STM32DMA__deallocating()
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating()
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::~ApplicationFontProvider__deallocating()
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenView::~MainScreenView__deallocating()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter::~MainScreenPresenter__deallocating()
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::~FrontendApplication__deallocating()
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenView::~FontScreenView__deallocating()
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::~ModelListener__deallocating()
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::~Presenter__deallocating()
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter::~FontScreenPresenter__deallocating()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;MainScreenPresenter&rang;::~View__deallocating()
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenViewBase::~MainScreenViewBase__deallocating()
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FusedFont::~FusedFont__deallocating()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::~GeneratedFont__deallocating()
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition__deallocating()
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::~Transition__deallocating()
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::~NoTransition__deallocating()
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::~MVPApplication__deallocating()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__deallocating()
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;FontScreenPresenter&rang;::~View__deallocating()
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__deallocating()
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenViewBase::~FontScreenViewBase__deallocating()
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::~TypedText__deallocating()
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating()
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container__deallocating()
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box__deallocating()
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::~Application__deallocating()
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AnimatedImage::~AnimatedImage__deallocating()
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__deallocating()
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea__deallocating()
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::~SnapshotWidget__deallocating()
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DragEvent::~DragEvent__deallocating()
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::~Screen__deallocating()
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GestureEvent::~GestureEvent__deallocating()
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::~ClickEvent__deallocating()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::~Image__deallocating()
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::~LCDGPU2D__deallocating()
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_32BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_32BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_24BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_16BPP_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_32BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_24BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_16BPP_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_32BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_24BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_16BPP_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()
</UL>

<P><STRONG><a name="[492]"></a>__clang_call_terminate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, new.cpp.o(.text.__clang_call_terminate), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = __clang_call_terminate &rArr;  std::terminate() (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
</UL>
<BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>

<P><STRONG><a name="[491]"></a>__cxa_begin_catch</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, cxa_exception.cpp.o(.text.__cxa_begin_catch), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = __cxa_begin_catch &rArr;  std::terminate() (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>

<P><STRONG><a name="[496]"></a>__cxa_get_globals</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cxa_exception_storage.cpp.o(.text.__cxa_get_globals), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup_impl
</UL>

<P><STRONG><a name="[494]"></a>__cxa_get_globals_fast</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cxa_exception_storage.cpp.o(.text.__cxa_get_globals_fast), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>

<P><STRONG><a name="[17c]"></a>__cxa_pure_virtual</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, cxa_virtual.cpp.o(.text.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = __cxa_pure_virtual &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>
<BR>[Address Reference Count : 10]<UL><LI> touchgfxhal.o(.rodata._ZTVN8touchgfx16ButtonControllerE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx15TouchControllerE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx18MCUInstrumentationE)
<LI> fontscreenviewbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIvvvEE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> halgpu2d.o(.rodata._ZTVN8touchgfx8HALGPU2DE)
</UL>
<P><STRONG><a name="[288]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, retarget.o(.text._sys_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[299]"></a>_ttywrch</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, retarget.o(.text._ttywrch))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[490]"></a>abort_message</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, abort_message.cpp.o(.text.abort_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>

<P><STRONG><a name="[498]"></a>context_reset</STRONG> (Thumb, 106 bytes, Stack size unknown bytes, nema_vg_context.o(.text.context_reset), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_destroy
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_init_stencil_prealloc
</UL>

<P><STRONG><a name="[4a1]"></a>lut_buffer_create</STRONG> (Thumb, 130 bytes, Stack size unknown bytes, nema_vg_context.o(.text.lut_buffer_create), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_create_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_init_stencil_prealloc
</UL>

<P><STRONG><a name="[283]"></a>main</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = main &rArr; MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_PreOSInit
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPU2D_Init
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DCACHE2_Init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DCACHE1_Init
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C5_Init
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DSIHOST_DSI_Init
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM8_Init
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ICACHE_Init
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PeriphCommonClock_Config
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPower_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[45a]"></a>nema_bind_dst_tex</STRONG> (Thumb, 34 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_bind_dst_tex))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_bind_dst_tex &rArr; nema_bind_tex &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_tex
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::bindFrameBufferTexture()
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
</UL>

<P><STRONG><a name="[463]"></a>nema_bind_src_tex</STRONG> (Thumb, 32 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_bind_src_tex))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_bind_src_tex &rArr; nema_bind_tex &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_tex
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[4a6]"></a>nema_bind_tex</STRONG> (Thumb, 184 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_bind_tex))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_bind_tex &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_stride_size
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_enable_tiling
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_get_space
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_dst_tex
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_src_tex
</UL>

<P><STRONG><a name="[49d]"></a>nema_blender_init</STRONG> (Thumb, 106 bytes, Stack size unknown bytes, nema_blender.o(.text.nema_blender_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_blender_init &rArr; nema_set_rop_blend_mode &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_rop_blend_mode
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_readHwConfig
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_load_frag_shader
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_nema_regs
</UL>

<P><STRONG><a name="[464]"></a>nema_blit</STRONG> (Thumb, 50 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_blit))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_blit &rArr; nema_set_matrix_translate &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_matrix_translate
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_raster_rect
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[469]"></a>nema_blit_quad_fit</STRONG> (Thumb, 180 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_blit_quad_fit))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_blit_quad_fit &rArr; nema_set_matrix &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_matrix
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_raster_quad_fx
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mat3x3_quad_to_rect
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_f2fx
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[483]"></a>nema_blit_rotate</STRONG> (Thumb, 38 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_blit_rotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_blit_rotate &rArr; nema_blit_rotate_partial &rArr; nema_set_matrix &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_rotate_partial
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[4b2]"></a>nema_blit_rotate_partial</STRONG> (Thumb, 464 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_blit_rotate_partial))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_blit_rotate_partial &rArr; nema_set_matrix &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_matrix
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_raster_rect
</UL>
<BR>[Called By]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_rotate
</UL>

<P><STRONG><a name="[46b]"></a>nema_blit_tri_fit</STRONG> (Thumb, 282 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_blit_tri_fit))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_blit_tri_fit &rArr; nema_raster_triangle_fx &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_raster_triangle_fx
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_interpolate_tx_ty
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_f2fx
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[4b5]"></a>nema_buffer_create</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, nema_hal.o(.text.nema_buffer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 84 + Unknown Stack Size
<LI>Call Chain = nema_buffer_create &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_malloc_pool
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_create_pool
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_sys_init
</UL>

<P><STRONG><a name="[4a2]"></a>nema_buffer_create_pool</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, nema_hal.o(.text.nema_buffer_create_pool))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = nema_buffer_create_pool &rArr; nema_buffer_create &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stencil_buffer_create
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lut_buffer_create
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_create_sized
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_grad_create
</UL>

<P><STRONG><a name="[499]"></a>nema_buffer_destroy</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, nema_hal.o(.text.nema_buffer_destroy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_free
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;context_reset
</UL>

<P><STRONG><a name="[4c3]"></a>nema_buffer_flush</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, nema_hal.o(.text.nema_buffer_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = nema_buffer_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_force_flush
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_submit_cmdlist2
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_inline_cmd
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit_no_irq
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_reset
</UL>

<P><STRONG><a name="[4bf]"></a>nema_buffer_map</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, nema_hal.o(.text.nema_buffer_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = nema_buffer_map
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_create_sized
</UL>

<P><STRONG><a name="[49e]"></a>nema_cl_add_cmd</STRONG> (Thumb, 172 bytes, Stack size unknown bytes, nema_cmdlist.o(.text.nema_cl_add_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mutex_unlock
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mutex_lock
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_inline_cmd
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_extend_bound_cl
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_error
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_clip
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_tex_color
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_matrix_translate
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_interrupt_ctrl
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_depth_ctrl
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_nema_regs
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_rop_const_color
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_rop_blend_mode
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_raster_color
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_frag_ptr
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_const_reg
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_matmul_bypass
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_load_frag_shader
</UL>

<P><STRONG><a name="[4bd]"></a>nema_cl_bind</STRONG> (Thumb, 66 bytes, Stack size unknown bytes, nema_cmdlist.o(.text.nema_cl_bind))
<BR><BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_error
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_unbind
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_extend_bound_cl
</UL>

<P><STRONG><a name="[44f]"></a>nema_cl_bind_circular</STRONG> (Thumb, 62 bytes, Stack size unknown bytes, nema_cmdlist.o(.text.nema_cl_bind_circular))
<BR><BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_error
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_unbind
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::bindExecBuffer()
</UL>

<P><STRONG><a name="[44b]"></a>nema_cl_create_sized</STRONG> (Thumb, 80 bytes, Stack size unknown bytes, nema_cmdlist.o(.text.nema_cl_create_sized))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = nema_cl_create_sized &rArr; nema_buffer_create_pool &rArr; nema_buffer_create &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_map
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_create_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::initialize(int)
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_extend_bound_cl
</UL>

<P><STRONG><a name="[4a8]"></a>nema_cl_get_space</STRONG> (Thumb, 132 bytes, Stack size unknown bytes, nema_cmdlist.o(.text.nema_cl_get_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_extend_bound_cl
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_error
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_matrix_translate
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_matrix
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_raster_triangle_fx
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_raster_rect
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_raster_quad_fx
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_tex
</UL>

<P><STRONG><a name="[451]"></a>nema_cl_submit</STRONG> (Thumb, 66 bytes, Stack size unknown bytes, nema_cmdlist.o(.text.nema_cl_submit))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_wait_irq_cl
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_submit_cl_id
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit_no_irq
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::endFrame()
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_get_space
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::submitExecBuffer()
</UL>

<P><STRONG><a name="[4c0]"></a>nema_cl_submit_no_irq</STRONG> (Thumb, 216 bytes, Stack size unknown bytes, nema_cmdlist.o(.text.nema_cl_submit_no_irq))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_cl_submit_no_irq &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mutex_unlock
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mutex_lock
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_flush
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_wait_irq_cl
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_submit_cmdlist2
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_submit_cmdlist
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_error
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit
</UL>

<P><STRONG><a name="[4be]"></a>nema_cl_unbind</STRONG> (Thumb, 74 bytes, Stack size unknown bytes, nema_cmdlist.o(.text.nema_cl_unbind))
<BR><BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_init
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_bind_circular
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_bind
</UL>

<P><STRONG><a name="[44d]"></a>nema_cl_wait</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, nema_cmdlist.o(.text.nema_cl_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_cl_wait &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_wait_irq_cl
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_error
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::lockFrameBuffer()
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::endFrame()
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HALGPU2D::dma2dBlitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>

<P><STRONG><a name="[468]"></a>nema_enable_aa</STRONG> (Thumb, 68 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_enable_aa))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[49f]"></a>nema_enable_depth</STRONG> (Thumb, 80 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_enable_depth))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_enable_depth &rArr; nema_set_depth_ctrl &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_depth_ctrl
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_enable_tiling
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_readHwConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_nema_regs
</UL>

<P><STRONG><a name="[4d8]"></a>nema_enable_gradient</STRONG> (Thumb, 38 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_enable_gradient))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
</UL>

<P><STRONG><a name="[467]"></a>nema_enable_tiling</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_enable_tiling))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_enable_depth
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_tex
</UL>

<P><STRONG><a name="[4b0]"></a>nema_f2fx</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, nema_math.o(.text.nema_f2fx))
<BR><BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_tri_fit
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_quad_fit
</UL>

<P><STRONG><a name="[45f]"></a>nema_fill_rect</STRONG> (Thumb, 38 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_fill_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_fill_rect &rArr; nema_raster_rect &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_raster_rect
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_raster_color
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)
</UL>

<P><STRONG><a name="[4dc]"></a>nema_format_size</STRONG> (Thumb, 108 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_format_size))
<BR><BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_stride_size
</UL>

<P><STRONG><a name="[4c8]"></a>nema_host_free</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, nema_hal.o(.text.nema_host_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = nema_host_free
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_free
</UL>
<BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_extend_bound_cl
</UL>

<P><STRONG><a name="[4c7]"></a>nema_host_malloc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, nema_hal.o(.text.nema_host_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = nema_host_malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_malloc_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_paint_create
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_path_create
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_extend_bound_cl
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_grad_create
</UL>

<P><STRONG><a name="[4ca]"></a>nema_init</STRONG> (Thumb, 102 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = nema_init &rArr; nema_sys_init &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_reg_read
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_sys_init
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_unbind
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_nema_regs
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_components_init
</UL>

<P><STRONG><a name="[4b3]"></a>nema_interpolate_tx_ty</STRONG> (Thumb, 200 bytes, Stack size unknown bytes, nema_interpolators.o(.text.nema_interpolate_tx_ty))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_interpolate_tx_ty &rArr; nema_set_matrix &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mat3x3_mul
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mat3x3_adj
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_matrix
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_tri_fit
</UL>

<P><STRONG><a name="[4a9]"></a>nema_load_frag_shader</STRONG> (Thumb, 42 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_load_frag_shader))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_load_frag_shader &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blender_init
</UL>

<P><STRONG><a name="[4cd]"></a>nema_mat3x3_adj</STRONG> (Thumb, 146 bytes, Stack size unknown bytes, nema_matrix3x3.o(.text.nema_mat3x3_adj))
<BR><BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mat3x3_invert
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_interpolate_tx_ty
</UL>

<P><STRONG><a name="[4d0]"></a>nema_mat3x3_div_scalar</STRONG> (Thumb, 118 bytes, Stack size unknown bytes, nema_matrix3x3.o(.text.nema_mat3x3_div_scalar))
<BR><BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mat3x3_invert
</UL>

<P><STRONG><a name="[4cf]"></a>nema_mat3x3_invert</STRONG> (Thumb, 132 bytes, Stack size unknown bytes, nema_matrix3x3.o(.text.nema_mat3x3_invert))
<BR><BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mat3x3_div_scalar
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mat3x3_adj
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mat3x3_quad_to_rect
</UL>

<P><STRONG><a name="[4e8]"></a>nema_mat3x3_load_identity</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, nema_matrix3x3.o(.text.nema_mat3x3_load_identity), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_paint_clear
</UL>

<P><STRONG><a name="[4ce]"></a>nema_mat3x3_mul</STRONG> (Thumb, 218 bytes, Stack size unknown bytes, nema_matrix3x3.o(.text.nema_mat3x3_mul))
<BR><BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_interpolate_tx_ty
</UL>

<P><STRONG><a name="[4ae]"></a>nema_mat3x3_quad_to_rect</STRONG> (Thumb, 122 bytes, Stack size unknown bytes, nema_matrix3x3.o(.text.nema_mat3x3_quad_to_rect))
<BR><BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mat3x3_square_to_quad
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mat3x3_invert
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_quad_fit
</UL>

<P><STRONG><a name="[4d1]"></a>nema_mat3x3_square_to_quad</STRONG> (Thumb, 272 bytes, Stack size unknown bytes, nema_matrix3x3.o(.text.nema_mat3x3_square_to_quad))
<BR><BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mat3x3_quad_to_rect
</UL>

<P><STRONG><a name="[4d2]"></a>nema_matmul_bypass</STRONG> (Thumb, 18 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_matmul_bypass))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_matmul_bypass &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
</UL>

<P><STRONG><a name="[4b8]"></a>nema_mutex_lock</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, nema_hal.o(.text.nema_mutex_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nema_mutex_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_submit_cl_id
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit_no_irq
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>

<P><STRONG><a name="[4ba]"></a>nema_mutex_unlock</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, nema_hal.o(.text.nema_mutex_unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nema_mutex_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_submit_cl_id
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit_no_irq
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>

<P><STRONG><a name="[4b1]"></a>nema_raster_quad_fx</STRONG> (Thumb, 124 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_raster_quad_fx))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_raster_quad_fx &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_get_space
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_quad_fit
</UL>

<P><STRONG><a name="[4ad]"></a>nema_raster_rect</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_raster_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_raster_rect &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_get_space
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_fill_rect
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_rotate_partial
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit
</UL>

<P><STRONG><a name="[4b4]"></a>nema_raster_triangle_fx</STRONG> (Thumb, 126 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_raster_triangle_fx))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_raster_triangle_fx &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_get_space
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_tri_fit
</UL>

<P><STRONG><a name="[4d3]"></a>nema_rb_force_flush</STRONG> (Thumb, 256 bytes, Stack size unknown bytes, nema_ringbuffer.o(.text.nema_rb_force_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + Unknown Stack Size
<LI>Call Chain = nema_rb_force_flush &rArr; nema_reg_write &rArr; HAL_GPU2D_WriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_flush
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_reg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_submit_cl_id
</UL>

<P><STRONG><a name="[4d4]"></a>nema_rb_init</STRONG> (Thumb, 96 bytes, Stack size unknown bytes, nema_ringbuffer.o(.text.nema_rb_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + Unknown Stack Size
<LI>Call Chain = nema_rb_init &rArr; nema_rb_reset &rArr; nema_reg_write &rArr; HAL_GPU2D_WriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_error
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_sys_init
</UL>

<P><STRONG><a name="[4b9]"></a>nema_rb_inline_cmd</STRONG> (Thumb, 156 bytes, Stack size unknown bytes, nema_ringbuffer.o(.text.nema_rb_inline_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + Unknown Stack Size
<LI>Call Chain = nema_rb_inline_cmd &rArr; nema_reg_write &rArr; HAL_GPU2D_WriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_flush
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_reg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_submit_cl_id
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>

<P><STRONG><a name="[4d5]"></a>nema_rb_reset</STRONG> (Thumb, 130 bytes, Stack size unknown bytes, nema_ringbuffer.o(.text.nema_rb_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + Unknown Stack Size
<LI>Call Chain = nema_rb_reset &rArr; nema_reg_write &rArr; HAL_GPU2D_WriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_flush
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_reg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_init
</UL>

<P><STRONG><a name="[4c1]"></a>nema_rb_submit_cl_id</STRONG> (Thumb, 48 bytes, Stack size unknown bytes, nema_ringbuffer.o(.text.nema_rb_submit_cl_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + Unknown Stack Size
<LI>Call Chain = nema_rb_submit_cl_id &rArr; nema_rb_force_flush &rArr; nema_reg_write &rArr; HAL_GPU2D_WriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mutex_unlock
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mutex_lock
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_force_flush
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_inline_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit
</UL>

<P><STRONG><a name="[4c4]"></a>nema_rb_submit_cmdlist</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, nema_ringbuffer.o(.text.nema_rb_submit_cmdlist))
<BR><BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit_no_irq
</UL>

<P><STRONG><a name="[4c5]"></a>nema_rb_submit_cmdlist2</STRONG> (Thumb, 256 bytes, Stack size unknown bytes, nema_ringbuffer.o(.text.nema_rb_submit_cmdlist2))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + Unknown Stack Size
<LI>Call Chain = nema_rb_submit_cmdlist2 &rArr; nema_reg_write &rArr; HAL_GPU2D_WriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_flush
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_reg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit_no_irq
</UL>

<P><STRONG><a name="[4aa]"></a>nema_readHwConfig</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_readHwConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + Unknown Stack Size
<LI>Call Chain = nema_readHwConfig &rArr; nema_reg_read &rArr; HAL_GPU2D_ReadRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_enable_depth
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blender_init
</UL>

<P><STRONG><a name="[4a0]"></a>nema_readHwConfigH</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_readHwConfigH))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + Unknown Stack Size
<LI>Call Chain = nema_readHwConfigH &rArr; nema_reg_read &rArr; HAL_GPU2D_ReadRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_reg_read
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_nema_regs
</UL>

<P><STRONG><a name="[4cc]"></a>nema_reg_read</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, nema_hal.o(.text.nema_reg_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nema_reg_read &rArr; HAL_GPU2D_ReadRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_init
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_readHwConfigH
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_readHwConfig
</UL>

<P><STRONG><a name="[49b]"></a>nema_reg_write</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, nema_hal.o(.text.nema_reg_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nema_reg_write &rArr; HAL_GPU2D_WriteRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_force_flush
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_submit_cmdlist2
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_inline_cmd
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_reset
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_nema_regs
</UL>

<P><STRONG><a name="[45d]"></a>nema_rgba</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_rgba))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[45c]"></a>nema_set_blend</STRONG> (Thumb, 1386 bytes, Stack size unknown bytes, nema_blender.o(.text.nema_set_blend))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_set_blend &rArr; nema_set_rop_blend_mode &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_rop_blend_mode
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_raster_color
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_frag_ptr
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_matmul_bypass
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_load_frag_shader
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_enable_gradient
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[45b]"></a>nema_set_clip</STRONG> (Thumb, 66 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_set_clip))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_set_clip &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned char*, short, short)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[45e]"></a>nema_set_const_color</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, nema_blender.o(.text.nema_set_const_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_set_const_color &rArr; nema_set_rop_const_color &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_rop_const_color
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_const_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillBuffer(unsigned char*, unsigned short, touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[4da]"></a>nema_set_const_reg</STRONG> (Thumb, 20 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_set_const_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_set_const_reg &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_const_color
</UL>

<P><STRONG><a name="[4c6]"></a>nema_set_depth_ctrl</STRONG> (Thumb, 10 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_set_depth_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_set_depth_ctrl &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_enable_depth
</UL>

<P><STRONG><a name="[4bb]"></a>nema_set_error</STRONG> (Thumb, 16 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_set_error))
<BR><BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_init
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_wait
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit_no_irq
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_bind_circular
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_bind
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_extend_bound_cl
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_get_space
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>

<P><STRONG><a name="[4d9]"></a>nema_set_frag_ptr</STRONG> (Thumb, 10 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_set_frag_ptr))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_set_frag_ptr &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
</UL>

<P><STRONG><a name="[49c]"></a>nema_set_interrupt_ctrl</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_set_interrupt_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_set_interrupt_ctrl &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_nema_regs
</UL>

<P><STRONG><a name="[4af]"></a>nema_set_matrix</STRONG> (Thumb, 332 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_set_matrix))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_set_matrix &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_get_space
</UL>
<BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_interpolate_tx_ty
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_rotate_partial
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit_quad_fit
</UL>

<P><STRONG><a name="[4ac]"></a>nema_set_matrix_translate</STRONG> (Thumb, 104 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_set_matrix_translate))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_set_matrix_translate &rArr; nema_cl_get_space &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_get_space
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blit
</UL>

<P><STRONG><a name="[4c9]"></a>nema_set_raster_color</STRONG> (Thumb, 10 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_set_raster_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_set_raster_color &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_fill_rect
</UL>

<P><STRONG><a name="[4ab]"></a>nema_set_rop_blend_mode</STRONG> (Thumb, 10 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_set_rop_blend_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_set_rop_blend_mode &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_blend
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blender_init
</UL>

<P><STRONG><a name="[4db]"></a>nema_set_rop_const_color</STRONG> (Thumb, 10 bytes, Stack size unknown bytes, nema_programhw.o(.text.nema_set_rop_const_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_set_rop_const_color &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_const_color
</UL>

<P><STRONG><a name="[466]"></a>nema_set_tex_color</STRONG> (Thumb, 8 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_set_tex_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = nema_set_tex_color &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapQuad(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[4a7]"></a>nema_stride_size</STRONG> (Thumb, 136 bytes, Stack size unknown bytes, nema_graphics.o(.text.nema_stride_size))
<BR><BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_format_size
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_bind_tex
</UL>

<P><STRONG><a name="[4cb]"></a>nema_sys_init</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, nema_hal.o(.text.nema_sys_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = nema_sys_init &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_rb_init
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_create
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsi_malloc_init_pool
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_init
</UL>

<P><STRONG><a name="[4e5]"></a>nema_vg_get_context</STRONG> (Thumb, 10 bytes, Stack size unknown bytes, nema_vg_context.o(.text.nema_vg_get_context), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_init_stencil_prealloc
</UL>

<P><STRONG><a name="[4e6]"></a>nema_vg_get_stencil</STRONG> (Thumb, 12 bytes, Stack size unknown bytes, nema_vg_context.o(.text.nema_vg_get_stencil), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_init_stencil_prealloc
</UL>

<P><STRONG><a name="[4de]"></a>nema_vg_grad_create</STRONG> (Thumb, 40 bytes, Stack size unknown bytes, nema_vg_paint.o(.text.nema_vg_grad_create), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_create_pool
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_host_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsvg_init
</UL>

<P><STRONG><a name="[528]"></a>nema_vg_init</STRONG> (Thumb, 6 bytes, Stack size unknown bytes, nema_vg.o(.text.nema_vg_init))
<BR><BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_components_init
</UL>

<P><STRONG><a name="[4df]"></a>nema_vg_init_stencil_pool</STRONG> (Thumb, 64 bytes, Stack size unknown bytes, nema_vg.o(.text.nema_vg_init_stencil_pool), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stencil_buffer_create
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_init_stencil_prealloc
</UL>

<P><STRONG><a name="[4e1]"></a>nema_vg_init_stencil_prealloc</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, nema_vg.o(.text.nema_vg_init_stencil_prealloc), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsvg_init
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stencil_buffer_set
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_tsvg_text_max_size
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_get_stencil
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_get_context
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lut_buffer_create
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;context_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_init_stencil_pool
</UL>

<P><STRONG><a name="[4e7]"></a>nema_vg_paint_clear</STRONG> (Thumb, 72 bytes, Stack size unknown bytes, nema_vg_paint.o(.text.nema_vg_paint_clear), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_mat3x3_load_identity
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_set_error
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_paint_create
</UL>

<P><STRONG><a name="[4ea]"></a>nema_vg_paint_create</STRONG> (Thumb, 18 bytes, Stack size unknown bytes, nema_vg_paint.o(.text.nema_vg_paint_create), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_host_malloc
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_paint_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsvg_init
</UL>

<P><STRONG><a name="[4eb]"></a>nema_vg_path_create</STRONG> (Thumb, 36 bytes, Stack size unknown bytes, nema_vg_path.o(.text.nema_vg_path_create), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_host_malloc
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_set_error
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsvg_init
</UL>

<P><STRONG><a name="[4e9]"></a>nema_vg_set_error</STRONG> (Thumb, 12 bytes, Stack size unknown bytes, nema_vg_context.o(.text.nema_vg_set_error), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_path_create
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_paint_clear
</UL>

<P><STRONG><a name="[4ec]"></a>nema_wait_irq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, nema_hal.o(.text.nema_wait_irq))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_wait_irq_cl
</UL>

<P><STRONG><a name="[4c2]"></a>nema_wait_irq_cl</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, nema_hal.o(.text.nema_wait_irq_cl))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_wait_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_wait
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_submit_no_irq
</UL>

<P><STRONG><a name="[34d]"></a>osDelay</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, cmsis_os2.o(.text.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Context
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDefaultTask
</UL>

<P><STRONG><a name="[4a4]"></a>osKernelInitialize</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, cmsis_os2.o(.text.osKernelInitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = osKernelInitialize &rArr; IRQ_Context &rArr; xTaskGetSchedulerState
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Context
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a5]"></a>osKernelStart</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, cmsis_os2.o(.text.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = osKernelStart &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Setup
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Context
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d0]"></a>osMessageQueueGet</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, cmsis_os2.o(.text.osMessageQueueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Context
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>

<P><STRONG><a name="[3cd]"></a>osMessageQueueNew</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, cmsis_os2.o(.text.osMessageQueueNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = osMessageQueueNew &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Context
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[3ce]"></a>osMessageQueuePut</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, cmsis_os2.o(.text.osMessageQueuePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Context
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>

<P><STRONG><a name="[3d3]"></a>osSemaphoreAcquire</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, cmsis_os2.o(.text.osSemaphoreAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Context
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_wait_irq
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[3cc]"></a>osSemaphoreNew</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, cmsis_os2.o(.text.osSemaphoreNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = osSemaphoreNew &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Context
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_sys_init
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[2c4]"></a>osSemaphoreRelease</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, cmsis_os2.o(.text.osSemaphoreRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Context
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPU2D_CommandListCpltCallback
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[333]"></a>osThreadNew</STRONG> (Thumb, 342 bytes, Stack size 64 bytes, cmsis_os2.o(.text.osThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Context
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
</UL>

<P><STRONG><a name="[525]"></a>pvPortMalloc</STRONG> (Thumb, 488 bytes, Stack size 32 bytes, heap_4.o(.text.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[53d]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, tasks.o(.text.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[513]"></a>pxPortInitialiseStack</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, port.o(.text.pxPortInitialiseStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pxPortInitialiseStack
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[4e4]"></a>set_tsvg_text_max_size</STRONG> (Thumb, 22 bytes, Stack size unknown bytes, nema_vg_tsvg.o(.text.set_tsvg_text_max_size), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_init_stencil_prealloc
</UL>

<P><STRONG><a name="[4e0]"></a>stencil_buffer_create</STRONG> (Thumb, 42 bytes, Stack size unknown bytes, nema_vg_context.o(.text.stencil_buffer_create), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_create_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_init_stencil_pool
</UL>

<P><STRONG><a name="[4e2]"></a>stencil_buffer_set</STRONG> (Thumb, 108 bytes, Stack size unknown bytes, nema_vg_context.o(.text.stencil_buffer_set), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_init_stencil_prealloc
</UL>

<P><STRONG><a name="[345]"></a>touchgfx_components_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text.touchgfx_components_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = touchgfx_components_init &rArr; nema_init &rArr; nema_sys_init &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_init
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_init
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>

<P><STRONG><a name="[346]"></a>touchgfx_init</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, touchgfxconfiguration.o(.text.touchgfx_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = touchgfx_init &rArr; TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HALGPU2D::initialize(int) &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::setFrameBufferFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::registerTexts(touchgfx::Texts const*)
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int)
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstanceSize()
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstance()
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>

<P><STRONG><a name="[354]"></a>touchgfx_taskEntry</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text.touchgfx_taskEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx_taskEntry &rArr; touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFX_Task
</UL>

<P><STRONG><a name="[4b7]"></a>tsi_free</STRONG> (Thumb, 200 bytes, Stack size unknown bytes, tsi_malloc.o(.text.tsi_free))
<BR><BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_destroy
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_host_free
</UL>

<P><STRONG><a name="[4dd]"></a>tsi_malloc_init_pool</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, tsi_malloc.o(.text.tsi_malloc_init_pool))
<BR><BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_sys_init
</UL>

<P><STRONG><a name="[4b6]"></a>tsi_malloc_pool</STRONG> (Thumb, 130 bytes, Stack size unknown bytes, tsi_malloc.o(.text.tsi_malloc_pool))
<BR><BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_host_malloc
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_buffer_create
</UL>

<P><STRONG><a name="[4e3]"></a>tsvg_init</STRONG> (Thumb, 46 bytes, Stack size unknown bytes, nema_vg_tsvg.o(.text.tsvg_init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_paint_create
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_path_create
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_grad_create
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_vg_init_stencil_prealloc
</UL>

<P><STRONG><a name="[50d]"></a>ulSetInterruptMask</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, portasm.o(.text.ulSetInterruptMask))
<BR><BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSVCHandler_C
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskExitError
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
</UL>

<P><STRONG><a name="[35d]"></a>__cxa_guard_acquire</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, cxa_guard.cpp.o(.text.unlikely.__cxa_guard_acquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 60 + Unknown Stack Size
<LI>Call Chain = __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::getTextureMapperDrawScanLine(touchgfx::TextureSurface const&, unsigned short, unsigned char)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_20_4bpp()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SamsungOneKorean_700_v2_0_hinted_20200508_30_4bpp()
</UL>

<P><STRONG><a name="[35f]"></a>__cxa_guard_release</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cxa_guard.cpp.o(.text.unlikely.__cxa_guard_release))
<BR><BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::getTextureMapperDrawScanLine(touchgfx::TextureSurface const&, unsigned short, unsigned char)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_20_4bpp()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SamsungOneKorean_700_v2_0_hinted_20200508_30_4bpp()
</UL>

<P><STRONG><a name="[4fe]"></a>uxListRemove</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, list.o(.text.uxListRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
</UL>

<P><STRONG><a name="[534]"></a>vApplicationGetIdleTaskMemory</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, cmsis_os2.o(.text.vApplicationGetIdleTaskMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vApplicationGetIdleTaskMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[541]"></a>vApplicationGetTimerTaskMemory</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, cmsis_os2.o(.text.vApplicationGetTimerTaskMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vApplicationGetTimerTaskMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[50e]"></a>vApplicationIdleHook</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_freertos.o(.text.vApplicationIdleHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vApplicationIdleHook &rArr; vTaskSetApplicationTaskTag &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[52e]"></a>vClearInterruptMask</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, portasm.o(.text.vClearInterruptMask))
<BR><BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[506]"></a>vListInitialise</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, list.o(.text.vListInitialise))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
</UL>

<P><STRONG><a name="[512]"></a>vListInitialiseItem</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, list.o(.text.vListInitialiseItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = vListInitialiseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[4ff]"></a>vListInsert</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, list.o(.text.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[501]"></a>vPortEnterCritical</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, port.o(.text.vPortEnterCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortEnterCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[503]"></a>vPortExitCritical</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, port.o(.text.vPortExitCritical))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClearInterruptMask
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[50c]"></a>vPortFree</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, heap_4.o(.text.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[9c]"></a>vPortSVCHandler_C</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, port.o(.text.vPortSVCHandler_C))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vPortSVCHandler_C
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vRestoreContextOfFirstTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> portasm.o(.text.SVC_Handler)
</UL>
<P><STRONG><a name="[538]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, port.o(.text.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[504]"></a>vPortYield</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, port.o(.text.vPortYield))
<BR><BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[4f3]"></a>vQueueAddToRegistry</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, queue.o(.text.vQueueAddToRegistry))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vQueueAddToRegistry
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[4f7]"></a>vQueueDelete</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, queue.o(.text.vQueueDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[530]"></a>vQueueUnregisterQueue</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, queue.o(.text.vQueueUnregisterQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vQueueUnregisterQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[51e]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, queue.o(.text.vQueueWaitForMessageRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[52f]"></a>vRestoreContextOfFirstTask</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, portasm.o(.text.vRestoreContextOfFirstTask))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSVCHandler_C
</UL>

<P><STRONG><a name="[539]"></a>vStartFirstTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, portasm.o(.text.vStartFirstTask))
<BR><BR>[Called By]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[4ed]"></a>vTaskDelay</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, tasks.o(.text.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[53b]"></a>vTaskInternalSetTimeOutState</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, tasks.o(.text.vTaskInternalSetTimeOutState))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = vTaskInternalSetTimeOutState
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[524]"></a>vTaskMissedYield</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tasks.o(.text.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[532]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tasks.o(.text.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[531]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, tasks.o(.text.vTaskPlaceOnEventListRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[533]"></a>vTaskPriorityDisinheritAfterTimeout</STRONG> (Thumb, 342 bytes, Stack size 40 bytes, tasks.o(.text.vTaskPriorityDisinheritAfterTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPriorityDisinheritAfterTimeout &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[52d]"></a>vTaskSetApplicationTaskTag</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, tasks.o(.text.vTaskSetApplicationTaskTag))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vTaskSetApplicationTaskTag &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationIdleHook
</UL>

<P><STRONG><a name="[4ee]"></a>vTaskStartScheduler</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, tasks.o(.text.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetIdleTaskMemory
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCallApplicationTaskHook
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[51c]"></a>vTaskSuspendAll</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tasks.o(.text.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[271]"></a>vTaskSwitchContext</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, tasks.o(.text.vTaskSwitchContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vTaskSwitchContext &rArr; xTaskCallApplicationTaskHook
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCallApplicationTaskHook
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[537]"></a>xPortStartScheduler</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, port.o(.text.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xPortStartScheduler &rArr; vTaskSwitchContext &rArr; xTaskCallApplicationTaskHook
</UL>
<BR>[Calls]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStartFirstTask
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskExitError
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[34e]"></a>xPortSysTickHandler</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, port.o(.text.xPortSysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClearInterruptMask
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[4f9]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, queue.o(.text.xQueueCreateCountingSemaphore))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[4f8]"></a>xQueueCreateCountingSemaphoreStatic</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, queue.o(.text.xQueueCreateCountingSemaphoreStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[4f2]"></a>xQueueGenericCreate</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, queue.o(.text.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>

<P><STRONG><a name="[4f1]"></a>xQueueGenericCreateStatic</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, queue.o(.text.xQueueGenericCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
</UL>

<P><STRONG><a name="[510]"></a>xQueueGenericReset</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, queue.o(.text.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[4f5]"></a>xQueueGenericSend</STRONG> (Thumb, 446 bytes, Stack size 64 bytes, queue.o(.text.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[4f4]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 278 bytes, Stack size 56 bytes, queue.o(.text.xQueueGenericSendFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClearInterruptMask
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>

<P><STRONG><a name="[4fa]"></a>xQueueGiveFromISR</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, queue.o(.text.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClearInterruptMask
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>

<P><STRONG><a name="[4f0]"></a>xQueueReceive</STRONG> (Thumb, 398 bytes, Stack size 56 bytes, queue.o(.text.xQueueReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[4ef]"></a>xQueueReceiveFromISR</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, queue.o(.text.xQueueReceiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xQueueReceiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClearInterruptMask
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>

<P><STRONG><a name="[4f6]"></a>xQueueSemaphoreTake</STRONG> (Thumb, 464 bytes, Stack size 56 bytes, queue.o(.text.xQueueSemaphoreTake))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetDisinheritPriorityAfterTimeout
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>

<P><STRONG><a name="[536]"></a>xTaskCallApplicationTaskHook</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, tasks.o(.text.xTaskCallApplicationTaskHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskCallApplicationTaskHook
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>

<P><STRONG><a name="[53c]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, tasks.o(.text.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskCheckForTimeOut &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[4fc]"></a>xTaskCreate</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, tasks.o(.text.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>

<P><STRONG><a name="[4fb]"></a>xTaskCreateStatic</STRONG> (Thumb, 164 bytes, Stack size 64 bytes, tasks.o(.text.xTaskCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[322]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, tasks.o(.text.xTaskGetSchedulerState))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Context
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[51f]"></a>xTaskGetTickCount</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, tasks.o(.text.xTaskGetTickCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[53a]"></a>xTaskIncrementTick</STRONG> (Thumb, 606 bytes, Stack size 40 bytes, tasks.o(.text.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>

<P><STRONG><a name="[50b]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, tasks.o(.text.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xTaskPriorityDisinherit &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[53e]"></a>xTaskPriorityInherit</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, tasks.o(.text.xTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xTaskPriorityInherit &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[523]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 396 bytes, Stack size 40 bytes, tasks.o(.text.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[51d]"></a>xTaskResumeAll</STRONG> (Thumb, 526 bytes, Stack size 32 bytes, tasks.o(.text.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[535]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, timers.o(.text.xTimerCreateTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetTimerTaskMemory
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[278]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[58c]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[58d]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[351]"></a>SystemPower_Config</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(.text.SystemPower_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemPower_Config &rArr; HAL_PWREx_ConfigSupply
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_DisableUCPDDeadBattery
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33f]"></a>OSPI_OctalModeCfg</STRONG> (Thumb, 356 bytes, Stack size 168 bytes, octospi.o(.text.OSPI_OctalModeCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 396 + Unknown Stack Size
<LI>Call Chain = OSPI_OctalModeCfg &rArr; OSPI_AutoPollingMemReady &rArr; HAL_XSPI_Command &rArr; XSPI_ConfigCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Transmit
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_AutoPolling
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Command
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_AutoPollingMemReady
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[340]"></a>OSPI_MemoryMappedMode</STRONG> (Thumb, 154 bytes, Stack size 120 bytes, octospi.o(.text.OSPI_MemoryMappedMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = OSPI_MemoryMappedMode &rArr; OSPI_WriteEnable &rArr; HAL_XSPI_Command &rArr; XSPI_ConfigCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MemoryMapped
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Command
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_WriteEnable
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_OCTOSPI1_Init
</UL>

<P><STRONG><a name="[347]"></a>OSPI_AutoPollingMemReady</STRONG> (Thumb, 136 bytes, Stack size 136 bytes, octospi.o(.text.OSPI_AutoPollingMemReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = OSPI_AutoPollingMemReady &rArr; HAL_XSPI_Command &rArr; XSPI_ConfigCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_AutoPolling
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Command
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_OctalModeCfg
</UL>

<P><STRONG><a name="[348]"></a>OSPI_WriteEnable</STRONG> (Thumb, 176 bytes, Stack size 136 bytes, octospi.o(.text.OSPI_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = OSPI_WriteEnable &rArr; HAL_XSPI_Command &rArr; XSPI_ConfigCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_AutoPolling
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Command
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSPI_MemoryMappedMode
</UL>

<P><STRONG><a name="[35a]"></a>__cxx_global_var_init</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, touchgfxhal.o(.text.__cxx_global_var_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __cxx_global_var_init &rArr; __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::KeySampler::KeySampler__sub_object()
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXHAL.cpp
</UL>

<P><STRONG><a name="[36b]"></a>__NVIC_SetPriority(IRQn_Type, unsigned int)</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, touchgfxhal.o(.text._ZL18__NVIC_SetPriority9IRQn_Typej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority(IRQn_Type, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::configureInterrupts()
</UL>

<P><STRONG><a name="[369]"></a>__NVIC_EnableIRQ(IRQn_Type)</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, touchgfxhal.o(.text._ZL16__NVIC_EnableIRQ9IRQn_Type))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableInterrupts()
</UL>

<P><STRONG><a name="[36a]"></a>__NVIC_DisableIRQ(IRQn_Type)</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, touchgfxhal.o(.text._ZL17__NVIC_DisableIRQ9IRQn_Type))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::disableInterrupts()
</UL>

<P><STRONG><a name="[26e]"></a>_GLOBAL__sub_I_TouchGFXHAL.cpp</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, touchgfxhal.o(.text._GLOBAL__sub_I_TouchGFXHAL.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _GLOBAL__sub_I_TouchGFXHAL.cpp &rArr; __cxx_global_var_init &rArr; __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.init_array)
</UL>
<P><STRONG><a name="[355]"></a>__cxx_global_var_init</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text.__cxx_global_var_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __cxx_global_var_init &rArr; __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::STM32TouchController__sub_object()
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[356]"></a>__cxx_global_var_init.1</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text.__cxx_global_var_init.1))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __cxx_global_var_init.1 &rArr; __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[357]"></a>__cxx_global_var_init.2</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text.__cxx_global_var_init.2))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = __cxx_global_var_init.2 &rArr; __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCDGPU2D::LCDGPU2D()
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[358]"></a>__cxx_global_var_init.3</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text.__cxx_global_var_init.3))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __cxx_global_var_init.3 &rArr; __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[359]"></a>__cxx_global_var_init.4</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, touchgfxconfiguration.o(.text.__cxx_global_var_init.4))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = __cxx_global_var_init.4 &rArr; TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[26f]"></a>_GLOBAL__sub_I_TouchGFXConfiguration.cpp</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._GLOBAL__sub_I_TouchGFXConfiguration.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _GLOBAL__sub_I_TouchGFXConfiguration.cpp &rArr; __cxx_global_var_init.4 &rArr; TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.4
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.3
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.1
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.init_array)
</UL>
<P><STRONG><a name="[3af]"></a>__NVIC_SetPriority(IRQn_Type, unsigned int)</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(.text._ZL18__NVIC_SetPriority9IRQn_Typej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority(IRQn_Type, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::configureInterrupts()
</UL>

<P><STRONG><a name="[3ad]"></a>__NVIC_EnableIRQ(IRQn_Type)</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, touchgfxgeneratedhal.o(.text._ZL16__NVIC_EnableIRQ9IRQn_Type))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableInterrupts()
</UL>

<P><STRONG><a name="[3ae]"></a>__NVIC_DisableIRQ(IRQn_Type)</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, touchgfxgeneratedhal.o(.text._ZL17__NVIC_DisableIRQ9IRQn_Type))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::disableInterrupts()
</UL>

<P><STRONG><a name="[3c5]"></a>__NVIC_DisableIRQ(IRQn_Type)</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, stm32dma.o(.text._ZL17__NVIC_DisableIRQ9IRQn_Type))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::~STM32DMA()
</UL>

<P><STRONG><a name="[a3]"></a>DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, stm32dma.o(.text._ZL22DMA2D_XferCpltCallbackP21__DMA2D_HandleTypeDef))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*) &rArr; touchgfx::HAL::signalDMAInterrupt()
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getInstance()
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::signalDMAInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.text._ZN8STM32DMA10initializeEv)
</UL>
<P><STRONG><a name="[3bd]"></a>__NVIC_EnableIRQ(IRQn_Type)</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, stm32dma.o(.text._ZL16__NVIC_EnableIRQ9IRQn_Type))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::initialize()
</UL>

<P><STRONG><a name="[2ec]"></a>__NVIC_SetPriorityGrouping</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32u5xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>

<P><STRONG><a name="[2e9]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32u5xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[2ea]"></a>NVIC_EncodePriority</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, stm32u5xx_hal_cortex.o(.text.NVIC_EncodePriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NVIC_EncodePriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[2eb]"></a>__NVIC_SetPriority</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32u5xx_hal_cortex.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[2e8]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, stm32u5xx_hal_cortex.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[2f2]"></a>RCC_SetFlashLatencyFromMSIRange</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, stm32u5xx_hal_rcc.o(.text.RCC_SetFlashLatencyFromMSIRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_GetVoltageRange
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[2ed]"></a>RCCEx_PLL2_Config</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, stm32u5xx_hal_rcc_ex.o(.text.RCCEx_PLL2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[2ee]"></a>RCCEx_PLL3_Config</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, stm32u5xx_hal_rcc_ex.o(.text.RCCEx_PLL3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[2bc]"></a>DSI_ConfigBandControl</STRONG> (Thumb, 358 bytes, Stack size 4 bytes, stm32u5xx_hal_dsi.o(.text.DSI_ConfigBandControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = DSI_ConfigBandControl
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Init
</UL>

<P><STRONG><a name="[2bd]"></a>DSI_SetWrapperPLLTuning</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, stm32u5xx_hal_dsi.o(.text.DSI_SetWrapperPLLTuning))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DSI_SetWrapperPLLTuning
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_Init
</UL>

<P><STRONG><a name="[2a6]"></a>DSI_ShortWrite</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, stm32u5xx_hal_dsi.o(.text.DSI_ShortWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DSI_ShortWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_ShortWrite
</UL>

<P><STRONG><a name="[2bf]"></a>DSI_ConfigPacketHeader</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32u5xx_hal_dsi.o(.text.DSI_ConfigPacketHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DSI_ConfigPacketHeader
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DSI_LongWrite
</UL>

<P><STRONG><a name="[315]"></a>XSPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, stm32u5xx_hal_xspi.o(.text.XSPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = XSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_MemoryMapped
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Transmit
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_AutoPolling
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Command
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Init
</UL>

<P><STRONG><a name="[317]"></a>XSPI_ConfigCmd</STRONG> (Thumb, 954 bytes, Stack size 44 bytes, stm32u5xx_hal_xspi.o(.text.XSPI_ConfigCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = XSPI_ConfigCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_XSPI_Command
</UL>

<P><STRONG><a name="[2d8]"></a>LTDC_SetConfig</STRONG> (Thumb, 628 bytes, Stack size 24 bytes, stm32u5xx_hal_ltdc.o(.text.LTDC_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAddress
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
</UL>

<P><STRONG><a name="[309]"></a>TIM_OC1_SetConfig</STRONG> (Thumb, 500 bytes, Stack size 20 bytes, stm32u5xx_hal_tim.o(.text.TIM_OC1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[30b]"></a>TIM_OC3_SetConfig</STRONG> (Thumb, 526 bytes, Stack size 20 bytes, stm32u5xx_hal_tim.o(.text.TIM_OC3_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC3_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[30c]"></a>TIM_OC4_SetConfig</STRONG> (Thumb, 528 bytes, Stack size 20 bytes, stm32u5xx_hal_tim.o(.text.TIM_OC4_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC4_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[30d]"></a>TIM_OC5_SetConfig</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, stm32u5xx_hal_tim.o(.text.TIM_OC5_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC5_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[30e]"></a>TIM_OC6_SetConfig</STRONG> (Thumb, 292 bytes, Stack size 20 bytes, stm32u5xx_hal_tim.o(.text.TIM_OC6_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC6_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[2f7]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, stm32u5xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[2f8]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, stm32u5xx_hal_tim.o(.text.TIM_ITRx_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_ITRx_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[2f9]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, stm32u5xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_TI2_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[403]"></a>touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**) &rArr; touchgfx::Application::clearAllTimerWidgets()
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::clearAllTimerWidgets()
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[40b]"></a>touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::bindTransition(touchgfx::Transition&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontScreenPresenter* touchgfx::makeTransition&lang;FontScreenView, FontScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainScreenPresenter* touchgfx::makeTransition&lang;MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[35b]"></a>__cxx_global_var_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, typedtextdatabase.o(.text.__cxx_global_var_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = __cxx_global_var_init &rArr; getFont_SamsungOneKorean_700_v2_0_hinted_20200508_30_4bpp() &rArr; touchgfx::FusedFont::FusedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::GeneratedFont::GeneratedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdanab_20_4bpp()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_20_4bpp()
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_SamsungOneKorean_700_v2_0_hinted_20200508_30_4bpp()
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[270]"></a>_GLOBAL__sub_I_typedtextdatabase.cpp</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, typedtextdatabase.o(.text._GLOBAL__sub_I_typedtextdatabase.cpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = _GLOBAL__sub_I_typedtextdatabase.cpp &rArr; __cxx_global_var_init &rArr; getFont_SamsungOneKorean_700_v2_0_hinted_20200508_30_4bpp() &rArr; touchgfx::FusedFont::FusedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*) &rArr; touchgfx::GeneratedFont::GeneratedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*, touchgfx::FontContextualFormsTable const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> typedtextdatabase.o(.init_array)
</UL>
<P><STRONG><a name="[50f]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, queue.o(.text.prvInitialiseNewQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
</UL>

<P><STRONG><a name="[50a]"></a>prvCopyDataToQueue</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, queue.o(.text.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; uxListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[516]"></a>prvIsQueueFull</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, queue.o(.text.prvIsQueueFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvIsQueueFull &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[522]"></a>prvUnlockQueue</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, queue.o(.text.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[515]"></a>prvIsQueueEmpty</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, queue.o(.text.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvIsQueueEmpty &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[53f]"></a>prvGetDisinheritPriorityAfterTimeout</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, queue.o(.text.prvGetDisinheritPriorityAfterTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvGetDisinheritPriorityAfterTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[509]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, queue.o(.text.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[511]"></a>prvInitialiseNewTask</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, tasks.o(.text.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>
<BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>

<P><STRONG><a name="[500]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 334 bytes, Stack size 16 bytes, tasks.o(.text.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = prvAddNewTaskToReadyList &rArr; prvInitialiseTaskLists &rArr; vListInitialise
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
</UL>
<BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>

<P><STRONG><a name="[502]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, tasks.o(.text.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = prvInitialiseTaskLists &rArr; vListInitialise
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[540]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, tasks.o(.text.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[508]"></a>prvDeleteTCB</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, tasks.o(.text.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[4fd]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, tasks.o(.text.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
</UL>

<P><STRONG><a name="[ac]"></a>prvIdleTask</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, tasks.o(.text.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationIdleHook
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(.text.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[507]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, tasks.o(.text.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[505]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, timers.o(.text.prvCheckForValidListAndQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[ad]"></a>prvTimerTask</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, timers.o(.text.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; prvProcessExpiredTimer &rArr; prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetNextExpireTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text.xTimerCreateTimerTask)
</UL>
<P><STRONG><a name="[521]"></a>prvGetNextExpireTime</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, timers.o(.text.prvGetNextExpireTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvGetNextExpireTime
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[51b]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, timers.o(.text.prvProcessTimerOrBlockTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; prvProcessExpiredTimer &rArr; prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[519]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 354 bytes, Stack size 48 bytes, timers.o(.text.prvProcessReceivedCommands))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; prvProcessExpiredTimer &rArr; prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvReloadTimer
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[51a]"></a>prvSampleTimeNow</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, timers.o(.text.prvSampleTimeNow))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; prvProcessExpiredTimer &rArr; prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[517]"></a>prvProcessExpiredTimer</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, timers.o(.text.prvProcessExpiredTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = prvProcessExpiredTimer &rArr; prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvReloadTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[514]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, timers.o(.text.prvInsertTimerInActiveList))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvReloadTimer
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[518]"></a>prvReloadTimer</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, timers.o(.text.prvReloadTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[520]"></a>prvSwitchTimerLists</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, timers.o(.text.prvSwitchTimerLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = prvSwitchTimerLists &rArr; prvProcessExpiredTimer &rArr; prvReloadTimer &rArr; prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[aa]"></a>prvTaskExitError</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, port.o(.text.prvTaskExitError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvTaskExitError
</UL>
<BR>[Calls]<UL><LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMask
</UL>
<BR>[Called By]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> port.o(.text.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[321]"></a>IRQ_Context</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, cmsis_os2.o(.text.IRQ_Context))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IRQ_Context &rArr; xTaskGetSchedulerState
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[34b]"></a>SVC_Setup</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cmsis_os2.o(.text.SVC_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SVC_Setup &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[34c]"></a>__NVIC_SetPriority</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, cmsis_os2.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Setup
</UL>

<P><STRONG><a name="[526]"></a>prvHeapInit</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, heap_4.o(.text.prvHeapInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[527]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 198 bytes, Stack size 12 bytes, heap_4.o(.text.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[49a]"></a>init_nema_regs</STRONG> (Thumb, 126 bytes, Stack size unknown bytes, nema_graphics.o(.text.init_nema_regs))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = init_nema_regs &rArr; nema_set_interrupt_ctrl &rArr; nema_cl_add_cmd &rArr; nema_cl_submit &rArr; nema_wait_irq_cl &rArr; nema_wait_irq &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_reg_write
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_interrupt_ctrl
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_readHwConfigH
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_enable_depth
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_blender_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_init
</UL>

<P><STRONG><a name="[4bc]"></a>nema_extend_bound_cl</STRONG> (Thumb, 380 bytes, Stack size unknown bytes, nema_cmdlist.o(.text.nema_extend_bound_cl))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = nema_extend_bound_cl &rArr; nema_cl_create_sized &rArr; nema_buffer_create_pool &rArr; nema_buffer_create &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_host_malloc
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_host_free
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_create_sized
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_bind
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_set_error
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_get_space
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nema_cl_add_cmd
</UL>

<P><STRONG><a name="[273]"></a>__cxa_end_cleanup_impl</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text.__cxa_end_cleanup_impl), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = __cxa_end_cleanup_impl &rArr; std::terminate() &rArr; std::__terminate(void (*)()) &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
